proj_name = vi

!ifndef vi_autodepends
vi_autodepends = .AUTODEPEND
!endif

!ifeq host_os win
!ifeq host_cpu 386
!define win_386
!endif
!endif

.EXTENSIONS: .ch .dh
.EXTENSIONS: .ctl .dyn
.EXTENSIONS: .vi

name = $(proj_name).exe
!ifdef win_386
lname = $(proj_name).rex
!else
lname = $(name)
!endif

PROJECT : $(name) .symbolic

additional_cleanup = *.dh *.ch

!include cproj.mif
!include deftarg.mif
!include defrule.mif

# get the right version of tool depending on host platform
!ifdef __OS2__
edbind = $(vi_dir)\bind\os2386\edbind
parsectl = $(vi_dir)\ctl\os2386\parsectl
parsedyn = $(vi_dir)\ctl\os2386\parsedyn
!else ifdef __MSDOS__
edbind = $(vi_dir)\bind\dos386\edbind
parsectl = $(vi_dir)\ctl\dos386\parsectl
parsedyn = $(vi_dir)\ctl\dos386\parsedyn
!else ifdef __LINUXMIPS__
edbind = $(vi_dir)/bind/linuxmps/edbind.exe
parsectl = $(vi_dir)/ctl/linuxmps/parsectl.exe
parsedyn = $(vi_dir)/ctl/linuxmps/parsedyn.exe
!else ifdef __LINUX__
edbind = $(vi_dir)/bind/linux386/edbind.exe
parsectl = $(vi_dir)/ctl/linux386/parsectl.exe
parsedyn = $(vi_dir)/ctl/linux386/parsedyn.exe
!else ifdef __NTAXP__
edbind = $(vi_dir)\bind\ntaxp\edbind
parsectl = $(vi_dir)\ctl\ntaxp\parsectl
parsedyn = $(vi_dir)\ctl\ntaxp\parsedyn
!else
edbind = $(vi_dir)\bind\nt386\edbind
parsectl = $(vi_dir)\ctl\nt386\parsectl
parsedyn = $(vi_dir)\ctl\nt386\parsedyn
!endif

!include ../mif/rcsdll.mif
!include ../mif/include.mif
!include ../mif/objects.mif
!include ../mif/compile.mif
!include ../mif/special.mif
!include ../mif/link.mif

.h : $(vi_dir)/h
.ctl : $(vi_dir)/ctl
.dyn : $(vi_dir)/ctl

!ifdef bind
.vi : $(vi_dir)/dat
!include $(vi_dir)/dat/videps.mif
!else
videps =
!endif

!ifdef sys_windowed
bindextra = -d$(vi_dir)\dat\winbind.dat
!endif

# systems where version resources must be added to .EXE
!ifdef sys_windowed
version_res_nt_386 = version.res
!endif

!ifdef bootstrap
$(name) : $(special) $(objs) $(cl_objs) $(objsroot) $(objinit) $(libs) $(other) $(videps) $(mifdep) version.obj $(res_objs)
        $(cl) $(clflags) $< $(cl_libs)
!else
$(name) : $(special) $(objs) $(objsroot) $(objinit) $(libs) $(other) $(videps) $(mifdep) version.obj $(version_res_$(host_os)_$(host_cpu))
        $(linker) $(lflags) name $(lname) file version.obj file {$(objsroot)} $(start_flags) file {$(objinit)} $(more_flags) file {$(objs)} $(final_flags) $(rcsdll)
!ifdef sys_windowed
!ifdef win_386
        wbind $(lname) -s $(lang_root)/binw/win386.ext -R -q $(proj_name).res
        rm $(lname)
!else ifdef version_res_$(host_os)_$(host_cpu)
        $(rc) -k $(proj_name).res $^@ -fr=$(version_res_$(host_os)_$(host_cpu))
!else
        $(rc) -k $(proj_name).res $^@
!endif
        # don't bind - it screws up everything - BBB
!else
        set edpath=$(vi_dir)/dat
        $(edbind) $(bindextra) -q $(name)
!endif
!endif

./genverrc.exe : $(fe_misc_dir)/c/genverrc.c
        $(bld_cl) $[@ $(wcl_util_opts) -D_VERSION=$(bld_ver)

!ifndef patch_level
patch_level=0
!endif

version.res: ./genverrc.exe ../win/exever.rc $(fe_misc_dir)/c/genverrc.c
        $[@ ../win/exever.rc version.rc $$ $(proj_name) $(patch_level)
        $(rc) $(rc_flags) $(inc_path) version.rc -fo=$^@


!ifeq host_os win
!ifeq host_cpu i86
tags : ../win/tags .SYMBOLIC

../win/tags: vi.tag
    ctags @vi.tag -f$^@
!endif
!endif
