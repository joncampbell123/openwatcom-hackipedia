#
# Master makefile for creating trap files
#

description = 'Open Watcom Debugger Trap File'

!ifdef test

sys_x86_os2   = sys os2
sys_x86_os2v2 = sys os2v2
sys_x86_win   = sys windows
sys_x86_nt    = sys nt
sys_x86_dos   = sys dos
sys_x86_rdos  = sys rdos_dll
sys_x86_qnx   = sys qnx
sys_x86_linux = sys linux

sys_axp_nt    = sys ntaxp

targ_x86_os2   = $(xname)cli1.exe
targ_x86_os2v2 = $(xname)cli.exe
targ_x86_qnx   = $(xname)cli.qnx
targ_x86_linux = $(xname)cli.exe
targ_x86_win   = $(xname)cliw.exe
targ_x86_dos   = $(xname)cli.exe
targ_x86_rdos  = $(xname)cli.exe
targ_x86_nt    = $(xname)cli.exe
targ_x86_nto   = $(xname)cli.exe

targ_axp_nt    = $(xname)cli.exe

targ_ppc_linux = $(xname)cli.exe
targ_mips_linux = $(xname)cli.exe

TRAP_common_objs = testcli.obj
TRAP_remote_objs =

!else

sys_x86_os2  = sys os2 dll initinstance &
            export TrapInit_.1 &
            export TrapFini_.2 &
            export TrapRequest_.3 &
            op modname=$^& &
            option description $(description)
sys_x86_os2v2  = sys os2v2 dll initinstance terminstance &
            export TrapInit_.1 &
            export TrapFini_.2 &
            export TrapRequest_.3 &
            op modname=$^& &
            option description $(description)
sys_x86_win  = sys windows_dll &
            export WEP.1 RESIDENT &
            export TRAPINIT.2 &
            export TRAPFINI.3 &
            export TRAPREQUEST.4 &
            export INPUTHOOK.5 &
            export INFOFUNCTION.6 &
            export HARDMODECHECK.7 &
            export GETHWNDFUNC.8 &
            export SETHARDMODE.12 &
            export UNLOCKINPUT.13 &
            op modname=$^& &
#            option rwr &
            option description $(description)
sys_x86_nt   = sys nt_dll initinstance opt dosseg &
            export TrapInit_.1 &
            export TrapFini_.2 &
            export TrapRequest_.3 &
!ifneq reg_dll 1 # build regular DLL and don't try any funny stuff
            export InfoFunction_.4 &
            export InterruptProgram_.5 &
            export Terminate_.6 &
# remove reference to run-time code
            alias __DLLstart_='_LibMain@12' &
!endif
            op modname=$^& &
            option description $(description) &
!ifneq release 0
            op offset=0x6e900000
!endif

sys_x86_dos  = sys dos


sys_x86_rdos = sys rdos_dll &
               export TrapInit_ &
               export TrapFini_ &
               export TrapRequest_ &
               op offset=0xdb000000 &
               libpath $(clib_dir)/library/rdos.386/mf_r

sys_x86_qnx  = sys pharlap rex disable 1014, 1023

# For now Linux is linked as a PE DLL file since we have code to load
# this under Linux already. Eventually it should be an ELF shared library.

!ifdef __LINUX__
extra_libpath = libpath $(clib_dir)/library/linux.386/mf_r
!else
extra_libpath = libpath $(lang_root)/lib386/linux
!endif
sys_x86_linux = form windows nt dll opt dosseg $(extra_libpath) &
            export TrapLoad_.1 &
            option description $(description)

sys_axp_nt   = sys ntaxp_dll initinstance &
            export TrapInit.1 &
            export TrapFini.2 &
            export TrapRequest.3 &
            export InfoFunction.4 &
            export InterruptProgram.5 &
            export Terminate.6 &
            option description $(description) &
            op modname=$^&

sys_ppc_nt   = sys ntppc_dll initinstance &
            export TrapInit.1 &
            export TrapFini.2 &
            export TrapRequest.3 &
            export InfoFunction.4 &
            export InterruptProgram.5 &
            export Terminate.6 &
            option description $(description) &
            op modname=$^&

targ_x86_os2    = $(xname).dll
targ_x86_os2v2  = $(xname).d32
targ_x86_qnx    = $(xname).trp
!ifdef bootstrap
targ_x86_linux  = $(xname).so
!else
targ_x86_linux  = $(xname).trp
!endif
targ_x86_win    = $(xname).dll
targ_x86_dos    = $(xname).trp
targ_x86_rdos   = $(xname).dll
targ_x86_nt     = $(xname).dll
!ifdef bootstrap
targ_x86_nto    = $(xname).so
!else
targ_x86_nto    = $(xname).trp
!endif

targ_axp_nt     = $(xname).dll

targ_ppc_nt     = $(xname).dll

targ_ppc_linux  = $(xname).so
targ_mips_linux = $(xname).so

!ifeq os linux
TRAP_common_objs = lnxstrt.obj
!else ifeq os os2v2
TRAP_common_objs = os2strt2.obj
!else
TRAP_common_objs = $(os)strt.obj
!endif

TRAP_remote_objs = remote.obj
!ifeq os win
TRAP_remote_objs += winstub.obj
!else ifeq os nt
TRAP_remote_objs += ntstub.obj
!endif

!endif
