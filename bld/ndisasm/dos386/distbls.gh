#include <stddef.h>
/* file created by DISBUILD.C */

const unsigned char AXPMaxInsName = 13;

const unsigned char PPCMaxInsName = 7;

const unsigned char X86MaxInsName = 11;

const unsigned char X64MaxInsName = 9;

const unsigned char SPARCMaxInsName = 8;

const unsigned char MIPSMaxInsName = 9;


const unsigned char DisStringTable[] = {
/*0000*/ 128,129,130,131,141,'j','s','r','_','c',130,'o','r',131,'o','u',
/*0010*/ 't',130,'i','n','e',136,139,'p','r','e',133,'f','e','t',130,'c',
/*0020*/ 'h','n','t','a',138,'p','r','e','f','e','t','c','h',130,'t','0',
/*0030*/ 138,'p','r','e','f','e','t','c','h',130,'t','1',138,'p','r','e',
/*0040*/ 'f','e','t','c','h',130,'t','2',138,'m','a','s','k',131,132,134,
/*0050*/ 'm','o','v','d','q','u',138,'p','u','n','p','c','k','h','q','d',
/*0060*/ 'q',138,'p','u','n','p','c','k','l','q','d','q',131,135,137,'c',
/*0070*/ 'm','p',132,'x','c','h','g','8',129,130,'b',137,'p','r','e','f',
/*0080*/ 'e','t','c','h','w',137,'c','v','t','t','p',130,'s','2','p','i',
/*0090*/ 137,'p','u','n','p','c','k','h','b','w',137,'p','u','n','p','c',
/*00a0*/ 'k','h','d','q',137,'p','u','n','p','c','k','h','w','d',137,'p',
/*00b0*/ 'u','n','p','c','k',130,'l','b','w',137,'p','u','n','p','c','k',
/*00c0*/ 130,131,'l','d','q',137,'p','u','n','p','c','k',130,'l','w','d',
/*00d0*/ 137,'c','v','t','t','p','d','2','d','q',137,'c','v','t','t','p',
/*00e0*/ 'd','2','p','i',133,137,'c','v','t','t',130,'s','d','2',130,'s',
/*00f0*/ 'i',137,'c','v','t','t','p','s','2','d','q',137,'c','v','t','t',
/*0100*/ 130,'s','s','2','s',133,'i',132,137,'s','y','n','c',' ',' ',' ',
/*0110*/ ' ',' ',132,136,'c',130,'a',130,'l','l','_','p','a','l',136,'s',
/*0120*/ 'y','s',133,'e','n','t','e','r',135,136,'f','c','m','o','v','n',
/*0130*/ 130,'b','e',135,136,'f','n',130,'s','t','e','n','v','w',136,'f',
/*0140*/ 'n','s','t','e','n','v','d',133,136,'p','f',130,'r','c','p','i',
/*0150*/ 't','1',136,'p','f','r','c','p','i','t','2',136,'p','f',130,'r',
/*0160*/ 's','q','i','t','1',136,'c','v',130,'t','d','q','2','p',130,'s',
/*0170*/ 136,'c','v','t','p','i','2','p','s',136,'c','v','t','p','s','2',
/*0180*/ 'p','d',136,'c','v','t','p','s','2','p','i',136,'m','a','s','k',
/*0190*/ 132,'m','o','v','q',136,'m','o','v','m','s','k','p',130,'s',136,
/*01a0*/ 'p','a','c','k','s','s','d','w',136,'p','a','c','k','s',130,'s',
/*01b0*/ 'w','b',136,'p','a','c','k','u','s','w','b',136,'p','m','o','v',
/*01c0*/ 'm','s','k','b',136,'u','n','p','c','k','h','p','s',136,'u','n',
/*01d0*/ 'p','c','k','l','p','s',131,132,136,'a','d',130,132,'d',131,133,
/*01e0*/ 's','u','b','p','d',136,'c','v','t','p','d','2','p','i',136,'c',
/*01f0*/ 'v','t','p','d','2','p','s',136,'c','v','t','p','i','2','p','d',
/*0200*/ 136,'c','v','t','p','s','2','d','q',136,'m','o','v','m','s','k',
/*0210*/ 'p','d',136,'u','n','p','c','k','h','p','d',136,'u','n','p','c',
/*0220*/ 'k','l','p',132,'d',136,'a','d','d',133,'s','u','b','p','s',136,
/*0230*/ 'c','v','t','p','d','2','d','q',136,'c','v','t','s','d','2','s',
/*0240*/ 'i',136,'c','v','t','s','d','2','s','s',136,'c','v','t','s','i',
/*0250*/ '2','s','d',136,'c','v','t','d','q','2','p','d',136,'c','v','t',
/*0260*/ 's','i','2','s','s',136,'c','v','t','s','s','2','s','d',136,'c',
/*0270*/ 'v','t','s','s','2','s','i',132,136,'m','o','v',130,'s','h','d',
/*0280*/ 'u','p',136,'m','o','v',131,'s',131,'l','d','u','p',134,136,'t',
/*0290*/ 132,133,'a','d','d','c','c','t','v',134,136,'t',133,'s','u',130,
/*02a0*/ 131,'b','c','c','t','v',135,'f','e','t','c','h','_','m',133,135,
/*02b0*/ 'c','m','o','v','l','b','c',135,'c','m','o','v','l',131,'b','s',
/*02c0*/ 134,135,'f',133,134,'c','m','o','v','e','q',135,'f',133,134,'c',
/*02d0*/ 'm','o','v','g','e',135,'f',134,'c','m','o','v','g','t',135,'f',
/*02e0*/ 134,'c','m','o','v','l','e',135,'f',134,'c','m','o','v','l','t',
/*02f0*/ 135,'f',134,'c','m','o','v','n','e',135,'m','f','_',130,'f','p',
/*0300*/ 'c','r',135,'m','t','_','f','p','c','r',134,135,'f','n','m','a',
/*0310*/ 'd','d','s',134,135,'f','n','m',132,'s','u','b',131,'s',135,'t',
/*0320*/ 'l','b','s','y','n',130,'c',132,134,135,'l','o','o','p','n','z',
/*0330*/ 'w',135,'l','o','o','p','n','z','d',135,'s','y','s','e','x','i',
/*0340*/ 't',135,'f',131,'d','e',130,'c','s','t','p',135,'f',131,'i','n',
/*0350*/ 'c','s','t','p',131,134,135,'f','l','d','e','n','v','w',135,'f',
/*0360*/ 'l','d','e','n','v','d',135,'f','r','n',130,'d',131,'i','n','t',
/*0370*/ 134,135,'f','r','s','t','o','r','w',135,'f','r','s','t','o','r',
/*0380*/ 'd',134,135,'f','n',132,'s','a','v','e','w',135,'f','n','s','a',
/*0390*/ 'v','e','d',134,135,'f',133,134,'c','m','o','v','b','e',135,'f',
/*03a0*/ 'c','m','o','v','n','u',130,132,135,'f','s','i','n','c','o','s',
/*03b0*/ 131,134,135,'f','s','t','e','n','v','w',135,'f','s','t','e','n',
/*03c0*/ 'v','d',133,134,135,'f','u','c','o','m','p','p',135,'f','x','r',
/*03d0*/ 's','t','o','r',135,'f','x','t',130,'r','a','c','t',133,135,'f',
/*03e0*/ 'y','l','2','x','p','1',134,135,'f','u','c','o','m','i','p',135,
/*03f0*/ 'p','a','v','g','u',130,'s','b',135,'p',134,'f',133,'c','m','p',
/*0400*/ 'e','q',135,'p','f','c','m','p','g','e',135,'p','f','c','m','p',
/*0410*/ 'g','t',135,'p','f','p','n','a','c','c',135,'p','f','r',132,'s',
/*0420*/ 'q','r','t',135,'p',131,'m','u',130,'l','h','r','w',135,'c','l',
/*0430*/ 'f','l','u',131,132,'s','h',135,'l','d','m','x',131,'c','s','r',
/*0440*/ 135,'m','o','n','i','t','o','r',135,'m','o','v','l','h','p','s',
/*0450*/ 135,'m','o','v','h','l','p','s',135,'m','o','v','n','t','p','s',
/*0460*/ 135,'p',132,'a','d','d','u','s','b',135,'p','a','d','d','u','s',
/*0470*/ 'w',135,'p','c','m','p','e','q','b',135,'p','c','m','p','e','q',
/*0480*/ 'd',135,'p','c','m','p','e','q','w',135,'p','c','m','p','g','t',
/*0490*/ 'b',135,'p','c','m','p','g','t','d',135,'p','c','m','p','g',130,
/*04a0*/ 't','w',135,'p','m','a','d','d','w','d',135,'p','m','u',131,'l',
/*04b0*/ 'h','u','w',135,'p','m','u','l','u','d','q',135,'p',132,'s','u',
/*04c0*/ 'b','u','s','b',135,'p','s','u','b','u',131,'s','w',135,'r',134,
/*04d0*/ 's','q','r','t','p','s',135,'s','t','m','x','c','s','r',135,'u',
/*04e0*/ 134,'c','o','m','i','s','s',135,'m','o','v','n','t','d','q',135,
/*04f0*/ 'm','o','v','n','t','p','d',135,'u',134,'c','o','m','i','s','d',
/*0500*/ 135,'m','o','v','d','d','u','p',135,'m','o','v','d','q','2','q',
/*0510*/ 135,'p','s','h','u','f','l','w',135,'m','o','v','q','2','d','q',
/*0520*/ 135,'p','s','h','u','f','h','w',135,'r',134,'s','q','r','t','s',
/*0530*/ 's',135,'l','o','o','p','n','z','q',135,'s','y','s','c','a','l',
/*0540*/ 131,'l',131,134,135,'l','d','s','t','u',130,'b','a',135,'r',130,
/*0550*/ 'e','s','t','o','r','e',131,132,134,135,'b','g','e','z','a','l',
/*0560*/ 'l',130,131,132,134,135,'b','l','t','z','a','l','l',135,'f','l',
/*0570*/ 'o','o','r','.','l',135,'f','l','o','o','r','.','w',135,'r','o',
/*0580*/ 'u','n','d','.','l',135,'r','o','u','n','d','.','w',135,'t','r',
/*0590*/ 'u','n',132,'c','.',131,'l',135,'t','r','u','n','c','.','w',134,
/*05a0*/ 'c','m','p','b','g','e',134,'c','m','p','u','l','e',134,'c','m',
/*05b0*/ 'p','u','l','t',130,134,'s','4',132,'a','d',130,'d','l',134,'s',
/*05c0*/ '4',132,'a','d','d','q',134,'s','4',132,'s','u','b','l',134,'s',
/*05d0*/ '4',132,'s','u','b','q',134,'s','8','a','d','d','l',134,'s','8',
/*05e0*/ 'a','d','d','q',134,'s','8','s','u','b','l',134,'s','8','s','u',
/*05f0*/ 'b','q',131,134,'z','a','p',131,'n','o','t',134,'c','m','p',131,
/*0600*/ 't','e','q',134,'c','m','p',131,'t','l','t',134,'c','m','p','t',
/*0610*/ 'l','e',134,'c','m','p','t','u','n',134,'c','m','p','g','e','q',
/*0620*/ 134,'c','m','p','g','l','t',134,'c','m','p','g',131,'l','e',132,
/*0630*/ 133,134,'a','d','d','i','c','.',131,132,134,'a','n','d','i','s',
/*0640*/ '.',134,'c','n','t','l','z','d',134,'c','n','t','l','z','w',133,
/*0650*/ 134,'c','r',132,133,'a','n','d','c',134,'c','r',132,'n','a','n',
/*0660*/ 'd',132,134,'d','c',130,131,'b','t','s','t',133,134,'f','c','t',
/*0670*/ 'i','d','z',133,134,'f','c','t','i','w','z',133,134,'f','m','a',
/*0680*/ 'd','d','s',133,134,'f','m','s','u','b','s',134,'m','a','s','k',
/*0690*/ 'i','r',132,134,'m',131,'f','s','r','i','n',134,'m','t','f','s',
/*06a0*/ 'b','0',134,'m','t','f','s','b','1',133,134,'m','t','f','s','f',
/*06b0*/ 'i',132,134,'m','t','s','r','i','n',133,134,'m','u','l','h','d',
/*06c0*/ 132,133,'u',133,134,'m','u','l','h','w','u',133,134,'r','l','d',
/*06d0*/ 'i','c','l',134,'r','l','d','i','c','r',134,'r','l','d','i','m',
/*06e0*/ 'i',134,'r','l','w','i','m','i',134,'r','l','w','i','n','m',132,
/*06f0*/ 133,134,'s','t','f','d','u','x',132,133,134,'s','t','f','s','u',
/*0700*/ 'x',131,134,'s','t','h',130,'b','r','x',131,134,'s','t','w','b',
/*0710*/ 'r','x',132,134,'s','u','b','f','i','c',134,'s','u','b','f','m',
/*0720*/ 'e',134,'s','u','b','f','z','e',134,'c','m','o','v','n','o',133,
/*0730*/ 134,'c','m','o','v','a','e',134,'c','m','o','v','n','s',133,134,
/*0740*/ 'c','m','o','v','p','o',134,'i','n','v','l','p','g',133,134,'l',
/*0750*/ 'o','o','p','z','w',134,'l','o','o','p','z','d',132,133,134,'p',
/*0760*/ 'u','s','h','a','d',133,134,'p','u','s','h','f','d',134,'w','b',
/*0770*/ 132,'i','n','v','d',134,'f','n','c','l','e','x',133,134,'f','i',
/*0780*/ 'c','o','m','p',132,133,134,'f','c','o','m','p','p',133,134,'f',
/*0790*/ 132,'i',131,'d','i','v','r',132,133,134,'f','d','i','v','r','p',
/*07a0*/ 134,'f','n','d','i','s','i',134,'f','n','i','n','i','t',134,'f',
/*07b0*/ 132,'s','e','t','p','m',132,134,'f','i',131,'s','t','t','p',133,
/*07c0*/ 134,'f','i','s','u','b','r',132,133,134,'f','s','u','b','r','p',
/*07d0*/ 134,'f',131,'l','d','l','2','t',134,'f','l','d','l','2','e',134,
/*07e0*/ 'f','l','d','l','g','2',134,'f','l','d','l','n','2',134,'f','p',
/*07f0*/ 130,'a','t','a','n',133,134,'f','p','r','e','m','1',133,134,'f',
/*0800*/ 's','a','v','e','w',134,'f','s','a','v','e','d',134,'f','c','m',
/*0810*/ 'o','v','u',134,'f','s','c','a','l','e',134,'f','n',131,'s','t',
/*0820*/ 'c','w',134,'f','n',131,'s','t','s','w',134,'f','x','s','a','v',
/*0830*/ 'e',133,134,'f','c','o','m','i','p',134,'p','f','n','a','c','c',
/*0840*/ 133,134,'p','f','s','u','b','r',134,'p',132,'s','w','a','p','d',
/*0850*/ 132,134,'a','n','d','n','p','s',134,'l','f','e','n','c','e',134,
/*0860*/ 'm','f','e','n','c','e',134,'m','o','v','a','p','s',134,'m','o',
/*0870*/ 'v','h','p','s',134,'m','o','v','l','p','s',134,'m','o','v','n',
/*0880*/ 't','i',134,'m','o','v','n','t','q',134,'m','o','v','u','p','s',
/*0890*/ 134,'p','a','d','d','s','b',134,'p','a','d','d','s','w',134,'p',
/*08a0*/ 'e','x','t','r','w',134,'p',131,'i','n',131,'s','r','w',134,'p',
/*08b0*/ 'm',130,'a','x','s','w',134,'p','m','a','x','u','b',134,'p','m',
/*08c0*/ 'i','n','s','w',134,'p','m','i','n','u','b',134,'p','m','u','l',
/*08d0*/ 'h','w',134,'p',132,133,'m','u','l','l','w',134,'p','s','a','d',
/*08e0*/ 'b','w',134,'p','s','h','u','f','w',134,'p','s','u','b','s','b',
/*08f0*/ 134,'p','s','u','b','s','w',134,'s','f','e','n','c','e',134,'s',
/*0900*/ 'h','u','f','p','s',134,'a','n','d','n','p',130,'d',134,'h',133,
/*0910*/ 'a','d','d','p','d',134,'h','s','u','b','p','d',134,'m','o','v',
/*0920*/ 'a','p','d',134,'m','o','v','d','q','a',134,'m','o','v','h','p',
/*0930*/ 'd',134,'m','o','v','l','p','d',134,'m','o','v','u','p','d',134,
/*0940*/ 'p','s','h','u','f','d',133,134,'p',131,'s','l','l','d','q',133,
/*0950*/ 134,'p',131,'s','r','l','d','q',134,'s','h','u','f','p','d',134,
/*0960*/ 's','q','r','t','p','d',134,'h',133,'a','d','d','p','s',134,'h',
/*0970*/ 's','u','b','p','s',134,'s','q','r','t',131,'s','d',134,'l','o',
/*0980*/ 'o','p','z','q',133,134,'m','o','v','s','x','d',134,'p','u','s',
/*0990*/ 'h',130,'f','q',134,'s','w','a','p',130,'g','s',134,'s','y',131,
/*09a0*/ 's',131,'r','e','t',134,'e','f','l','a','g','s',134,'r','f','l',
/*09b0*/ 'a','g','s',133,134,'f','s','q','r','t','s',134,'f','s','q','r',
/*09c0*/ 't','d',134,'f','s','q','r','t','q',134,'f','c','m','p','e','s',
/*09d0*/ 134,'f','c','m','p','e','d',134,'f',132,'s','m','u','l','d',134,
/*09e0*/ 'f','d',132,'m','u','l','q',134,'a','n','d','n','c',130,'c',132,
/*09f0*/ 134,'x',131,'n',131,132,'o','r','c','c',132,134,'a','d',130,'d',
/*0a00*/ 'x','c','c',132,134,'s','u',130,'b','x','c','c',132,134,'m','u',
/*0a10*/ 'l','s','c','c',134,'u','m','u','l','c','c',134,'s','m','u','l',
/*0a20*/ 'c','c',132,134,'u','d','i','v','c','c',132,134,'s','d','i','v',
/*0a30*/ 'c','c',133,134,'d',133,'a','d','d','i','u',133,134,'d',132,133,
/*0a40*/ 'm','u','l','t','u',132,134,'d','s','l','l','3','2',132,134,'d',
/*0a50*/ 131,'s','r',130,'a','3','2',132,134,'d','s','r','l','3','2',133,
/*0a60*/ 134,'c','.','n','g','l','e',134,'c','e','i','l','.','l',134,'c',
/*0a70*/ 'e','i','l','.','w',133,'p','a','l','1','9',133,'p','a','l','1',
/*0a80*/ 'b',133,'p','a','l','1','d',133,'p','a','l','1','e',133,'p','a',
/*0a90*/ 'l','1','f',133,'l','d','l','_','l',133,'l','d','q','_','l',133,
/*0aa0*/ 'l','d','q','_','u',133,'s','t','l','_','c',131,133,'s','t','q',
/*0ab0*/ '_','c',133,'s','t','q','_','u',133,'t','r','a','p','b',132,133,
/*0ac0*/ 'c','m','p','l','e',133,'c','m','p','l','t',131,133,'o','r','n',
/*0ad0*/ 'o','t',133,'e','x','t',131,'b','l',133,'e','x','t','l','h',133,
/*0ae0*/ 'e','x','t','l','l',133,'e','x','t','q','h',133,'e','x','t','q',
/*0af0*/ 'l',133,'e','x','t','w','h',133,'e','x','t','w','l',133,'i','n',
/*0b00*/ 's','b','l',133,'i','n','s','l','h',133,'i','n','s','l','l',133,
/*0b10*/ 'i','n','s','q','h',133,'i','n','s','q','l',133,'i','n','s','w',
/*0b20*/ 'h',133,'i','n',131,'s','w','l',133,'m','s','k','b','l',133,'m',
/*0b30*/ 's','k','l','h',133,'m','s','k','l','l',133,'m','s','k','q','h',
/*0b40*/ 133,'m','s','k','q','l',133,'m','s','k','w','h',133,'m','s','k',
/*0b50*/ 'w','l',132,133,'c','p','y','s','e',133,'c','p','y','s','n',133,
/*0b60*/ 'c','v','t','l','q',133,'c','v','t','q','l',133,'c','v','t','q',
/*0b70*/ 's',133,'c','v','t','q','t',133,'c','v','t','t','q',133,'c','v',
/*0b80*/ 't','d','g',133,'c','v','t','g','f',133,'c','v','t','g','d',133,
/*0b90*/ 'c','v','t','q','f',133,'c','v','t','q','g',133,'c','v','t','g',
/*0ba0*/ 'q',133,'$',132,'z','e','r','o',133,'a','d','d','i','s',133,'a',
/*0bb0*/ 'd','d','m','e',133,'a','d','d','z','e',133,'a','n','d','i','.',
/*0bc0*/ 133,'b','c','c','t','r',133,'c','m','p','l','i',133,'c','r',131,
/*0bd0*/ 'e','q','v',133,'c','r','n','o',131,'r',132,133,'c',131,'r','o',
/*0be0*/ 'r','c',133,'c','r',131,'x','o','r',133,'d','c','b',131,'s',131,
/*0bf0*/ 't',132,133,'d','i','v','d','u',132,133,'d','i','v','w','u',133,
/*0c00*/ 'e','c','i','w','x',133,'e','c','o','w','x',133,'e','i','e','i',
/*0c10*/ 'o',133,'e','x','t','s','b',133,'e','x','t','s','h',133,'e','x',
/*0c20*/ 't','s','w',132,133,'f','a','d','d','s',133,'f','c','f','i','d',
/*0c30*/ 133,'f','c','m','p','o',133,'f','c','m','p','u',133,'f',132,'d',
/*0c40*/ 'i','v','s',132,133,'f','m','u','l','s',133,'f',132,'n',131,'a',
/*0c50*/ 'b','s',133,'f','s','u','b','s',131,132,133,'l','b','z','u','x',
/*0c60*/ 131,133,'l','d','a','r','x',131,132,133,'l','f','d','u','x',131,
/*0c70*/ 132,133,'l','f','s','u','x',131,132,133,'l','h','a','u','x',133,
/*0c80*/ 'l','h','b','r','x',131,132,133,'l','h','z','u','x',133,'l','s',
/*0c90*/ 'c','b','x',131,133,'l','w','a','u','x',133,'l','w','a','r','x',
/*0ca0*/ 133,'l','w','b','r','x',131,132,133,'l','w','z','u','x',133,'m',
/*0cb0*/ 'a','s','k','g',132,133,'m','c','r','f','s',133,'m','c','r','x',
/*0cc0*/ 'r',133,'m','f','m','s','r',133,'m','f','s','p','r',133,'m','t',
/*0cd0*/ 'c','r','f',133,'m','t','m','s','r',133,'m','t','s','p','r',133,
/*0ce0*/ 'm','u','l','l','d',133,'m','u','l','l','i',133,'r','l','d','c',
/*0cf0*/ 'l',133,'r','l','d','c','r',133,'r','l','w','n','m',133,'s','l',
/*0d00*/ 'b','i','a',133,'s','l','b','i','e',133,'s','l','l','i','q',132,
/*0d10*/ 133,'s','r','a','d','i',133,'s','r','a','i','q',132,133,'s','r',
/*0d20*/ 'a','w','i',133,'s','r','l','i','q',131,132,133,'s','t','b','u',
/*0d30*/ 'x',133,'s','t','d','c','x',132,133,'s','t','d','u','x',133,'s',
/*0d40*/ 't','f','d','x',133,'s','t','f','s','x',132,133,'s','t','h','u',
/*0d50*/ 'x',133,'s','t','s','w','i',133,'s','t','s','w','x',133,'s','t',
/*0d60*/ 'w','c','x',132,133,'s','t','w','u','x',133,'s','u','b','f','c',
/*0d70*/ 133,'s','u','b','f','e',133,'t','l','b','i','a',133,'t','l','b',
/*0d80*/ 'i','e',132,133,'x',131,132,'o','r','i','s',132,133,'c','r','b',
/*0d90*/ '1','0',133,'c','r','b','1','1',133,'c','r','b','1','2',133,'c',
/*0da0*/ 'r','b','1','3',133,'c','r','b','1','4',133,'c','r','b','1','5',
/*0db0*/ 133,'c','r','b','1','6',133,'c','r','b','1','7',133,'c','r','b',
/*0dc0*/ '1','8',133,'c','r','b','1','9',132,133,'c','r','b','2','0',133,
/*0dd0*/ 'c','r','b','2','1',133,'c','r','b','2','2',133,'c','r','b','2',
/*0de0*/ '3',133,'c','r','b','2','4',133,'c','r','b','2','5',133,'c','r',
/*0df0*/ 'b','2','6',133,'c','r','b','2','7',133,'c','r','b','2','8',133,
/*0e00*/ 'c','r','b','2','9',132,133,'c','r','b','3','0',133,'c','r','b',
/*0e10*/ '3','1',131,133,'r','e','p','n','e',133,'f',132,'w','a','i','t',
/*0e20*/ 133,'b','o','u','n','d',133,'b','s','w','a','p',133,'c','m','o',
/*0e30*/ 'v','o',133,'c','m','o','v','s',133,'c','p','u','i','d',132,133,
/*0e40*/ 'i','r','e','t','d',130,133,'j',131,'e','c','x','z',133,'l','e',
/*0e50*/ 'a','v','e',133,'l','o','o','p','w',133,'l','o','o','p','d',133,
/*0e60*/ 'm','o','v','z','x',133,'p','u','s','h','w',133,'p','u','s','h',
/*0e70*/ 'd',131,132,133,'p','o','p','a','d',132,133,'p','o','p','f','d',
/*0e80*/ 133,'r','d','m','s','r',133,'r','d','p','m','c',133,'r','d','t',
/*0e90*/ 's','c',133,'s','e','t','n','o',132,133,'s','e','t','a','e',133,
/*0ea0*/ 's','e',131,'t','n','e',132,133,'s','e','t','b','e',133,'s','e',
/*0eb0*/ 't','n','s',133,'s','e','t','p','o',132,133,'s','e',131,'t','g',
/*0ec0*/ 'e',132,133,'s','e','t','l','e',133,'w','r','m','s','r',130,133,
/*0ed0*/ 'f','2','x','m','1',133,'f','i',132,'a','d','d',133,'f','a','d',
/*0ee0*/ 'd','p',133,'f','b','s','t','p',133,'f','c','l','e','x',133,'f',
/*0ef0*/ 'd','i','v','p',133,'f','d','i','s','i',133,'f','n','e','n','i',
/*0f00*/ 133,'f','f','r','e','e',133,'f','i','n','i','t',133,'f',132,'i',
/*0f10*/ 132,'m','u','l',133,'f','m','u','l','p',133,'f','i','s','t','p',
/*0f20*/ 133,'f','s','u','b','p',133,'f','l','d','c','w',133,'f','l','d',
/*0f30*/ 'p','i',133,'f','p','t','a','n',133,'f','s','t','c','w',133,'f',
/*0f40*/ 's','t','s','w',133,'f',132,'e','m','m',130,'s',133,'3','d','n',
/*0f50*/ 'o','w',133,'p','f','2','i','d',133,'p','f','2','i','w',133,'p',
/*0f60*/ 'f','a','c','c',133,'p','f','a','d','d',133,'p','f','m','a','x',
/*0f70*/ 133,'p','f','m','i','n',133,'p','f','m','u','l',133,'p','i','2',
/*0f80*/ 'f','d',133,'p','i','2','f','w',133,'a','n','d','p','s',133,'c',
/*0f90*/ 'm','p','p','s',133,'d','i','v','p','s',133,'m','a','x','p','s',
/*0fa0*/ 133,'m','i','n','p','s',133,'m','u','l','p','s',133,'m','w','a',
/*0fb0*/ 'i','t',133,'p','a','d','d','b',133,'p','a','d','d','d',133,'p',
/*0fc0*/ 'a','d','d','q',133,'p','a','d','d','w',132,133,'p','a','n','d',
/*0fd0*/ 'n',133,'p','a','v','g','b',133,'p','a','v','g','w',133,'p',132,
/*0fe0*/ 's','l','l','q',133,'p','s','l','l','w',133,'p','s','r','a','d',
/*0ff0*/ 133,'p','s','r','a','w',133,'p',132,'s','r','l','q',133,'p','s',
/*1000*/ 'r','l','w',133,'p','s','u','b','b',133,'p','s','u','b','d',133,
/*1010*/ 'p','s','u','b','q',133,'p','s','u','b','w',133,'r','c','p','p',
/*1020*/ 's',133,'x',132,'o','r','p','s',133,'a','n','d','p','d',133,'c',
/*1030*/ 'm','p','p',132,'d',133,'d','i','v','p','d',133,'m','a','x','p',
/*1040*/ 'd',133,'m','i','n','p','d',133,'m','u','l','p','d',133,'x',132,
/*1050*/ 'o','r','p','d',133,'a','d','d','s','d',132,133,'c','m','p','s',
/*1060*/ 'd',133,'d','i','v','s','d',131,133,'l','d','d','q','u',133,'m',
/*1070*/ 'a','x','s','d',133,'m','i','n','s','d',133,'m','o','v','s','d',
/*1080*/ 133,'m','u','l','s','d',133,'s','u','b','s','d',133,'a','d','d',
/*1090*/ 's','s',133,'c','m','p','s','s',133,'d','i','v','s','s',133,'m',
/*10a0*/ 'a','x','s','s',133,'m','i','n','s','s',133,'m','o','v','s','s',
/*10b0*/ 133,'m','u',131,'l','s','s',133,'p','a','u','s','e',133,'r','c',
/*10c0*/ 'p','s','s',133,'s','u','b','s','s',133,'s','t','(','1',')',133,
/*10d0*/ 's','t','(','2',')',133,'s','t','(','3',')',133,'s','t','(','4',
/*10e0*/ ')',133,'s','t','(','5',')',133,'s','t','(','6',')',133,'s','t',
/*10f0*/ '(','7',')',133,'d',132,'w','o','r','d',133,'q','w','o','r','d',
/*1100*/ 133,'t',132,'b','y','t','e',133,'f','w','o',131,'r','d',133,'i',
/*1110*/ 'r','e','t','q',130,133,'j',131,'r','c','x','z',133,'l','o','o',
/*1120*/ 'p','q',133,'p','o','p','f','q',133,'f','i','t','o','s',133,'f',
/*1130*/ 'd','t','o','s',133,'f','q','t','o','s',133,'f','i','t','o','d',
/*1140*/ 133,'f','s','t','o','d',133,'f','q','t','o','d',133,'f','i','t',
/*1150*/ 'o','q',133,'f','s','t','o','q',133,'f','d','t','o','q',133,'f',
/*1160*/ 's','t','o','i',133,'f','d','t','o','i',133,'f','q','t','o','i',
/*1170*/ 133,'f','m','o','v','s',132,133,'f',131,'n','e','g','s',132,133,
/*1180*/ 'f','a','b','s','s',133,'f','c','m','p','s',133,'f','c','m','p',
/*1190*/ 'd',133,'f','c','m','p','q',133,'f','a','d','d','d',133,'f','a',
/*11a0*/ 'd','d','q',133,'f','s','u','b','d',133,'f','s','u','b','q',133,
/*11b0*/ 'f','m','u','l','d',133,'f','m','u','l','q',133,'f','d','i','v',
/*11c0*/ 'd',133,'f','d','i','v','q',132,133,'l','d','s','b','a',132,133,
/*11d0*/ 'l','d','s','h','a',132,133,'l','d','u','b','a',132,133,'l','d',
/*11e0*/ 'u','h','a',133,'s','w','a','p','a',133,'s','e','t','h','i',133,
/*11f0*/ 'o','r','n','c','c',133,'x','o','r','c','c',131,132,133,'f','b',
/*1200*/ 'u','g','e',132,133,'f','b','u','l','e',131,132,133,'c','b','1',
/*1210*/ '2','3',131,132,133,'c','b','0','2','3',132,133,'c','b','0','1',
/*1220*/ '3',133,'c','b','0','1','2',132,133,'a','s',130,131,'r','1','0',
/*1230*/ 133,'a','s',131,'r','1','1',133,'a','s',131,'r','1','2',133,'a',
/*1240*/ 's',131,'r','1','3',133,'a','s',131,'r','1','4',133,'a','s',131,
/*1250*/ 'r','1','5',133,'a','s',131,'r','1','6',133,'a','s',131,'r','1',
/*1260*/ '7',133,'a','s',131,'r','1','8',133,'a','s',131,'r','1','9',132,
/*1270*/ 133,'a','s',130,131,'r','2','0',133,'a','s',131,'r','2','1',133,
/*1280*/ 'a','s',131,'r','2','2',133,'a','s',131,'r','2','3',133,'a','s',
/*1290*/ 131,'r','2','4',133,'a','s',131,'r','2','5',133,'a','s',131,'r',
/*12a0*/ '2','6',133,'a','s',131,'r','2','7',133,'a','s',131,'r','2','8',
/*12b0*/ 133,'a','s',131,'r','2','9',132,133,'a','s',130,131,'r','3','0',
/*12c0*/ 133,'a','s',131,'r','3','1',132,133,'b','c','0','f','l',132,133,
/*12d0*/ 'b','c','0','t','l',133,'b','g','e','z','l',131,132,133,'b','g',
/*12e0*/ 't','z','l',132,133,'b','l','e','z','l',133,'b','l','t','z','l',
/*12f0*/ 133,'b','r','e','a','k',133,'c','a','c','h','e',133,'d','a','d',
/*1300*/ 'd','u',133,'d',132,'d','i','v','u',133,'d',132,'m','f','c','0',
/*1310*/ 133,'d',132,'m','t','c','0',133,'d',132,'s','l','l','v',133,'d',
/*1320*/ 132,'s','r','a','v',133,'d',132,'s','r','l','v',133,'d','s','u',
/*1330*/ 'b','u',131,132,133,'s','l','t','i','u',132,133,'t','g','e','i',
/*1340*/ 'u',133,'t','l','b','w','i',133,'t','l','b','w','r',132,133,'t',
/*1350*/ 'l','t','i','u',132,133,'b','c','1','f','l',132,133,'b','c','1',
/*1360*/ 't','l',133,'c','.','u','e','q',133,'c','.','o','l','t',133,'c',
/*1370*/ '.','u','l','t',133,'c','.','o','l','e',133,'c','.','u','l','e',
/*1380*/ 133,'c','.','s','e','q',133,'c','.','n','g','e',133,'c','.','n',
/*1390*/ 'g','t',133,'c','v','t','.','d',133,'c','v','t','.','l',133,'c',
/*13a0*/ 'v','t','.','s',133,'c','v','t','.','w',133,'d',132,'m','f','c',
/*13b0*/ '1',133,'d',132,'m','t','c','1',132,'?','?','?','?',132,'l','d',
/*13c0*/ 130,'a','h',132,'r','p','c','c',132,'e','x','c','b',131,132,'f',
/*13d0*/ 131,'b','e','q',131,132,'f','b','l','t',132,'f','b','l','e',131,
/*13e0*/ 132,'f',130,131,'b','n','e',131,132,'f','b','g','e',132,'f','b',
/*13f0*/ 'g','t',132,'b','l','b','c',132,'b','l','b','s',132,'a','d','d',
/*1400*/ 't',132,'d','i','v','t',132,'s','u','b','t',132,'a','d','d','g',
/*1410*/ 132,'d','i','v','f',132,'d','i','v','g',132,'m','u',131,'l','g',
/*1420*/ 132,'s','u','b','g',131,132,'$',130,131,'f','1','0',132,'$',131,
/*1430*/ 'f','1','1',132,'$',131,'f','1','2',132,'$',131,'f','1','3',132,
/*1440*/ '$',131,'f','1','4',132,'$',131,'f','1','5',132,'$',131,'f','1',
/*1450*/ '6',132,'$',131,'f','1','7',132,'$',131,'f','1','8',132,'$',131,
/*1460*/ 'f','1','9',131,132,'$',131,'f','2','0',132,'$',131,'f','2','1',
/*1470*/ 132,'$',131,'f','2','2',132,'$',131,'f','2','3',132,'$',131,'f',
/*1480*/ '2','4',132,'$',131,'f','2','5',132,'$',131,'f','2','6',132,'$',
/*1490*/ 131,'f','2','7',132,'$',131,'f','2','8',132,'$',131,'f','2','9',
/*14a0*/ 131,132,'$',130,131,'f','3','0',132,'$',131,'f','3','1',131,132,
/*14b0*/ '$',131,'t','1','0',132,'$',131,'t','1','1',132,'$',131,'t','1',
/*14c0*/ '2',132,'a','d','d','e',132,'b','c','l',131,'r',131,132,'c','l',
/*14d0*/ 'c','s',132,'c','m','p','i',132,'d','c','b','f',132,'d','c','b',
/*14e0*/ 'i',132,'d','c','b','z',131,132,'d','o','z','i',132,'f',131,'r',
/*14f0*/ 's','p',132,'i','c','b','i',132,'l','b','z','x',132,'l','d','u',
/*1500*/ 'x',132,'l','f','d','x',132,'l','f','s','x',132,'l','h','a','x',
/*1510*/ 132,'l','h','z','x',132,'l','s','w','i',132,'l','s','w','x',132,
/*1520*/ 'l','w','a','x',132,'l','w','z','x',132,'m','f','c','r',132,'m',
/*1530*/ 'f','f','s',132,'r','l','m','i',132,'r','r','i','b',131,132,'s',
/*1540*/ 'l','e','q',132,'s','l','i','q',132,'s','r','a','q',132,'s','r',
/*1550*/ 'e','a',132,'s','r','e','q',132,'s','r','i','q',132,'s','t','b',
/*1560*/ 'x',132,'s','t','d','x',132,'s','t','h','x',132,'s','t','m','w',
/*1570*/ 132,'s','t','w','x',132,'c','r','b','0',132,'c','r','b','4',132,
/*1580*/ 'c','r','b','5',132,'c','r','b','6',132,'c','r','b','7',132,'c',
/*1590*/ 'r','b','8',132,'c','r','b','9',132,'r','t','o','c',132,'o','p',
/*15a0*/ 'n','d',132,'a','d','d','r',132,'r','e','p','e',132,'l','o','c',
/*15b0*/ 'k',132,'a','r','p','l',132,'c','l','t','s',131,132,'c','w','d',
/*15c0*/ 'e',132,'i','n','t','o',132,'j','c','x','z',132,'l','a','h','f',
/*15d0*/ 132,'l','g','d','t',132,'l','i','d','t',132,'l',131,'l','d','t',
/*15e0*/ 132,'l','m','s','w',132,'l','o','d','s',132,'o','u','t','s',132,
/*15f0*/ 'r','e','t','f',132,'s','a','h','f',132,'s','c','a','s',132,'s',
/*1600*/ 'e','t','o',132,'s','e','t','e',132,'s','e','t','s',132,'s','g',
/*1610*/ 'd','t',132,'s','i','d','t',132,'s','l','d','t',131,132,'s','h',
/*1620*/ 'r','d',132,'s','m','s','w',132,'s','t','o','s',132,'t','e','s',
/*1630*/ 't',132,'v','e','r','r',132,'v','e','r','w',132,'x','a','d','d',
/*1640*/ 132,'x','l','a','t',132,'f','b','l','d',132,'f','c','h','s',132,
/*1650*/ 'f','c','o','s',132,'f','e','n','i',132,'f','i','l','d',132,'f',
/*1660*/ 's','t','p',132,'f','l','d','1',132,'f','l','d','z',132,'f',131,
/*1670*/ 'n','o','p',132,'f','t','s','t',132,'f','x','a','m',132,'f','x',
/*1680*/ 'c','h',132,'p','x','o','r',132,'x',131,'m','m','0',132,'x',131,
/*1690*/ 'm','m','1',132,'x',131,'m','m','2',132,'x',131,'m','m','3',132,
/*16a0*/ 'x',131,'m','m','4',132,'x',131,'m','m','5',132,'x',131,'m','m',
/*16b0*/ '6',132,'x',131,'m','m','7',131,132,'c','d','q','e',132,'r','1',
/*16c0*/ '0','b',132,'r','1','1','b',132,'r','1','2','b',132,'r','1','3',
/*16d0*/ 'b',132,'r','1','4','b',132,'r','1','5','b',132,'r','1','0','w',
/*16e0*/ 132,'r','1','1','w',132,'r','1','2','w',132,'r','1','3','w',132,
/*16f0*/ 'r','1','4','w',132,'r','1','5','w',132,'r','1','0',131,'d',132,
/*1700*/ 'r','1','1','d',132,'r','1','2','d',132,'r','1','3','d',132,'r',
/*1710*/ '1','4','d',132,'r','1','5','d',132,'l','d',131,'d','a',132,'s',
/*1720*/ 't','b','a',132,'s','t','h','a',132,'s','t','d','a',132,'b','l',
/*1730*/ 'e','u',132,'b','n','e','g',132,'b','p','o','s',132,'f','b','l',
/*1740*/ 'g',132,'f','b','u','e',132,'c','b','1','3',131,132,'c','b','2',
/*1750*/ '3',132,'c','b','0','3',131,132,'j','m','p','l',132,'r','e','t',
/*1760*/ 't',131,132,'%','f','1','0',132,'%','f','1','1',132,'%','f','1',
/*1770*/ '2',132,'%','f','1','3',132,'%','f','1','4',132,'%','f','1','5',
/*1780*/ 132,'%','f','1','6',132,'%','f','1','7',132,'%','f','1','8',132,
/*1790*/ '%','f','1','9',131,132,'%','f','2','0',132,'%','f','2','1',132,
/*17a0*/ '%','f','2','2',132,'%','f','2','3',132,'%','f','2','4',132,'%',
/*17b0*/ 'f','2','5',132,'%','f','2','6',132,'%','f','2','7',132,'%','f',
/*17c0*/ '2','8',132,'%','f','2','9',131,132,'%','f','3','0',132,'%','f',
/*17d0*/ '3','1',131,132,'%','r','1','0',132,'%','r','1','1',132,'%','r',
/*17e0*/ '1','2',132,'%','r','1','3',132,'%','r','1','4',132,'%','r','1',
/*17f0*/ '5',132,'%','r','1','6',132,'%','r','1','7',132,'%','r','1','8',
/*1800*/ 132,'%','r','1','9',131,132,'%','r','2','0',132,'%','r','2','1',
/*1810*/ 132,'%','r','2','2',132,'%','r','2','3',132,'%','r','2','4',132,
/*1820*/ '%','r','2','5',132,'%','r','2','6',132,'%','r','2','7',132,'%',
/*1830*/ 'r','2','8',132,'%','r','2','9',131,132,'%','r','3','0',132,'%',
/*1840*/ 'r','3','1',131,132,'%','c','1','0',132,'%','c','1','1',132,'%',
/*1850*/ 'c','1','2',132,'%','c','1','3',132,'%','c','1','4',132,'%','c',
/*1860*/ '1','5',132,'%','c','1','6',132,'%','c','1','7',132,'%','c','1',
/*1870*/ '8',132,'%','c','1','9',131,132,'%','c','2','0',132,'%','c','2',
/*1880*/ '1',132,'%','c','2','2',132,'%','c','2','3',132,'%','c','2','4',
/*1890*/ 132,'%','c','2','5',132,'%','c','2','6',132,'%','c','2','7',132,
/*18a0*/ '%','c','2','8',132,'%','c','2','9',131,132,'%','c','3','0',132,
/*18b0*/ '%','c','3','1',132,'a','s',130,'r','4',132,'a','s',130,'r','5',
/*18c0*/ 132,'a','s',130,'r','6',132,'a','s',130,'r','7',132,'a','s',130,
/*18d0*/ 'r','8',132,'a','s',130,131,'r','9',132,'b','e','q','l',132,'b',
/*18e0*/ 'n','e','l',132,'e','r','e','t',130,131,132,'j','a','l','r',132,
/*18f0*/ 'l','d','c','1',132,'l','w','c','1',132,'m','f','h','i',132,'m',
/*1900*/ 'f','l','o',132,'m','t','h','i',132,'m','t','l','o',132,'s','d',
/*1910*/ 'c','1',132,'s','w','c','1',132,'s','l','t','u',132,'t','e','q',
/*1920*/ 'i',132,'t','g','e','u',132,'t','l','b','p',132,'t','l','b','r',
/*1930*/ 132,'t','l','t','u',132,'t','n','e','i',132,'c','.','u','n',132,
/*1940*/ 'c','.','e','q',132,'c','.','s','f',132,'c','.','l','e',132,'c',
/*1950*/ 'f','c','1',132,'c','t','c','1',131,'w',130,'m','b',131,'b','s',
/*1960*/ 'r',131,'b','i','c',131,'b','i','s',131,'$',130,'f','0',131,'$',
/*1970*/ 130,'f','4',131,'$',130,'f','5',131,'$',130,'f','6',131,'$',130,
/*1980*/ 'f','7',131,'$',130,'f','8',131,'$',130,'f','9',130,131,'$','1',
/*1990*/ '0',131,'$','1','1',131,'$','1','2',131,'$','1','3',131,'$','1',
/*19a0*/ '4',131,'$','1','5',131,'$','1','6',131,'$','1','7',131,'$','1',
/*19b0*/ '8',131,'$','1','9',130,131,'$','2','0',131,'$','2','1',131,'$',
/*19c0*/ '2','2',131,'$','2','3',131,'$','2','4',131,'$','2','5',131,'$',
/*19d0*/ '2','6',131,'$','2','7',131,'$','2','8',131,'$','2','9',130,131,
/*19e0*/ '$','3','0',131,'$','3','1',131,'$',130,'v','0',131,'$','t','0',
/*19f0*/ 131,'$','t','2',131,'$',130,'t','3',131,'$',130,'t','4',131,'$',
/*1a00*/ 130,'t','5',131,'$',130,'t','6',131,'$',130,'t','7',131,'$',130,
/*1a10*/ 's','0',131,'$',130,'s','1',131,'$','s','2',131,'$','s','3',131,
/*1a20*/ '$','s','4',131,'$',130,'s','5',131,'$','f','p',131,'$',130,'a',
/*1a30*/ '0',131,'$',130,'a','1',131,'$',130,'a','2',131,'$','a','3',131,
/*1a40*/ '$',130,'a','4',131,'$',130,'a','5',131,'$',130,'t','8',131,'$',
/*1a50*/ 130,'t','9',131,'$','r','a',131,'$','a','t',131,'$',130,'g','p',
/*1a60*/ 131,'$','s','p',131,'f','m','r',131,'l','d','x',131,'l','m','w',
/*1a70*/ 131,'r','f','i',131,'s','l','q',131,'s','l','w',131,'s','r','d',
/*1a80*/ 131,'s','r','q',131,'t','w','i',131,'c',130,'r','0',131,'c','r',
/*1a90*/ '1',131,'c','r','2',131,'c','r','3',131,'c','r','4',131,'c','r',
/*1aa0*/ '5',131,'c','r','6',131,'c','r','7',131,'a','a','a',131,'a','a',
/*1ab0*/ 131,'d',131,'a','a','m',131,'a','a','s',131,'a','d','c',131,'b',
/*1ac0*/ 't','c',131,'b','t','r',131,'c','b','w',131,'c','l','d',131,'c',
/*1ad0*/ 'l','i',131,'c','m','c',131,'h','l','t',131,'j','n','o',131,'j',
/*1ae0*/ 'a','e',131,'j','n','e',130,131,'j','b','e',131,'j','n','s',130,
/*1af0*/ 131,'j','p','o',130,131,'j','g','e',130,131,'j','l','e',131,'l',
/*1b00*/ 'a','r',131,'l','e','s',131,'l','s','l',131,'r','o','l',131,'r',
/*1b10*/ 's','m',131,'s','b','b',131,'s','a','r',131,'s','t','i',131,'s',
/*1b20*/ 't','r',131,'u','d','1',131,'u','d','2',131,'p','o','r',131,'e',
/*1b30*/ 'a','x',131,'e','d','x',131,'e','b','x',131,'e','s','p',131,'e',
/*1b40*/ 'b','p',131,'e','s','i',131,'e','d','i',131,'d','r','0',131,'d',
/*1b50*/ 'r','2',131,'d','r','3',131,'d','r','6',131,'d','r','7',131,'t',
/*1b60*/ 'r','3',131,'t','r','4',131,'t','r','5',131,'t','r','6',131,'t',
/*1b70*/ 'r','7',131,'r','e','x',130,131,'c','q','o',131,'r','8','b',131,
/*1b80*/ 's','p','l',131,'b','p','l',131,'s','i','l',131,'d','i','l',131,
/*1b90*/ 'r','8','w',131,'r','9','w',131,'r','8','d',131,'r','9','d',131,
/*1ba0*/ 'e','i','p',131,'r','a','x',131,'r','d','x',131,'r','b','x',131,
/*1bb0*/ 'r','b','p',131,'r','s','i',131,'r','i','p',131,'c','r','8',131,
/*1bc0*/ 's','t','a',131,'b','c','s',131,'b','v','s',131,'b','g','u',131,
/*1bd0*/ 'b','v','c',131,'f','b','a',131,'f','b','o',131,'c','b','n',131,
/*1be0*/ 'c','b','3',131,'c','b','a',131,'%','f','0',131,'%','f','4',131,
/*1bf0*/ '%','f','5',131,'%','f','6',131,'%','f','7',131,'%','f','8',131,
/*1c00*/ '%','f','9',131,'%','r','0',131,'%','r','4',131,'%','r','5',131,
/*1c10*/ '%','r','6',131,'%','r','7',131,'%','r','8',131,'%','r','9',131,
/*1c20*/ '%','g','0',131,'%','g','1',131,'%','g','2',131,'%','g','3',131,
/*1c30*/ '%','g','4',131,'%','g','5',131,'%','g','6',131,'%','g','7',131,
/*1c40*/ '%','o','0',131,'%','o','1',131,'%','o','2',131,'%','o','3',131,
/*1c50*/ '%','o','4',131,'%','o','5',131,'%','o','6',131,'%','o','7',131,
/*1c60*/ '%','l','0',131,'%','l','1',131,'%','l','2',131,'%','l','3',131,
/*1c70*/ '%','l','4',131,'%','l','5',131,'%','l','6',131,'%','l','7',131,
/*1c80*/ '%','i','0',131,'%','i','1',131,'%','i','2',131,'%','i','3',131,
/*1c90*/ '%','i','4',131,'%','i','5',131,'%','i','6',131,'%','i','7',131,
/*1ca0*/ '%','f','p',131,'%','s','p',131,'%','c','0',131,'%','c','4',131,
/*1cb0*/ '%','c','5',131,'%','c','6',131,'%','c','7',131,'%','c','8',131,
/*1cc0*/ '%','c','9',131,'l','b','u',131,'l','d','r',131,'l','w','l',131,
/*1cd0*/ 'l','w','r',131,'l','w','u',131,'l','u','i',131,'s','c','d',131,
/*1ce0*/ 's','d','r',131,'r','f','e',131,'c','.','f',131,'$',130,'v','1',
/*1cf0*/ 131,'$',130,'s','6',131,'$',130,'s','7',131,'$',130,'k','0',131,
/*1d00*/ '$',130,'k','1',130,'$','0',130,'$','4',130,'$','5',130,'$','6',
/*1d10*/ 130,'$','7',130,'$','8',130,'$','9',130,'j','o',130,'b','h',};

extern dis_handler_return AXPPal( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPPal( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPPal( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPPal( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPPal( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPPal( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemoryLA( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemoryLA( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemoryFC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemoryFC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemoryFC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemoryFC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemoryFC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemoryFC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemoryFC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemoryFC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPMemoryFC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPJump( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPJump( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPJump( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPJump( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperateV( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperateV( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperateV( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperateV( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperateV( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperateV( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPConvert( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPConvert( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPFPOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEEOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEEOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEECompare( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEECompare( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEECompare( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEECompare( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEEConvert( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEEConvert( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEEConvert( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEEOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEEOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEEOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEEOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEEOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEEOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPIEEEConvert( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXOperate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return AXPVAXConvert( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathda( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCImmediate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCImmediate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCImmediate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCImmediate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathda( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathda( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCImmediate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCImmediate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathda( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCCompare( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCCompare( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCCompare( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCCompare( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathsa( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathsa( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCCondition( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCCondition( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCCondition( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCCondition( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCCondition( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCCondition( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCCondition( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCCondition( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathab( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathab( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathab( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathab( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathab( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathab( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCImmediate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCNull( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathsa( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathsa( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathsa( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdb( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdab( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdab( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdb( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatCmpab( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatCmpab( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdb( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdb( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdb( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdb( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdab( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdab( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloat( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloat( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdb( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloat( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloat( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdac( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdac( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdb( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdb( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloat( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloat( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloat( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloat( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdb( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdab( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatdab( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathab( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCNull( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMemD1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMemD2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMemD1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMemD2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMemD2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMemD1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCConditionField( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCConditionField( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCConditionField( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathd( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloato( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathd( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCSpecial( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCSpecial( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathdb( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCSpecial( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCCondition( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCCondition( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloato( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCConditionField( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathd( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCSpecial( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCSpecial( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathdb( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCImmediate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathda( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathda( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCImmed2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCImmed2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCNull( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCRotateD( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCRotateD( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCRotateImmD( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCRotateImmD( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCRotateImmD( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCRotateImmD( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCRotate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCRotate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCRotate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCRotate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCNull( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCNull( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathb( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCShiftImmed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCShiftImmed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCShiftImmedD( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCShiftImmed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCShiftImmed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCShiftImmed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCShiftImmed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMemD1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMemD1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCFloatMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMem2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCImmediate( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathda( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathda( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCNull( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCTrap( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCTrap( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCNull( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMathb( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCNull( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCTrap( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCTrap( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCMath2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCImmed2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return PPCImmed2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixOpnd( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixAddr( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixRepe( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixRepne( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixCS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixSS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixDS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixES( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixFS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixGS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixLock( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixFwait( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_bound( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Reg_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Rel_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Abs_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Reg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmImm_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86AccAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Reg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Imm_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Rel_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Abs_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmReg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MemAbsAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86CRegReg_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86DRegReg_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SRegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86TRegReg_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24C( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24C( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86AccAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Reg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Reg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Imm_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Imm_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Imm_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_test( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_test( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Reg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeFSTSWAX( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3C( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3C( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3C( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3C( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86_3DNow( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixed_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM32_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM32_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM32_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixed_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64Imm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32Imm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64PrefixRex( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64PrefixOpnd( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64PrefixAddr( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64PrefixRepe( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64PrefixRepne( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64PrefixCS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64PrefixSS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64PrefixDS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64PrefixES( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64PrefixFS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64PrefixGS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64PrefixLock( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Reg_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Rel_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ImmImm_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_16B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64AccAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Imm_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Rel_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_16B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ImmReg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64MemAbsAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64CRegReg_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64DRegReg_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SRegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24C( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_16C( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24C( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64AccAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Reg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SReg_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SReg_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Reg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SReg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SReg_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SReg_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Imm_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Imm_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Imm_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_test( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_test( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64Reg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X64ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCFPop3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMemF( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMemF( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMemF( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMemC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMemC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMemC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMemF( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMemF( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMemF( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMemF( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMemC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMemC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMemC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMemC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCSetHi( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCBranch( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCCall( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return SPARCMem( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSImmed2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSImmed2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSImmed2U( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranchCop( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranchCop( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranchCop( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranchCop( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranch2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSCode( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSCache( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSImmed2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSImmed2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMulDiv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMulDiv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMulDiv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMulDiv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMulDiv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMulDiv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSShift( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSShift( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSShift( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSShift( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSShift( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSShift( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSNull( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSJType( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSJType( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSJump2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSJump1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSImmed1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSRegD( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSRegD( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSRegS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSRegS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMulDiv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMulDiv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSImmed2U( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUMemory( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSNull( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSShift( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSImmed2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSImmed2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSShift( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSShift( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSNull( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSCode( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSTrap2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSTrap1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSTrap2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSTrap1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSTrap1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSTrap2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSNull( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSNull( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSNull( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSNull( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSTrap2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSTrap1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSTrap1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSTrap2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSTrap2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSTrap1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSImmed2U( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranchCop( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranchCop( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranchCop( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSBranchCop( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUCmp( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFGMove( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFGMove( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSReg2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFGMove( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFGMove( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return MIPSFPUOp2( dis_handle *, void *, dis_dec_ins * );

const dis_ins_descript DisInstructionTable[] = {
    { 0x13b8, 0x00000001, 0x00000000, NULL },

    /* Machine:AXP */

    /* Table_1 */

    { 0x0113, 0x00000000, 0xfc000000, AXPPal }, /* CALL_PAL */
    { 0x0a75, 0x64000000, 0xfc000000, AXPPal }, /* PAL19 */
    { 0x0a7b, 0x6c000000, 0xfc000000, AXPPal }, /* PAL1B */
    { 0x0a81, 0x74000000, 0xfc000000, AXPPal }, /* PAL1D */
    { 0x0a87, 0x78000000, 0xfc000000, AXPPal }, /* PAL1E */
    { 0x0a8d, 0x7c000000, 0xfc000000, AXPPal }, /* PAL1F */
    { 0x0c60, 0x20000000, 0xfc000000, AXPMemoryLA }, /* LDA */
    { 0x13bd, 0x24000000, 0xfc000000, AXPMemoryLA }, /* LDAH */
    { 0x07d2, 0xa0000000, 0xfc000000, AXPMemory }, /* LDL */
    { 0x0a93, 0xa8000000, 0xfc000000, AXPMemory }, /* LDL_L */
    { 0x00c1, 0xa4000000, 0xfc000000, AXPMemory }, /* LDQ */
    { 0x0a99, 0xac000000, 0xfc000000, AXPMemory }, /* LDQ_L */
    { 0x0a9f, 0x2c000000, 0xfc000000, AXPMemory }, /* LDQ_U */
    { 0x0542, 0x88000000, 0xfc000000, AXPFPMemory }, /* LDS */
    { 0x15dc, 0x8c000000, 0xfc000000, AXPFPMemory }, /* LDT */
    { 0x031c, 0xb0000000, 0xfc000000, AXPMemory }, /* STL */
    { 0x0aa5, 0xb8000000, 0xfc000000, AXPMemory }, /* STL_C */
    { 0x0aab, 0xb4000000, 0xfc000000, AXPMemory }, /* STQ */
    { 0x0aac, 0xbc000000, 0xfc000000, AXPMemory }, /* STQ_C */
    { 0x0ab2, 0x3c000000, 0xfc000000, AXPMemory }, /* STQ_U */
    { 0x0825, 0x98000000, 0xfc000000, AXPFPMemory }, /* STS */
    { 0x07ba, 0x9c000000, 0xfc000000, AXPFPMemory }, /* STT */
    { 0x001a, 0x60008000, 0xfc00ffff, AXPMemoryFC }, /* FETCH */
    { 0x02a6, 0x6000a000, 0xfc00ffff, AXPMemoryFC }, /* FETCH_M */
    { 0x195a, 0x60004000, 0xfc00ffff, AXPMemoryFC }, /* MB */
    { 0x014b, 0x6000e000, 0xfc00ffff, AXPMemoryFC }, /* RC */
    { 0x13c3, 0x6000c000, 0xfc00ffff, AXPMemoryFC }, /* RPCC */
    { 0x015e, 0x6000f000, 0xfc00ffff, AXPMemoryFC }, /* RS */
    { 0x0ab8, 0x60000000, 0xfc00ffff, AXPMemoryFC }, /* TRAPB */
    { 0x1958, 0x60004400, 0xfc00ffff, AXPMemoryFC }, /* WMB */
    { 0x13c8, 0x60000400, 0xfc00ffff, AXPMemoryFC }, /* EXCB */
    { 0x1756, 0x68000000, 0xfc00c000, AXPJump }, /* JMP */
    { 0x0003, 0x68004000, 0xfc00c000, AXPJump }, /* JSR */
    { 0x09a1, 0x68008000, 0xfc00c000, AXPJump }, /* RET */
    { 0x0004, 0x6800c000, 0xfc00c000, AXPJump }, /* JSR_CORTN */
    { 0x0706, 0xc0000000, 0xfc000000, AXPBranch }, /* BR */
    { 0x13ce, 0xc4000000, 0xfc000000, AXPFPBranch }, /* FBEQ */
    { 0x13d5, 0xc8000000, 0xfc000000, AXPFPBranch }, /* FBLT */
    { 0x13da, 0xcc000000, 0xfc000000, AXPFPBranch }, /* FBLE */
    { 0x195d, 0xd0000000, 0xfc000000, AXPBranch }, /* BSR */
    { 0x13e0, 0xd4000000, 0xfc000000, AXPFPBranch }, /* FBNE */
    { 0x13e8, 0xd8000000, 0xfc000000, AXPFPBranch }, /* FBGE */
    { 0x13ed, 0xdc000000, 0xfc000000, AXPFPBranch }, /* FBGT */
    { 0x13f2, 0xe0000000, 0xfc000000, AXPBranch }, /* BLBC */
    { 0x13d0, 0xe4000000, 0xfc000000, AXPBranch }, /* BEQ */
    { 0x0562, 0xe8000000, 0xfc000000, AXPBranch }, /* BLT */
    { 0x0ad6, 0xec000000, 0xfc000000, AXPBranch }, /* BLE */
    { 0x13f7, 0xf0000000, 0xfc000000, AXPBranch }, /* BLBS */
    { 0x13e3, 0xf4000000, 0xfc000000, AXPBranch }, /* BNE */
    { 0x0556, 0xf8000000, 0xfc000000, AXPBranch }, /* BGE */
    { 0x12db, 0xfc000000, 0xfc000000, AXPBranch }, /* BGT */
    { 0x05b8, 0x40000000, 0xfc0007e0, AXPOperateV }, /* ADDL */
    { 0x05c1, 0x40000400, 0xfc0007e0, AXPOperateV }, /* ADDQ */
    { 0x059f, 0x400001e0, 0xfc000fe0, AXPOperate }, /* CMPBGE */
    { 0x03fc, 0x400005a0, 0xfc000fe0, AXPOperate }, /* CMPEQ */
    { 0x0abf, 0x40000da0, 0xfc000fe0, AXPOperate }, /* CMPLE */
    { 0x0ac5, 0x400009a0, 0xfc000fe0, AXPOperate }, /* CMPLT */
    { 0x05a6, 0x400007a0, 0xfc000fe0, AXPOperate }, /* CMPULE */
    { 0x05ad, 0x400003a0, 0xfc000fe0, AXPOperate }, /* CMPULT */
    { 0x05c9, 0x40000120, 0xfc0007e0, AXPOperateV }, /* SUBL */
    { 0x05d1, 0x40000520, 0xfc0007e0, AXPOperateV }, /* SUBQ */
    { 0x05b5, 0x40000040, 0xfc000fe0, AXPOperate }, /* S4ADDL */
    { 0x05be, 0x40000440, 0xfc000fe0, AXPOperate }, /* S4ADDQ */
    { 0x05c6, 0x40000160, 0xfc000fe0, AXPOperate }, /* S4SUBL */
    { 0x05ce, 0x40000560, 0xfc000fe0, AXPOperate }, /* S4SUBQ */
    { 0x05d6, 0x40000240, 0xfc000fe0, AXPOperate }, /* S8ADDL */
    { 0x05dd, 0x40000640, 0xfc000fe0, AXPOperate }, /* S8ADDQ */
    { 0x05e4, 0x40000360, 0xfc000fe0, AXPOperate }, /* S8SUBL */
    { 0x05eb, 0x40000760, 0xfc000fe0, AXPOperate }, /* S8SUBQ */
    { 0x0638, 0x44000000, 0xfc000fe0, AXPOperate }, /* AND */
    { 0x1961, 0x44000100, 0xfc000fe0, AXPOperate }, /* BIC */
    { 0x1965, 0x44000400, 0xfc000fe0, AXPOperate }, /* BIS */
    { 0x02c4, 0x44000480, 0xfc000fe0, AXPOperate }, /* CMOVEQ */
    { 0x02af, 0x440002c0, 0xfc000fe0, AXPOperate }, /* CMOVLBC */
    { 0x02b7, 0x44000280, 0xfc000fe0, AXPOperate }, /* CMOVLBS */
    { 0x02ce, 0x440008c0, 0xfc000fe0, AXPOperate }, /* CMOVGE */
    { 0x02d7, 0x44000cc0, 0xfc000fe0, AXPOperate }, /* CMOVGT */
    { 0x02e0, 0x44000c80, 0xfc000fe0, AXPOperate }, /* CMOVLE */
    { 0x02e9, 0x44000880, 0xfc000fe0, AXPOperate }, /* CMOVLT */
    { 0x02f2, 0x440004c0, 0xfc000fe0, AXPOperate }, /* CMOVNE */
    { 0x0bcf, 0x44000900, 0xfc000fe0, AXPOperate }, /* EQV */
    { 0x0acc, 0x44000500, 0xfc000fe0, AXPOperate }, /* ORNOT */
    { 0x0be5, 0x44000800, 0xfc000fe0, AXPOperate }, /* XOR */
    { 0x0ad2, 0x480000c0, 0xfc000fe0, AXPOperate }, /* EXTBL */
    { 0x0ad9, 0x48000d40, 0xfc000fe0, AXPOperate }, /* EXTLH */
    { 0x0adf, 0x480004c0, 0xfc000fe0, AXPOperate }, /* EXTLL */
    { 0x0ae5, 0x48000f40, 0xfc000fe0, AXPOperate }, /* EXTQH */
    { 0x0aeb, 0x480006c0, 0xfc000fe0, AXPOperate }, /* EXTQL */
    { 0x0af1, 0x48000b40, 0xfc000fe0, AXPOperate }, /* EXTWH */
    { 0x0af7, 0x480002c0, 0xfc000fe0, AXPOperate }, /* EXTWL */
    { 0x0afd, 0x48000160, 0xfc000fe0, AXPOperate }, /* INSBL */
    { 0x0b03, 0x48000ce0, 0xfc000fe0, AXPOperate }, /* INSLH */
    { 0x0b09, 0x48000560, 0xfc000fe0, AXPOperate }, /* INSLL */
    { 0x0b0f, 0x48000ee0, 0xfc000fe0, AXPOperate }, /* INSQH */
    { 0x0b15, 0x48000760, 0xfc000fe0, AXPOperate }, /* INSQL */
    { 0x0b1b, 0x48000ae0, 0xfc000fe0, AXPOperate }, /* INSWH */
    { 0x0b21, 0x48000360, 0xfc000fe0, AXPOperate }, /* INSWL */
    { 0x0b28, 0x48000040, 0xfc000fe0, AXPOperate }, /* MSKBL */
    { 0x0b2e, 0x48000c40, 0xfc000fe0, AXPOperate }, /* MSKLH */
    { 0x0b34, 0x48000440, 0xfc000fe0, AXPOperate }, /* MSKLL */
    { 0x0b3a, 0x48000e40, 0xfc000fe0, AXPOperate }, /* MSKQH */
    { 0x0b40, 0x48000640, 0xfc000fe0, AXPOperate }, /* MSKQL */
    { 0x0b46, 0x48000a40, 0xfc000fe0, AXPOperate }, /* MSKWH */
    { 0x0b4c, 0x48000240, 0xfc000fe0, AXPOperate }, /* MSKWL */
    { 0x0949, 0x48000720, 0xfc000fe0, AXPOperate }, /* SLL */
    { 0x0a50, 0x48000780, 0xfc000fe0, AXPOperate }, /* SRA */
    { 0x0952, 0x48000680, 0xfc000fe0, AXPOperate }, /* SRL */
    { 0x05f2, 0x48000600, 0xfc000fe0, AXPOperate }, /* ZAP */
    { 0x05f3, 0x48000620, 0xfc000fe0, AXPOperate }, /* ZAPNOT */
    { 0x08d4, 0x4c000000, 0xfc0007e0, AXPOperateV }, /* MULL */
    { 0x09e2, 0x4c000400, 0xfc0007e0, AXPOperateV }, /* MULQ */
    { 0x06c1, 0x4c000600, 0xfc000fe0, AXPOperate }, /* UMULH */
    { 0x0b52, 0x5c000400, 0xfc00ffe0, AXPFPOperate }, /* CPYS */
    { 0x0b53, 0x5c000440, 0xfc00ffe0, AXPFPOperate }, /* CPYSE */
    { 0x0b59, 0x5c000420, 0xfc00ffe0, AXPFPOperate }, /* CPYSN */
    { 0x0b5f, 0x5c000200, 0xfc001fe0, AXPFPConvert }, /* CVTLQ */
    { 0x0b65, 0x5c000600, 0xfc001fe0, AXPFPConvert }, /* CVTQL */
    { 0x02c1, 0x5c000540, 0xfc00ffe0, AXPFPOperate }, /* FCMOVEQ */
    { 0x02cb, 0x5c0005a0, 0xfc00ffe0, AXPFPOperate }, /* FCMOVGE */
    { 0x02d5, 0x5c0005e0, 0xfc00ffe0, AXPFPOperate }, /* FCMOVGT */
    { 0x02de, 0x5c0005c0, 0xfc00ffe0, AXPFPOperate }, /* FCMOVLE */
    { 0x02e7, 0x5c000580, 0xfc00ffe0, AXPFPOperate }, /* FCMOVLT */
    { 0x02f0, 0x5c000560, 0xfc00ffe0, AXPFPOperate }, /* FCMOVNE */
    { 0x02f9, 0x5c0004a0, 0xfc00ffe0, AXPFPOperate }, /* MF_FPCR */
    { 0x0302, 0x5c000480, 0xfc00ffe0, AXPFPOperate }, /* MT_FPCR */
    { 0x01d7, 0x58000000, 0xfc0007e0, AXPIEEEOperate }, /* ADDS */
    { 0x13fc, 0x58000400, 0xfc0007e0, AXPIEEEOperate }, /* ADDT */
    { 0x05fb, 0x580014a0, 0xfc00ffe0, AXPIEEECompare }, /* CMPTEQ */
    { 0x0603, 0x580014c0, 0xfc00ffe0, AXPIEEECompare }, /* CMPTLT */
    { 0x060b, 0x580014e0, 0xfc00ffe0, AXPIEEECompare }, /* CMPTLE */
    { 0x0612, 0x58001480, 0xfc00ffe0, AXPIEEECompare }, /* CMPTUN */
    { 0x0b6b, 0x58000780, 0xfc0007e0, AXPIEEEConvert }, /* CVTQS */
    { 0x0b71, 0x580007c0, 0xfc0007e0, AXPIEEEConvert }, /* CVTQT */
    { 0x00e4, 0x58000580, 0xfc0007e0, AXPIEEEConvert }, /* CVTTS */
    { 0x0c3e, 0x58000060, 0xfc0007e0, AXPIEEEOperate }, /* DIVS */
    { 0x1401, 0x58000460, 0xfc0007e0, AXPIEEEOperate }, /* DIVT */
    { 0x0a0c, 0x58000040, 0xfc0007e0, AXPIEEEOperate }, /* MULS */
    { 0x0a3e, 0x58000440, 0xfc0007e0, AXPIEEEOperate }, /* MULT */
    { 0x0318, 0x58000020, 0xfc0007e0, AXPIEEEOperate }, /* SUBS */
    { 0x1406, 0x58000420, 0xfc0007e0, AXPIEEEOperate }, /* SUBT */
    { 0x0b77, 0x580005e0, 0xfc0007e0, AXPIEEEConvert }, /* CVTTQ */
    { 0x0ed8, 0x54000000, 0xfc004fe0, AXPVAXOperate }, /* ADDF */
    { 0x0b7d, 0x540003c0, 0xfc004fe0, AXPVAXOperate }, /* CVTDG */
    { 0x140b, 0x54000400, 0xfc004fe0, AXPVAXOperate }, /* ADDG */
    { 0x0619, 0x540014a0, 0xfc004fe0, AXPVAXOperate }, /* CMPGEQ */
    { 0x0620, 0x540014c0, 0xfc004fe0, AXPVAXOperate }, /* CMPGLT */
    { 0x0627, 0x540014e0, 0xfc004fe0, AXPVAXOperate }, /* CMPGLE */
    { 0x0b83, 0x54000580, 0xfc004fe0, AXPVAXOperate }, /* CVTGF */
    { 0x0b89, 0x540005a0, 0xfc004fe0, AXPVAXOperate }, /* CVTGD */
    { 0x0b8f, 0x54000780, 0xfc004fe0, AXPVAXOperate }, /* CVTQF */
    { 0x0b95, 0x540007c0, 0xfc004fe0, AXPVAXOperate }, /* CVTQG */
    { 0x1410, 0x54000060, 0xfc004fe0, AXPVAXOperate }, /* DIVF */
    { 0x1415, 0x54000460, 0xfc004fe0, AXPVAXOperate }, /* DIVG */
    { 0x0f10, 0x54000040, 0xfc004fe0, AXPVAXOperate }, /* MULF */
    { 0x141a, 0x54000440, 0xfc004fe0, AXPVAXOperate }, /* MULG */
    { 0x0712, 0x54000020, 0xfc004fe0, AXPVAXOperate }, /* SUBF */
    { 0x1420, 0x54000420, 0xfc004fe0, AXPVAXOperate }, /* SUBG */
    { 0x0b9b, 0x540005e0, 0xfc004fe0, AXPVAXConvert }, /* CVTGQ */


    /* Machine:PPC */

    /* Table_1 */

    { 0x0c4e, 0x7c0002d0, 0xfc00fbfe, PPCMathda }, /* abs */
    { 0x01d6, 0x7c000214, 0xfc0003fe, PPCMath }, /* add */
    { 0x0290, 0x7c000014, 0xfc0003fe, PPCMath }, /* addc */
    { 0x14c1, 0x7c000114, 0xfc0003fe, PPCMath }, /* adde */
    { 0x062f, 0x38000000, 0xfc000000, PPCImmediate }, /* addi */
    { 0x0630, 0x30000000, 0xfc000000, PPCImmediate }, /* addic */
    { 0x0631, 0x34000000, 0xfc000000, PPCImmediate }, /* addic_dot */
    { 0x0ba8, 0x3c000000, 0xfc000000, PPCImmediate }, /* addis */
    { 0x0bae, 0x7c0001d4, 0xfc00fbfe, PPCMathda }, /* addme */
    { 0x0bb4, 0x7c000194, 0xfc00fbfe, PPCMathda }, /* addze */
    { 0x0638, 0x7c000038, 0xfc0007fe, PPCMath }, /* and */
    { 0x0653, 0x7c000078, 0xfc0007fe, PPCMath }, /* andc */
    { 0x0bba, 0x70000000, 0xfc000000, PPCImmediate }, /* andi_dot */
    { 0x063a, 0x74000000, 0xfc000000, PPCImmediate }, /* andis_dot */
    { 0x0078, 0x48000000, 0xfc000000, PPCBranch }, /* b */
    { 0x029f, 0x40000000, 0xfc000000, PPCBranch }, /* bc */
    { 0x0bc0, 0x4c000420, 0xfc00fffe, PPCBranch }, /* bcctr */
    { 0x14c6, 0x4c000020, 0xfc00fffe, PPCBranch }, /* bclr */
    { 0x14cd, 0x7c000426, 0xfc00fffe, PPCMathda }, /* clcs */
    { 0x006c, 0x7c000000, 0xfc4007ff, PPCCompare }, /* cmp */
    { 0x14d2, 0x2c000000, 0xfc400000, PPCCompare }, /* cmpi */
    { 0x0abe, 0x7c000040, 0xfc4007ff, PPCCompare }, /* cmpl */
    { 0x0bc6, 0x28000000, 0xfc400000, PPCCompare }, /* cmpli */
    { 0x0641, 0x7c000074, 0xfc00fffe, PPCMathsa }, /* cntlzd */
    { 0x0648, 0x7c000034, 0xfc00fffe, PPCMathsa }, /* cntlzw */
    { 0x064f, 0x4c000202, 0xfc0007ff, PPCCondition }, /* crand */
    { 0x0650, 0x4c000102, 0xfc0007ff, PPCCondition }, /* crandc */
    { 0x0bcc, 0x4c000242, 0xfc0007ff, PPCCondition }, /* creqv */
    { 0x0659, 0x4c0001c2, 0xfc0007ff, PPCCondition }, /* crnand */
    { 0x0bd3, 0x4c000042, 0xfc0007ff, PPCCondition }, /* crnor */
    { 0x0bda, 0x4c000382, 0xfc0007ff, PPCCondition }, /* cror */
    { 0x0bdb, 0x4c000342, 0xfc0007ff, PPCCondition }, /* crorc */
    { 0x0be2, 0x4c000182, 0xfc0007ff, PPCCondition }, /* crxor */
    { 0x14d7, 0x7c0000ac, 0xffe007ff, PPCMathab }, /* dcbf */
    { 0x14dc, 0x7c0003ac, 0xffe007ff, PPCMathab }, /* dcbi */
    { 0x0be9, 0x7c00006c, 0xffe007ff, PPCMathab }, /* dcbst */
    { 0x0661, 0x7c00022c, 0xffe007ff, PPCMathab }, /* dcbt */
    { 0x0662, 0x7c0001ec, 0xffe007ff, PPCMathab }, /* dcbtst */
    { 0x14e1, 0x7c0007ec, 0xffe007ff, PPCMathab }, /* dcbz */
    { 0x0792, 0x7c000296, 0xfc0003fe, PPCMath }, /* div */
    { 0x0bf1, 0x7c0003d2, 0xfc0003fe, PPCMath }, /* divd */
    { 0x0bf2, 0x7c000392, 0xfc0003fe, PPCMath }, /* divdu */
    { 0x0c3e, 0x7c0002d6, 0xfc0003fe, PPCMath }, /* divs */
    { 0x0bf8, 0x7c0003d6, 0xfc0003fe, PPCMath }, /* divw */
    { 0x0bf9, 0x7c000396, 0xfc0003fe, PPCMath }, /* divwu */
    { 0x14e6, 0x7c000210, 0xfc0003fe, PPCMath }, /* doz */
    { 0x14e7, 0x24000000, 0xfc000000, PPCImmediate }, /* dozi */
    { 0x0bff, 0x7c00026c, 0xfc0007ff, PPCMath }, /* eciwx */
    { 0x0c05, 0x7c00036c, 0xfc0007ff, PPCMath }, /* ecowx */
    { 0x0c0b, 0x7c0006ac, 0xfc0007ff, PPCNull }, /* eieio */
    { 0x0bcf, 0x7c000238, 0xfc0007fe, PPCMath2 }, /* eqv */
    { 0x0c11, 0x7c000774, 0xfc00fffe, PPCMathsa }, /* extsb */
    { 0x0c17, 0x7c000734, 0xfc00fffe, PPCMathsa }, /* extsh */
    { 0x0c1d, 0x7c0007b4, 0xfc00fffe, PPCMathsa }, /* extsw */
    { 0x117e, 0xfc000210, 0xfc1f07fe, PPCFloatdb }, /* fabs */
    { 0x0c23, 0xfc00002a, 0xfc0007fe, PPCFloatdab }, /* fadd */
    { 0x0c24, 0xec00002a, 0xfc0007fe, PPCFloatdab }, /* fadds */
    { 0x0c2a, 0xfc00069c, 0xfc1f07fe, PPCFloatdb }, /* fcfid */
    { 0x0c30, 0xfc000040, 0xfc6007ff, PPCFloatCmpab }, /* fcmpo */
    { 0x0c36, 0xfc000000, 0xfc6007ff, PPCFloatCmpab }, /* fcmpu */
    { 0x066b, 0xfc00065c, 0xfc1f07fe, PPCFloatdb }, /* fctid */
    { 0x066c, 0xfc00065e, 0xfc1f07fe, PPCFloatdb }, /* fctidz */
    { 0x0673, 0xfc00001c, 0xfc1f07fe, PPCFloatdb }, /* fctiw */
    { 0x0674, 0xfc00001e, 0xfc1f07fe, PPCFloatdb }, /* fctiwz */
    { 0x0797, 0xfc000024, 0xfc0007fe, PPCFloatdab }, /* fdiv */
    { 0x0c3c, 0xec000024, 0xfc0007fe, PPCFloatdab }, /* fdivs */
    { 0x067b, 0xfc00003a, 0xfc00003e, PPCFloat }, /* fmadd */
    { 0x067c, 0xec00003a, 0xfc00003e, PPCFloat }, /* fmadds */
    { 0x1a64, 0xfc000090, 0xfc1f07fe, PPCFloatdb }, /* fmr */
    { 0x0683, 0xfc000038, 0xfc00003e, PPCFloat }, /* fmsub */
    { 0x0684, 0xec000038, 0xfc00003e, PPCFloat }, /* fmsubs */
    { 0x0c43, 0xfc000032, 0xfc00f83e, PPCFloatdac }, /* fmul */
    { 0x0c44, 0xec000032, 0xfc00f83e, PPCFloatdac }, /* fmuls */
    { 0x0c4a, 0xfc000110, 0xfc1f07fe, PPCFloatdb }, /* fnabs */
    { 0x1176, 0xfc000050, 0xfc1f07fe, PPCFloatdb }, /* fneg */
    { 0x030a, 0xfc00003e, 0xfc00003e, PPCFloat }, /* fnmadd */
    { 0x030b, 0xec00003e, 0xfc00003e, PPCFloat }, /* fnmadds */
    { 0x0313, 0xfc00003c, 0xfc00003e, PPCFloat }, /* fnmsub */
    { 0x0314, 0xec00003c, 0xfc00003e, PPCFloat }, /* fnmsubs */
    { 0x14ec, 0xfc000018, 0xfc1f07fe, PPCFloatdb }, /* frsp */
    { 0x07c7, 0xfc000028, 0xfc0007fe, PPCFloatdab }, /* fsub */
    { 0x0c52, 0xec000028, 0xfc0007fe, PPCFloatdab }, /* fsubs */
    { 0x14f2, 0x7c0007ac, 0xffe007ff, PPCMathab }, /* icbi */
    { 0x0105, 0x4c00012c, 0xffffffff, PPCNull }, /* isync */
    { 0x0c58, 0x88000000, 0xfc000000, PPCMem1 }, /* lbz */
    { 0x0c59, 0x8c000000, 0xfc000000, PPCMem1 }, /* lbzu */
    { 0x0c5a, 0x7c0000ee, 0xfc0007ff, PPCMem2 }, /* lbzux */
    { 0x14f7, 0x7c0000ae, 0xfc0007ff, PPCMem2 }, /* lbzx */
    { 0x00c0, 0xe8000000, 0xfc000003, PPCMemD1 }, /* ld */
    { 0x0c61, 0x7c0000a8, 0xfc0007ff, PPCMemD2 }, /* ldarx */
    { 0x0288, 0xe8000001, 0xfc000003, PPCMemD1 }, /* ldu */
    { 0x14fc, 0x7c00006a, 0xfc0007ff, PPCMemD2 }, /* ldux */
    { 0x1a68, 0x7c00002a, 0xfc0007ff, PPCMemD2 }, /* ldx */
    { 0x0c67, 0xc8000000, 0xfc000000, PPCFloatMem1 }, /* lfd */
    { 0x0c68, 0xcc000000, 0xfc000000, PPCFloatMem1 }, /* lfdu */
    { 0x0c69, 0x7c0004ee, 0xfc0007ff, PPCFloatMem2 }, /* lfdux */
    { 0x1501, 0x7c0004ae, 0xfc0007ff, PPCFloatMem2 }, /* lfdx */
    { 0x0c6f, 0xc0000000, 0xfc000000, PPCFloatMem1 }, /* lfs */
    { 0x0c70, 0xc4000000, 0xfc000000, PPCFloatMem1 }, /* lfsu */
    { 0x0c71, 0x7c00046e, 0xfc0007ff, PPCFloatMem2 }, /* lfsux */
    { 0x1506, 0x7c00042e, 0xfc0007ff, PPCFloatMem2 }, /* lfsx */
    { 0x0c77, 0xa8000000, 0xfc000000, PPCMem1 }, /* lha */
    { 0x0c78, 0xac000000, 0xfc000000, PPCMem1 }, /* lhau */
    { 0x0c79, 0x7c0002ee, 0xfc0007ff, PPCMem2 }, /* lhaux */
    { 0x150b, 0x7c0002ae, 0xfc0007ff, PPCMem2 }, /* lhax */
    { 0x0c7f, 0x7c00062c, 0xfc0007ff, PPCMem2 }, /* lhbrx */
    { 0x0c85, 0xa0000000, 0xfc000000, PPCMem1 }, /* lhz */
    { 0x0c86, 0xa4000000, 0xfc000000, PPCMem1 }, /* lhzu */
    { 0x0c87, 0x7c00026e, 0xfc0007ff, PPCMem2 }, /* lhzux */
    { 0x1510, 0x7c00022e, 0xfc0007ff, PPCMem2 }, /* lhzx */
    { 0x1a6c, 0xb8000000, 0xfc000000, PPCMem1 }, /* lmw */
    { 0x0c8d, 0x7c00022a, 0xfc0007fe, PPCMem2 }, /* lscbx */
    { 0x1515, 0x7c0004aa, 0xfc0007ff, PPCMem3 }, /* lswi */
    { 0x151a, 0x7c00042a, 0xfc0007ff, PPCMem2 }, /* lswx */
    { 0x0c93, 0xe8000002, 0xfc000003, PPCMemD1 }, /* lwa */
    { 0x0c94, 0x7c0002ea, 0xfc0007ff, PPCMem2 }, /* lwaux */
    { 0x151f, 0x7c0002aa, 0xfc0007ff, PPCMem2 }, /* lwax */
    { 0x0c9a, 0x7c000028, 0xfc0007ff, PPCMem2 }, /* lwarx */
    { 0x0ca0, 0x7c00042c, 0xfc0007ff, PPCMem2 }, /* lwbrx */
    { 0x0ca6, 0x80000000, 0xfc000000, PPCMem1 }, /* lwz */
    { 0x0ca7, 0x84000000, 0xfc000000, PPCMem1 }, /* lwzu */
    { 0x0ca8, 0x7c00006e, 0xfc0007ff, PPCMem2 }, /* lwzux */
    { 0x1524, 0x7c00002e, 0xfc0007ff, PPCMem2 }, /* lwzx */
    { 0x0cae, 0x7c00003a, 0xfc0007fe, PPCMath2 }, /* maskg */
    { 0x068b, 0x7c00043a, 0xfc0007fe, PPCMath2 }, /* maskir */
    { 0x0cb4, 0x4c000000, 0xfc63ffff, PPCConditionField }, /* mcrf */
    { 0x0cb5, 0xfc000080, 0xfc63ffff, PPCConditionField }, /* mcrfs */
    { 0x0cbb, 0x7c000400, 0xfc7fffff, PPCConditionField }, /* mcrxr */
    { 0x1529, 0x7c000026, 0xfc1fffff, PPCMathd }, /* mfcr */
    { 0x152e, 0xfc00048e, 0xfc1ffffe, PPCFloato }, /* mffs */
    { 0x0cc1, 0x7c0000a6, 0xfc1fffff, PPCMathd }, /* mfmsr */
    { 0x0cc7, 0x7c0002a6, 0xfc0007ff, PPCSpecial }, /* mfspr */
    { 0x0692, 0x7c0004a6, 0xfc10ffff, PPCSpecial }, /* mfsr */
    { 0x0693, 0x7c000526, 0xfc1f07ff, PPCMathdb }, /* mfsrin */
    { 0x0ccd, 0x7c000120, 0xfc100fff, PPCSpecial }, /* mtcrf */
    { 0x069b, 0xfc00008c, 0xfc1ffffe, PPCCondition }, /* mtfsb0 */
    { 0x06a2, 0xfc00004c, 0xfc1ffffe, PPCCondition }, /* mtfsb1 */
    { 0x06a9, 0x7c00058e, 0xfe0107fe, PPCFloato }, /* mtfsf */
    { 0x06aa, 0xfc00010c, 0xfc7f0ffe, PPCConditionField }, /* mtfsfi */
    { 0x0cd3, 0x7c000124, 0xfc1fffff, PPCMathd }, /* mtmsr */
    { 0x0cd9, 0x7c0003a6, 0xfc0007ff, PPCSpecial }, /* mtspr */
    { 0x06b1, 0x7c0001a4, 0xfc10ffff, PPCSpecial }, /* mtsr */
    { 0x06b2, 0x7c0001e4, 0xfc1f07ff, PPCMathdb }, /* mtsrin */
    { 0x0425, 0x7c0000d6, 0xfc0003fe, PPCMath }, /* mul */
    { 0x06b9, 0x7c000092, 0xfc0007fe, PPCMath }, /* mulhd */
    { 0x06ba, 0x7c000012, 0xfc0007fe, PPCMath }, /* mulhdu */
    { 0x06c3, 0x7c000096, 0xfc0007fe, PPCMath }, /* mulhw */
    { 0x06c4, 0x7c000016, 0xfc0007fe, PPCMath }, /* mulhwu */
    { 0x0cdf, 0x7c0001d2, 0xfc0003fe, PPCMath }, /* mulld */
    { 0x0ce5, 0x1c000000, 0xfc000000, PPCImmediate }, /* mulli */
    { 0x08d5, 0x7c0001d6, 0xfc0003fe, PPCMath }, /* mullw */
    { 0x0c4c, 0x7c0003d0, 0xfc00fbfe, PPCMathda }, /* nabs */
    { 0x065c, 0x7c0003b8, 0xfc0007fe, PPCMath2 }, /* nand */
    { 0x1179, 0x7c0000d0, 0xfc00fbfe, PPCMathda }, /* neg */
    { 0x09f2, 0x7c0000f8, 0xfc0007fe, PPCMath2 }, /* nor */
    { 0x000a, 0x7c000378, 0xfc0007fe, PPCMath2 }, /* or */
    { 0x09f4, 0x7c000338, 0xfc0007fe, PPCMath2 }, /* orc */
    { 0x0d85, 0x60000000, 0xfc000000, PPCImmed2 }, /* ori */
    { 0x0d86, 0x64000000, 0xfc000000, PPCImmed2 }, /* oris */
    { 0x1a70, 0x4c000064, 0xffffffff, PPCNull }, /* rfi */
    { 0x0ceb, 0x78000010, 0xfc00001e, PPCRotateD }, /* rldcl */
    { 0x0cf1, 0x78000012, 0xfc00001e, PPCRotateD }, /* rldcr */
    { 0x06cb, 0x78000008, 0xfc00001c, PPCRotateImmD }, /* rldic */
    { 0x06cc, 0x78000000, 0xfc00001c, PPCRotateImmD }, /* rldicl */
    { 0x06d3, 0x78000004, 0xfc00001c, PPCRotateImmD }, /* rldicr */
    { 0x06da, 0x7800000c, 0xfc00001c, PPCRotateImmD }, /* rldimi */
    { 0x1533, 0x58000000, 0xfc000000, PPCRotate }, /* rlmi */
    { 0x06e1, 0x50000000, 0xfc000000, PPCRotate }, /* rlwimi */
    { 0x06e8, 0x54000000, 0xfc000000, PPCRotate }, /* rlwinm */
    { 0x0cf7, 0x5c000000, 0xfc000000, PPCRotate }, /* rlwnm */
    { 0x1538, 0x7c000432, 0xfc0007fe, PPCMath2 }, /* rrib */
    { 0x016e, 0x44000002, 0xffffffff, PPCNull }, /* sc */
    { 0x0cfd, 0x7c0003e4, 0xffffffff, PPCNull }, /* slbia */
    { 0x0d03, 0x7c000364, 0xffff07ff, PPCMathb }, /* slbie */
    { 0x0286, 0x7c000036, 0xfc0007fe, PPCMath2 }, /* sld */
    { 0x153d, 0x7c000132, 0xfc0007fe, PPCMath2 }, /* sle */
    { 0x153e, 0x7c0001b2, 0xfc0007fe, PPCMath2 }, /* sleq */
    { 0x1543, 0x7c000170, 0xfc0007fe, PPCShiftImmed }, /* sliq */
    { 0x0d09, 0x7c0001f0, 0xfc0007fe, PPCShiftImmed }, /* slliq */
    { 0x0fdf, 0x7c0001b0, 0xfc0007fe, PPCMath2 }, /* sllq */
    { 0x1a74, 0x7c000130, 0xfc0007fe, PPCMath2 }, /* slq */
    { 0x1a78, 0x7c000030, 0xfc0007fe, PPCMath2 }, /* slw */
    { 0x0d0f, 0x7c000634, 0xfc0007fe, PPCMath2 }, /* srad */
    { 0x0d10, 0x7c000674, 0xfc0007fe, PPCShiftImmedD }, /* sradi */
    { 0x1548, 0x7c000730, 0xfc0007fe, PPCMath2 }, /* sraq */
    { 0x0d16, 0x7c000770, 0xfc0007fe, PPCShiftImmed }, /* sraiq */
    { 0x0d1c, 0x7c000630, 0xfc0007fe, PPCMath2 }, /* sraw */
    { 0x0d1d, 0x7c000670, 0xfc0007fe, PPCShiftImmed }, /* srawi */
    { 0x1a7c, 0x7c000436, 0xfc0007fe, PPCMath2 }, /* srd */
    { 0x099f, 0x7c000532, 0xfc0007fe, PPCMath2 }, /* sre */
    { 0x154d, 0x7c000732, 0xfc0007fe, PPCMath2 }, /* srea */
    { 0x1552, 0x7c0005b2, 0xfc0007fe, PPCMath2 }, /* sreq */
    { 0x1557, 0x7c000570, 0xfc0007fe, PPCShiftImmed }, /* sriq */
    { 0x0d23, 0x7c0005f0, 0xfc0007fe, PPCShiftImmed }, /* srliq */
    { 0x0ff8, 0x7c0005b0, 0xfc0007fe, PPCMath2 }, /* srlq */
    { 0x1a80, 0x7c000530, 0xfc0007fe, PPCMath2 }, /* srq */
    { 0x08aa, 0x7c000430, 0xfc0007fe, PPCMath2 }, /* srw */
    { 0x0d29, 0x98000000, 0xfc000000, PPCMem1 }, /* stb */
    { 0x0d2a, 0x9c000000, 0xfc000000, PPCMem1 }, /* stbu */
    { 0x0d2b, 0x7c0001ee, 0xfc0007ff, PPCMem2 }, /* stbux */
    { 0x155c, 0x7c0001ae, 0xfc0007ff, PPCMem2 }, /* stbx */
    { 0x0bed, 0xf8000000, 0xfc000003, PPCMemD1 }, /* std */
    { 0x0d31, 0x7c0001e3, 0xfc0007ff, PPCMem2 }, /* stdcx */
    { 0x0d37, 0xf8000001, 0xfc000003, PPCMemD1 }, /* stdu */
    { 0x0d38, 0x7c00016a, 0xfc0007ff, PPCMem2 }, /* stdux */
    { 0x1561, 0x7c00012a, 0xfc0007ff, PPCMem2 }, /* stdx */
    { 0x06ef, 0xd8000000, 0xfc000000, PPCFloatMem1 }, /* stfd */
    { 0x06f0, 0xdc000000, 0xfc000000, PPCFloatMem1 }, /* stfdu */
    { 0x06f1, 0x7c0005ee, 0xfc0007ff, PPCFloatMem2 }, /* stfdux */
    { 0x0d3e, 0x7c0005ae, 0xfc0007ff, PPCFloatMem2 }, /* stfdx */
    { 0x06f8, 0xd0000000, 0xfc000000, PPCFloatMem1 }, /* stfs */
    { 0x06f9, 0xd4000000, 0xfc000000, PPCFloatMem1 }, /* stfsu */
    { 0x06fa, 0x7c00056e, 0xfc0007ff, PPCFloatMem2 }, /* stfsux */
    { 0x0d44, 0x7c00052e, 0xfc0007ff, PPCFloatMem2 }, /* stfsx */
    { 0x0701, 0xb0000000, 0xfc000000, PPCMem1 }, /* sth */
    { 0x0702, 0x7c00072c, 0xfc0007ff, PPCMem2 }, /* sthbrx */
    { 0x0d4a, 0xb4000000, 0xfc000000, PPCMem1 }, /* sthu */
    { 0x0d4b, 0x7c00036e, 0xfc0007ff, PPCMem2 }, /* sthux */
    { 0x1566, 0x7c00032e, 0xfc0007ff, PPCMem2 }, /* sthx */
    { 0x156b, 0xbc000000, 0xfc000000, PPCMem1 }, /* stmw */
    { 0x0d51, 0x7c0005aa, 0xfc0007ff, PPCMem3 }, /* stswi */
    { 0x0d57, 0x7c00052a, 0xfc0007ff, PPCMem2 }, /* stswx */
    { 0x070a, 0x90000000, 0xfc000000, PPCMem1 }, /* stw */
    { 0x070b, 0x7c00052c, 0xfc0007ff, PPCMem2 }, /* stwbrx */
    { 0x0d5d, 0x7c00012d, 0xfc0007ff, PPCMem2 }, /* stwcx */
    { 0x0d63, 0x94000000, 0xfc000000, PPCMem1 }, /* stwu */
    { 0x0d64, 0x7c00016e, 0xfc0007ff, PPCMem2 }, /* stwux */
    { 0x1570, 0x7c00012e, 0xfc0007ff, PPCMem2 }, /* stwx */
    { 0x0712, 0x7c000050, 0xfc0003fe, PPCMath }, /* subf */
    { 0x0d6a, 0x7c000010, 0xfc0003fe, PPCMath }, /* subfc */
    { 0x0d70, 0x7c000110, 0xfc0003fe, PPCMath }, /* subfe */
    { 0x0713, 0x20000000, 0xfc000000, PPCImmediate }, /* subfic */
    { 0x071a, 0x7c0001d0, 0xfc00fbfe, PPCMathda }, /* subfme */
    { 0x0721, 0x7c000190, 0xfc00fbfe, PPCMathda }, /* subfze */
    { 0x0107, 0x7c0004ac, 0xffffffff, PPCNull }, /* sync */
    { 0x0168, 0x7c000088, 0xfc0007ff, PPCTrap }, /* td */
    { 0x0bef, 0x08000000, 0xfc000000, PPCTrap }, /* tdi */
    { 0x0d76, 0x7c0002e4, 0xffffffff, PPCNull }, /* tlbia */
    { 0x0d7c, 0x7c000264, 0xffff07ff, PPCMathb }, /* tlbie */
    { 0x031e, 0x7c000458, 0xffffffff, PPCNull }, /* tlbsync */
    { 0x049f, 0x7c000008, 0xfc0007ff, PPCTrap }, /* tw */
    { 0x1a84, 0x0c000000, 0xfc000000, PPCTrap }, /* twi */
    { 0x0be5, 0x7c000278, 0xfc0007fe, PPCMath2 }, /* xor */
    { 0x0d82, 0x68000000, 0xfc000000, PPCImmed2 }, /* xori */
    { 0x0d83, 0x6c000000, 0xfc000000, PPCImmed2 }, /* xoris */


    /* Machine:X86 */

    /* Table_1 */

    { 0x159d, 0x00000066, 0x000000ff, X86PrefixOpnd }, /* opnd_pr */
    { 0x15a2, 0x00000067, 0x000000ff, X86PrefixAddr }, /* addr_pr */
    { 0x15a7, 0x000000f3, 0x000000ff, X86PrefixRepe }, /* repe_pr */
    { 0x0e12, 0x00000000, 0x00000000, NULL }, /* rep_pr */
    { 0x0e13, 0x000000f2, 0x000000ff, X86PrefixRepne }, /* repne_pr */
    { 0x0346, 0x0000002e, 0x000000ff, X86PrefixCS }, /* cs_pr */
    { 0x0100, 0x00000036, 0x000000ff, X86PrefixSS }, /* ss_pr */
    { 0x01db, 0x0000003e, 0x000000ff, X86PrefixDS }, /* ds_pr */
    { 0x054f, 0x00000026, 0x000000ff, X86PrefixES }, /* es_pr */
    { 0x03a6, 0x00000064, 0x000000ff, X86PrefixFS }, /* fs_pr */
    { 0x0999, 0x00000065, 0x000000ff, X86PrefixGS }, /* gs_pr */
    { 0x15ac, 0x000000f0, 0x000000ff, X86PrefixLock }, /* lock_pr */
    { 0x0e19, 0x0000009b, 0x000000ff, X86PrefixFwait }, /* fwait */
    { 0x1aa9, 0x00000037, 0x000000ff, X86NoOp_8 }, /* aaa */
    { 0x1aad, 0x00000ad5, 0x0000ffff, X86NoOp_16 }, /* aad */
    { 0x1ab2, 0x00000ad4, 0x0000ffff, X86NoOp_16 }, /* aam */
    { 0x1ab6, 0x0000003f, 0x000000ff, X86NoOp_8 }, /* aas */
    { 0x1aba, 0x00000010, 0x000000fc, X86RegModRM_16 }, /* adc */
    { 0x1aba, 0x00000014, 0x000000fe, X86ImmAcc_8 }, /* adc2 */
    { 0x1aba, 0x00001080, 0x000038fc, X86ModRMImm_16 }, /* adc3 */
    { 0x01d6, 0x00000000, 0x000000fc, X86RegModRM_16 }, /* add */
    { 0x01d6, 0x00000004, 0x000000fe, X86ImmAcc_8 }, /* add2 */
    { 0x01d6, 0x00000080, 0x000038fc, X86ModRMImm_16 }, /* add3 */
    { 0x0638, 0x00000020, 0x000000fc, X86RegModRM_16 }, /* and */
    { 0x0638, 0x00000024, 0x000000fe, X86ImmAcc_8 }, /* and2 */
    { 0x0638, 0x00002080, 0x000038fc, X86ModRMImm_16 }, /* and3 */
    { 0x15b1, 0x00000063, 0x000000ff, X86RegModRM_16B }, /* arpl */
    { 0x0e20, 0x00000062, 0x000000ff, X86RegModRM_bound }, /* bound */
    { 0x02bd, 0x0000bc0f, 0x0000ffff, X86RegModRM_24B }, /* bsf */
    { 0x195d, 0x0000bd0f, 0x0000ffff, X86RegModRM_24B }, /* bsr */
    { 0x0e26, 0x0000c80f, 0x0000f8ff, X86Reg_16 }, /* bswap */
    { 0x0665, 0x0000a30f, 0x0000ffff, X86RegModRM_24B }, /* bt */
    { 0x0665, 0x0020ba0f, 0x0038ffff, X86ModRMImm_24 }, /* bt2 */
    { 0x1abe, 0x0000bb0f, 0x0000ffff, X86RegModRM_24B }, /* btc */
    { 0x1abe, 0x0038ba0f, 0x0038ffff, X86ModRMImm_24 }, /* btc2 */
    { 0x1ac2, 0x0000b30f, 0x0000ffff, X86RegModRM_24B }, /* btr */
    { 0x1ac2, 0x0030ba0f, 0x0038ffff, X86ModRMImm_24 }, /* btr2 */
    { 0x0666, 0x0000ab0f, 0x0000ffff, X86RegModRM_24B }, /* bts */
    { 0x0666, 0x0028ba0f, 0x0038ffff, X86ModRMImm_24 }, /* bts2 */
    { 0x0112, 0x000000e8, 0x000000ff, X86Rel_8 }, /* call */
    { 0x0112, 0x000010ff, 0x000038ff, X86ModRM_16 }, /* call2 */
    { 0x0112, 0x0000009a, 0x000000ff, X86Abs_8 }, /* call3 */
    { 0x0112, 0x000018ff, 0x000038ff, X86ModRM_16 }, /* call4 */
    { 0x1ac6, 0x00000098, 0x000000ff, X86NoOp_8 }, /* cbw */
    { 0x16b7, 0x00000000, 0x00000000, NULL }, /* cdq */
    { 0x14cc, 0x000000f8, 0x000000ff, X86NoOp_8 }, /* clc */
    { 0x1aca, 0x000000fc, 0x000000ff, X86NoOp_8 }, /* cld */
    { 0x1ace, 0x000000fa, 0x000000ff, X86NoOp_8 }, /* cli */
    { 0x15b6, 0x0000060f, 0x0000ffff, X86NoOp_16 }, /* clts */
    { 0x1ad2, 0x000000f5, 0x000000ff, X86NoOp_8 }, /* cmc */
    { 0x006c, 0x00000038, 0x000000fc, X86RegModRM_16 }, /* cmp */
    { 0x006c, 0x0000003c, 0x000000fe, X86ImmAcc_8 }, /* cmp2 */
    { 0x006c, 0x00003880, 0x000038fc, X86ModRMImm_16 }, /* cmp3 */
    { 0x105a, 0x000000a6, 0x000000fe, X86String_8 }, /* cmps */
    { 0x006d, 0x0000b00f, 0x0000feff, X86RegModRM_24 }, /* cmpxchg */
    { 0x006e, 0x0008c70f, 0x0038ffff, X86ModRM_24 }, /* cmpxchg8b */
    { 0x0e2c, 0x0000400f, 0x0000ffff, X86MovCC_24 }, /* cmovo */
    { 0x0728, 0x0000410f, 0x0000ffff, X86MovCC_24 }, /* cmovno */
    { 0x0396, 0x0000420f, 0x0000ffff, X86MovCC_24 }, /* cmovb */
    { 0x0730, 0x0000430f, 0x0000ffff, X86MovCC_24 }, /* cmovae */
    { 0x02c3, 0x0000440f, 0x0000ffff, X86MovCC_24 }, /* cmove */
    { 0x02f2, 0x0000450f, 0x0000ffff, X86MovCC_24 }, /* cmovne */
    { 0x0397, 0x0000460f, 0x0000ffff, X86MovCC_24 }, /* cmovbe */
    { 0x072f, 0x0000470f, 0x0000ffff, X86MovCC_24 }, /* cmova */
    { 0x0e32, 0x0000480f, 0x0000ffff, X86MovCC_24 }, /* cmovs */
    { 0x0737, 0x0000490f, 0x0000ffff, X86MovCC_24 }, /* cmovns */
    { 0x073e, 0x00004a0f, 0x0000ffff, X86MovCC_24 }, /* cmovp */
    { 0x073f, 0x00004b0f, 0x0000ffff, X86MovCC_24 }, /* cmovpo */
    { 0x02ae, 0x00004c0f, 0x0000ffff, X86MovCC_24 }, /* cmovl */
    { 0x02ce, 0x00004d0f, 0x0000ffff, X86MovCC_24 }, /* cmovge */
    { 0x02e0, 0x00004e0f, 0x0000ffff, X86MovCC_24 }, /* cmovle */
    { 0x02cd, 0x00004f0f, 0x0000ffff, X86MovCC_24 }, /* cmovg */
    { 0x0e38, 0x0000a20f, 0x0000ffff, X86NoOp_16 }, /* cpuid */
    { 0x15bb, 0x00000099, 0x000000ff, X86NoOp_8 }, /* cwd */
    { 0x15bc, 0x00000000, 0x00000000, NULL }, /* cwde */
    { 0x1ab0, 0x00000027, 0x000000ff, X86NoOp_8 }, /* daa */
    { 0x171b, 0x0000002f, 0x000000ff, X86NoOp_8 }, /* das */
    { 0x0343, 0x000008fe, 0x000038fe, X86ModRM_16 }, /* dec */
    { 0x0343, 0x00000048, 0x000000f8, X86Reg_8 }, /* dec2 */
    { 0x0792, 0x000030f6, 0x000038fe, X86ModRM_16 }, /* div */
    { 0x0122, 0x000000c8, 0x000000ff, X86ImmImm_8 }, /* enter */
    { 0x1ad6, 0x000000f4, 0x000000ff, X86NoOp_8 }, /* halt */
    { 0x0790, 0x000038f6, 0x000038fe, X86ModRM_16 }, /* idiv */
    { 0x0f0e, 0x000028f6, 0x000038fe, X86ModRM_16 }, /* imul */
    { 0x0f0e, 0x0000af0f, 0x0000ffff, X86RegModRM_24B }, /* imul2 */
    { 0x0f0e, 0x00000069, 0x000000fd, X86RegModRM_16B }, /* imul3 */
    { 0x0011, 0x000000e4, 0x000000fe, X86ImmAcc_8 }, /* in */
    { 0x0011, 0x000000ec, 0x000000fe, X86AccAcc_8 }, /* in2 */
    { 0x034d, 0x000000fe, 0x000038fe, X86ModRM_16 }, /* inc */
    { 0x034d, 0x00000040, 0x000000f8, X86Reg_8 }, /* inc2 */
    { 0x08a7, 0x0000006c, 0x000000fe, X86String_8 }, /* ins */
    { 0x036c, 0x000000cc, 0x000000fe, X86Imm_8 }, /* int */
    { 0x15c1, 0x000000ce, 0x000000ff, X86NoOp_8 }, /* into */
    { 0x0770, 0x0000080f, 0x0000ffff, X86NoOp_16 }, /* invd */
    { 0x0746, 0x0038010f, 0x0038ffff, X86ModRM_24 }, /* invlpg */
    { 0x0e3e, 0x000000cf, 0x000000ff, X86NoOp_8 }, /* iret */
    { 0x0e3f, 0x00000000, 0x00000000, NULL }, /* iretd */
    { 0x1d19, 0x00000070, 0x000000ff, X86JmpCC_8 }, /* jo */
    { 0x1ada, 0x00000071, 0x000000ff, X86JmpCC_8 }, /* jno */
    { 0x1ae6, 0x00000072, 0x000000ff, X86JmpCC_8 }, /* jb */
    { 0x1ade, 0x00000073, 0x000000ff, X86JmpCC_8 }, /* jae */
    { 0x0e45, 0x00000074, 0x000000ff, X86JmpCC_8 }, /* je */
    { 0x1ae2, 0x00000075, 0x000000ff, X86JmpCC_8 }, /* jne */
    { 0x1ae7, 0x00000076, 0x000000ff, X86JmpCC_8 }, /* jbe */
    { 0x18e8, 0x00000077, 0x000000ff, X86JmpCC_8 }, /* ja */
    { 0x0002, 0x00000078, 0x000000ff, X86JmpCC_8 }, /* js */
    { 0x1aeb, 0x00000079, 0x000000ff, X86JmpCC_8 }, /* jns */
    { 0x1aef, 0x0000007a, 0x000000ff, X86JmpCC_8 }, /* jp */
    { 0x1af0, 0x0000007b, 0x000000ff, X86JmpCC_8 }, /* jpo */
    { 0x1af9, 0x0000007c, 0x000000ff, X86JmpCC_8 }, /* jl */
    { 0x1af5, 0x0000007d, 0x000000ff, X86JmpCC_8 }, /* jge */
    { 0x1afa, 0x0000007e, 0x000000ff, X86JmpCC_8 }, /* jle */
    { 0x1af4, 0x0000007f, 0x000000ff, X86JmpCC_8 }, /* jg */
    { 0x1d19, 0x0000800f, 0x0000ffff, X86JmpCC_16 }, /* jo2 */
    { 0x1ada, 0x0000810f, 0x0000ffff, X86JmpCC_16 }, /* jno2 */
    { 0x1ae6, 0x0000820f, 0x0000ffff, X86JmpCC_16 }, /* jb2 */
    { 0x1ade, 0x0000830f, 0x0000ffff, X86JmpCC_16 }, /* jae2 */
    { 0x0e45, 0x0000840f, 0x0000ffff, X86JmpCC_16 }, /* je2 */
    { 0x1ae2, 0x0000850f, 0x0000ffff, X86JmpCC_16 }, /* jne2 */
    { 0x1ae7, 0x0000860f, 0x0000ffff, X86JmpCC_16 }, /* jbe2 */
    { 0x18e8, 0x0000870f, 0x0000ffff, X86JmpCC_16 }, /* ja2 */
    { 0x0002, 0x0000880f, 0x0000ffff, X86JmpCC_16 }, /* js2 */
    { 0x1aeb, 0x0000890f, 0x0000ffff, X86JmpCC_16 }, /* jns2 */
    { 0x1aef, 0x00008a0f, 0x0000ffff, X86JmpCC_16 }, /* jp2 */
    { 0x1af0, 0x00008b0f, 0x0000ffff, X86JmpCC_16 }, /* jpo2 */
    { 0x1af9, 0x00008c0f, 0x0000ffff, X86JmpCC_16 }, /* jl2 */
    { 0x1af5, 0x00008d0f, 0x0000ffff, X86JmpCC_16 }, /* jge2 */
    { 0x1afa, 0x00008e0f, 0x0000ffff, X86JmpCC_16 }, /* jle2 */
    { 0x1af4, 0x00008f0f, 0x0000ffff, X86JmpCC_16 }, /* jg2 */
    { 0x15c6, 0x000000e3, 0x000000ff, X86JmpCC_8 }, /* jcxz */
    { 0x0e46, 0x00000000, 0x00000000, NULL }, /* jecxz */
    { 0x1756, 0x000000eb, 0x000000ff, X86JmpCC_8 }, /* jmp */
    { 0x1756, 0x000000e9, 0x000000ff, X86Rel_8 }, /* jmp1 */
    { 0x1756, 0x000020ff, 0x000038ff, X86ModRM_16 }, /* jmp2 */
    { 0x1756, 0x000000ea, 0x000000ff, X86Abs_8 }, /* jmp3 */
    { 0x1756, 0x000028ff, 0x000038ff, X86ModRM_16 }, /* jmp4 */
    { 0x15cb, 0x0000009f, 0x000000ff, X86NoOp_8 }, /* lahf */
    { 0x1afe, 0x0000020f, 0x0000ffff, X86RegModRM_24B }, /* lar */
    { 0x0542, 0x000000c5, 0x000000ff, X86RegModRM_16B }, /* lds */
    { 0x1b02, 0x000000c4, 0x000000ff, X86RegModRM_16B }, /* les */
    { 0x0c6f, 0x0000b40f, 0x0000ffff, X86RegModRM_24B }, /* lfs */
    { 0x141d, 0x0000b50f, 0x0000ffff, X86RegModRM_24B }, /* lgs */
    { 0x10b3, 0x0000b20f, 0x0000ffff, X86RegModRM_24B }, /* lss */
    { 0x062c, 0x0000008d, 0x000000ff, X86RegModRM_16B }, /* lea */
    { 0x0e4d, 0x000000c9, 0x000000ff, X86NoOp_8 }, /* leave */
    { 0x15d0, 0x0010010f, 0x0038ffff, X86ModRM_24 }, /* lgdt */
    { 0x15d5, 0x0018010f, 0x0038ffff, X86ModRM_24 }, /* lidt */
    { 0x15da, 0x0010000f, 0x0038ffff, X86ModRM_24 }, /* lldt */
    { 0x15e0, 0x0030010f, 0x0038ffff, X86ModRM_24 }, /* lmsw */
    { 0x15e5, 0x000000ac, 0x000000fe, X86String_8 }, /* lods */
    { 0x0327, 0x000000e2, 0x000000ff, X86JmpCC_8 }, /* loop */
    { 0x0e53, 0x00000000, 0x00000000, NULL }, /* loopw */
    { 0x0e59, 0x00000000, 0x00000000, NULL }, /* loopd */
    { 0x074d, 0x000000e1, 0x000000ff, X86JmpCC_8 }, /* loopz */
    { 0x074e, 0x00000000, 0x00000000, NULL }, /* loopzw */
    { 0x0755, 0x00000000, 0x00000000, NULL }, /* loopzd */
    { 0x0328, 0x000000e0, 0x000000ff, X86JmpCC_8 }, /* loopnz */
    { 0x0329, 0x00000000, 0x00000000, NULL }, /* loopnzw */
    { 0x0331, 0x00000000, 0x00000000, NULL }, /* loopnzd */
    { 0x0595, 0x0018000f, 0x0038ffff, X86ModRM_24 }, /* ltr */
    { 0x1b06, 0x0000030f, 0x0000ffff, X86RegModRM_24B }, /* lsl */
    { 0x004d, 0x00000088, 0x000000fc, X86RegModRM_16 }, /* mov */
    { 0x004d, 0x000000c6, 0x000038fe, X86ModRMImm_16 }, /* mov2 */
    { 0x004d, 0x000000b0, 0x000000f0, X86ImmReg_8 }, /* mov3 */
    { 0x004d, 0x000000a0, 0x000000fc, X86MemAbsAcc_8 }, /* mov4 */
    { 0x004d, 0x0000200f, 0x0000fdff, X86CRegReg_24 }, /* mov5 */
    { 0x004d, 0x0000210f, 0x0000fdff, X86DRegReg_24 }, /* mov6 */
    { 0x004d, 0x0000008c, 0x000000fd, X86SRegModRM_16 }, /* mov7 */
    { 0x004d, 0x0000240f, 0x0000fdff, X86TRegReg_24 }, /* mov8 */
    { 0x0277, 0x000000a4, 0x000000fe, X86String_8 }, /* movs */
    { 0x0984, 0x0000be0f, 0x0000feff, X86RegModRM_24C }, /* movsx */
    { 0x0e5f, 0x0000b60f, 0x0000feff, X86RegModRM_24C }, /* movzx */
    { 0x0425, 0x000020f6, 0x000038fe, X86ModRM_16 }, /* mul */
    { 0x1179, 0x000018f6, 0x000038fe, X86ModRM_16 }, /* neg */
    { 0x05f7, 0x000010f6, 0x000038fe, X86ModRM_16 }, /* not */
    { 0x000a, 0x00000008, 0x000000fc, X86RegModRM_16 }, /* or */
    { 0x000a, 0x0000000c, 0x000000fe, X86ImmAcc_8 }, /* or2 */
    { 0x000a, 0x00000880, 0x000038fc, X86ModRMImm_16 }, /* or3 */
    { 0x000d, 0x000000e6, 0x000000fe, X86ImmAcc_8 }, /* out */
    { 0x000d, 0x000000ee, 0x000000fe, X86AccAcc_8 }, /* out2 */
    { 0x15ea, 0x0000006e, 0x000000fe, X86String_8 }, /* outs */
    { 0x0e71, 0x0000008f, 0x000038ff, X86ModRM_16 }, /* pop */
    { 0x0e71, 0x00000058, 0x000000f8, X86Reg_8 }, /* pop2 */
    { 0x0e71, 0x00000007, 0x000000ff, X86SReg_8 }, /* pop3d */
    { 0x0e71, 0x00000017, 0x000000ff, X86SReg_8 }, /* pop3e */
    { 0x0e71, 0x0000001f, 0x000000ff, X86SReg_8 }, /* pop3s */
    { 0x0e71, 0x0000a10f, 0x0000ffff, X86SReg_16 }, /* pop4f */
    { 0x0e71, 0x0000a90f, 0x0000ffff, X86SReg_16 }, /* pop4g */
    { 0x075c, 0x000030ff, 0x000038ff, X86ModRM_16 }, /* push */
    { 0x0e65, 0x00000000, 0x00000000, NULL }, /* pushw */
    { 0x0e6b, 0x00000000, 0x00000000, NULL }, /* pushd */
    { 0x075c, 0x00000050, 0x000000f8, X86Reg_8 }, /* push2 */
    { 0x075c, 0x00000006, 0x000000e7, X86SReg_8 }, /* push3 */
    { 0x075c, 0x0000a00f, 0x0000ffff, X86SReg_16 }, /* push4f */
    { 0x075c, 0x0000a80f, 0x0000ffff, X86SReg_16 }, /* push4g */
    { 0x075c, 0x00000068, 0x000000fd, X86Imm_8 }, /* push5 */
    { 0x0e72, 0x00000061, 0x000000ff, X86NoOp_8 }, /* popa */
    { 0x0e73, 0x00000000, 0x00000000, NULL }, /* popad */
    { 0x0e79, 0x0000009d, 0x000000ff, X86NoOp_8 }, /* popf */
    { 0x0e7a, 0x00000000, 0x00000000, NULL }, /* popfd */
    { 0x075d, 0x00000060, 0x000000ff, X86NoOp_8 }, /* pusha */
    { 0x075e, 0x00000000, 0x00000000, NULL }, /* pushad */
    { 0x0765, 0x0000009c, 0x000000ff, X86NoOp_8 }, /* pushf */
    { 0x0766, 0x00000000, 0x00000000, NULL }, /* pushfd */
    { 0x14ca, 0x000010d0, 0x000038fc, X86Shift_16 }, /* rcl */
    { 0x14ca, 0x000010c0, 0x000038fe, X86ModRMImm_16 }, /* rcl2 */
    { 0x0bd8, 0x000018d0, 0x000038fc, X86Shift_16 }, /* rcr */
    { 0x0bd8, 0x000018c0, 0x000038fe, X86ModRMImm_16 }, /* rcr2 */
    { 0x0e80, 0x0000320f, 0x0000ffff, X86NoOp_16 }, /* rdmsr */
    { 0x0e86, 0x0000330f, 0x0000ffff, X86NoOp_16 }, /* rdpmc */
    { 0x0e8c, 0x0000310f, 0x0000ffff, X86NoOp_16 }, /* rdtsc */
    { 0x09a1, 0x000000c3, 0x000000ff, X86NoOp_8 }, /* ret */
    { 0x09a1, 0x000000c2, 0x000000ff, X86Imm_8 }, /* ret2 */
    { 0x15ef, 0x000000cb, 0x000000ff, X86NoOp_8 }, /* retf */
    { 0x15ef, 0x000000ca, 0x000000ff, X86Imm_8 }, /* retf2 */
    { 0x0bdd, 0x000008d0, 0x000038fc, X86Shift_16 }, /* ror */
    { 0x0bdd, 0x000008c0, 0x000038fe, X86ModRMImm_16 }, /* ror2 */
    { 0x1b0a, 0x000000d0, 0x000038fc, X86Shift_16 }, /* rol */
    { 0x1b0a, 0x000000c0, 0x000038fe, X86ModRMImm_16 }, /* rol2 */
    { 0x1b0e, 0x0000aa0f, 0x0000ffff, X86NoOp_16 }, /* rsm */
    { 0x15f4, 0x0000009e, 0x000000ff, X86NoOp_8 }, /* sahf */
    { 0x1b12, 0x00000018, 0x000000fc, X86RegModRM_16 }, /* sbb */
    { 0x1b12, 0x0000001c, 0x000000fe, X86ImmAcc_8 }, /* sbb2 */
    { 0x1b12, 0x00001880, 0x000038fc, X86ModRMImm_16 }, /* sbb3 */
    { 0x15f9, 0x000000ae, 0x000000fe, X86String_8 }, /* scas */
    { 0x15fe, 0x0000900f, 0x0038ffff, X86SetCC }, /* seto */
    { 0x0e92, 0x0000910f, 0x0038ffff, X86SetCC }, /* setno */
    { 0x0ea6, 0x0000920f, 0x0038ffff, X86SetCC }, /* setb */
    { 0x0e99, 0x0000930f, 0x0038ffff, X86SetCC }, /* setae */
    { 0x1603, 0x0000940f, 0x0038ffff, X86SetCC }, /* sete */
    { 0x0e9f, 0x0000950f, 0x0038ffff, X86SetCC }, /* setne */
    { 0x0ea7, 0x0000960f, 0x0038ffff, X86SetCC }, /* setbe */
    { 0x0e98, 0x0000970f, 0x0038ffff, X86SetCC }, /* seta */
    { 0x1608, 0x0000980f, 0x0038ffff, X86SetCC }, /* sets */
    { 0x0ead, 0x0000990f, 0x0038ffff, X86SetCC }, /* setns */
    { 0x07b0, 0x00009a0f, 0x0038ffff, X86SetCC }, /* setp */
    { 0x0eb3, 0x00009b0f, 0x0038ffff, X86SetCC }, /* setpo */
    { 0x0ec1, 0x00009c0f, 0x0038ffff, X86SetCC }, /* setl */
    { 0x0eba, 0x00009d0f, 0x0038ffff, X86SetCC }, /* setge */
    { 0x0ec2, 0x00009e0f, 0x0038ffff, X86SetCC }, /* setle */
    { 0x0eb9, 0x00009f0f, 0x0038ffff, X86SetCC }, /* setg */
    { 0x0433, 0x000020d0, 0x000038fc, X86Shift_16 }, /* shl */
    { 0x0433, 0x000020c0, 0x000038fe, X86ModRMImm_16 }, /* shl2 */
    { 0x161c, 0x000028d0, 0x000038fc, X86Shift_16 }, /* shr */
    { 0x161c, 0x000028c0, 0x000038fe, X86ModRMImm_16 }, /* shr2 */
    { 0x1b16, 0x000038d0, 0x000038fc, X86Shift_16 }, /* sar */
    { 0x1b16, 0x000038c0, 0x000038fe, X86ModRMImm_16 }, /* sar2 */
    { 0x160d, 0x0000010f, 0x0038ffff, X86ModRM_24 }, /* sgdt */
    { 0x1612, 0x0008010f, 0x00f8ffff, X86ModRM_24 }, /* sidt00 */
    { 0x1612, 0x0048010f, 0x00f8ffff, X86ModRM_24 }, /* sidt01 */
    { 0x1612, 0x0088010f, 0x00f8ffff, X86ModRM_24 }, /* sidt10 */
    { 0x1617, 0x0000000f, 0x0038ffff, X86ModRM_24 }, /* sldt */
    { 0x0434, 0x0000a50f, 0x0000ffff, X86RegModRM_24B }, /* shld */
    { 0x0434, 0x0000a40f, 0x0000ffff, X86RegModRM_24B }, /* shld2 */
    { 0x161d, 0x0000ad0f, 0x0000ffff, X86RegModRM_24B }, /* shrd */
    { 0x161d, 0x0000ac0f, 0x0000ffff, X86RegModRM_24B }, /* shrd2 */
    { 0x1622, 0x0020010f, 0x0038ffff, X86ModRM_24 }, /* smsw */
    { 0x081d, 0x000000f9, 0x000000ff, X86NoOp_8 }, /* stc */
    { 0x0bed, 0x000000fd, 0x000000ff, X86NoOp_8 }, /* std */
    { 0x1b1a, 0x000000fb, 0x000000ff, X86NoOp_8 }, /* sti */
    { 0x1627, 0x000000aa, 0x000000fe, X86String_8 }, /* stos */
    { 0x1b1e, 0x0008000f, 0x0038ffff, X86ModRM_24 }, /* str */
    { 0x01de, 0x00000028, 0x000000fc, X86RegModRM_16 }, /* sub */
    { 0x01de, 0x0000002c, 0x000000fe, X86ImmAcc_8 }, /* sub2 */
    { 0x01de, 0x00002880, 0x000038fc, X86ModRMImm_16 }, /* sub3 */
    { 0x011e, 0x0000340f, 0x0000ffff, X86NoOp_16 }, /* sysenter */
    { 0x0339, 0x0000350f, 0x0000ffff, X86NoOp_16 }, /* sysexit */
    { 0x162c, 0x00000084, 0x000000fe, X86RegModRM_test }, /* test */
    { 0x162c, 0x000000a8, 0x000000fe, X86ImmAcc_8 }, /* test2 */
    { 0x162c, 0x000000f6, 0x000038fe, X86ModRMImm_16 }, /* test3 */
    { 0x1b22, 0x0000b90f, 0x0000ffff, X86NoOp_16 }, /* ud1 */
    { 0x1b26, 0x00000b0f, 0x0000ffff, X86NoOp_16 }, /* ud2 */
    { 0x1631, 0x0020000f, 0x0038ffff, X86ModRM_24 }, /* verr */
    { 0x1636, 0x0028000f, 0x0038ffff, X86ModRM_24 }, /* verw */
    { 0x076d, 0x0000090f, 0x0000ffff, X86NoOp_16 }, /* wbinvd */
    { 0x0ec8, 0x0000300f, 0x0000ffff, X86NoOp_16 }, /* wrmsr */
    { 0x163b, 0x0000c00f, 0x0000feff, X86RegModRM_24 }, /* xadd */
    { 0x0072, 0x00000086, 0x000000fe, X86RegModRM_test }, /* xchg */
    { 0x0072, 0x00000090, 0x000000f8, X86Reg_8 }, /* xchg2 */
    { 0x1640, 0x000000d7, 0x000000ff, X86NoOp_8 }, /* xlat */
    { 0x0be5, 0x00000030, 0x000000fc, X86RegModRM_16 }, /* xor */
    { 0x0be5, 0x00000034, 0x000000fe, X86ImmAcc_8 }, /* xor2 */
    { 0x0be5, 0x00003080, 0x000038fc, X86ModRMImm_16 }, /* xor3 */
    { 0x166f, 0x00000090, 0x00000000, NULL }, /* nop */
    { 0x0ecf, 0x0000f0d9, 0x0000ffff, X86FType4 }, /* f2xm1 */
    { 0x117e, 0x0000e1d9, 0x0000ffff, X86FType4 }, /* fabs */
    { 0x0c23, 0x000000d8, 0x0000f8fb, X86FType2 }, /* fadd00 */
    { 0x0c23, 0x000040d8, 0x0000f8fb, X86FType2 }, /* fadd01 */
    { 0x0c23, 0x000080d8, 0x0000f8fb, X86FType2 }, /* fadd10 */
    { 0x0c23, 0x0000c0d8, 0x0000f8fb, X86FType3 }, /* fadd11 */
    { 0x0ed5, 0x000000da, 0x0000f8fb, X86FType2 }, /* fiadd00 */
    { 0x0ed5, 0x000040da, 0x0000f8fb, X86FType2 }, /* fiadd01 */
    { 0x0ed5, 0x000080da, 0x0000f8fb, X86FType2 }, /* fiadd10 */
    { 0x0edc, 0x0000c0de, 0x0000f8ff, X86FType3 }, /* faddp */
    { 0x1645, 0x000020df, 0x0000f8ff, X86FType1 }, /* fbld00 */
    { 0x1645, 0x000060df, 0x0000f8ff, X86FType1 }, /* fbld01 */
    { 0x1645, 0x0000a0df, 0x0000f8ff, X86FType1 }, /* fbld10 */
    { 0x0ee2, 0x000030df, 0x0000f8ff, X86FType1 }, /* fbstp00 */
    { 0x0ee2, 0x000070df, 0x0000f8ff, X86FType1 }, /* fbstp01 */
    { 0x0ee2, 0x0000b0df, 0x0000f8ff, X86FType1 }, /* fbstp10 */
    { 0x164a, 0x0000e0d9, 0x0000ffff, X86FType4 }, /* fchs */
    { 0x0775, 0x0000e2db, 0x0000ffff, X86FType4 }, /* fnclex */
    { 0x0ee8, 0x00000000, 0x00000000, NULL }, /* fclex */
    { 0x0784, 0x000010d8, 0x0000f8fb, X86FType2 }, /* fcom00 */
    { 0x0784, 0x000050d8, 0x0000f8fb, X86FType2 }, /* fcom01 */
    { 0x0784, 0x000090d8, 0x0000f8fb, X86FType2 }, /* fcom10 */
    { 0x0784, 0x0000d0d8, 0x0000f8ff, X86FType3B }, /* fcom11 */
    { 0x0785, 0x000018d8, 0x0000f8fb, X86FType2 }, /* fcomp00 */
    { 0x0785, 0x000058d8, 0x0000f8fb, X86FType2 }, /* fcomp01 */
    { 0x0785, 0x000098d8, 0x0000f8fb, X86FType2 }, /* fcomp10 */
    { 0x0785, 0x0000d8d8, 0x0000f8ff, X86FType3B }, /* fcomp11 */
    { 0x077c, 0x000010da, 0x0000f8fb, X86FType2 }, /* ficom00 */
    { 0x077c, 0x000050da, 0x0000f8fb, X86FType2 }, /* ficom01 */
    { 0x077c, 0x000090da, 0x0000f8fb, X86FType2 }, /* ficom10 */
    { 0x077d, 0x000018da, 0x0000f8fb, X86FType2 }, /* ficomp00 */
    { 0x077d, 0x000058da, 0x0000f8fb, X86FType2 }, /* ficomp01 */
    { 0x077d, 0x000098da, 0x0000f8fb, X86FType2 }, /* ficomp10 */
    { 0x0786, 0x0000d9de, 0x0000ffff, X86FType4 }, /* fcompp */
    { 0x164f, 0x0000ffd9, 0x0000ffff, X86FType4 }, /* fcos */
    { 0x0341, 0x0000f6d9, 0x0000ffff, X86FType4 }, /* fdecstp */
    { 0x0797, 0x000030d8, 0x0000f8fb, X86FType2 }, /* fdiv00 */
    { 0x0797, 0x000070d8, 0x0000f8fb, X86FType2 }, /* fdiv01 */
    { 0x0797, 0x0000b0d8, 0x0000f8fb, X86FType2 }, /* fdiv10 */
    { 0x0797, 0x0000f0d8, 0x0000f8fb, X86FType3 }, /* fdiv11 */
    { 0x078d, 0x000030da, 0x0000f8fb, X86FType2 }, /* fidiv00 */
    { 0x078d, 0x000070da, 0x0000f8fb, X86FType2 }, /* fidiv01 */
    { 0x078d, 0x0000b0da, 0x0000f8fb, X86FType2 }, /* fidiv10 */
    { 0x0eee, 0x0000f8de, 0x0000f8ff, X86FType3 }, /* fdivp */
    { 0x0798, 0x000038d8, 0x0000f8fb, X86FType2 }, /* fdivr00 */
    { 0x0798, 0x000078d8, 0x0000f8fb, X86FType2 }, /* fdivr01 */
    { 0x0798, 0x0000b8d8, 0x0000f8fb, X86FType2 }, /* fdivr10 */
    { 0x0798, 0x0000f8d8, 0x0000f8fb, X86FType3 }, /* fdivr11 */
    { 0x078e, 0x000038da, 0x0000f8fb, X86FType2 }, /* fidivr00 */
    { 0x078e, 0x000078da, 0x0000f8fb, X86FType2 }, /* fidivr01 */
    { 0x078e, 0x0000b8da, 0x0000f8fb, X86FType2 }, /* fidivr10 */
    { 0x0799, 0x0000f0de, 0x0000f8ff, X86FType3 }, /* fdivrp */
    { 0x07a0, 0x0000e1db, 0x0000ffff, X86FType4 }, /* fndisi */
    { 0x0ef4, 0x00000000, 0x00000000, NULL }, /* fdisi */
    { 0x0efa, 0x0000e0db, 0x0000ffff, X86FType4 }, /* fneni */
    { 0x1654, 0x00000000, 0x00000000, NULL }, /* feni */
    { 0x0f00, 0x0000c0dd, 0x0000f8ff, X86FType3B }, /* ffree */
    { 0x0354, 0x000000d9, 0x0000f8fb, X86FType2 }, /* fld00 */
    { 0x0354, 0x000040d9, 0x0000f8fb, X86FType2 }, /* fld01 */
    { 0x0354, 0x000080d9, 0x0000f8fb, X86FType2 }, /* fld10 */
    { 0x0354, 0x0000c0d9, 0x0000f8ff, X86FType3B }, /* fld11 */
    { 0x0354, 0x000028db, 0x0000f8ff, X86FType1 }, /* fld8000 */
    { 0x0354, 0x000068db, 0x0000f8ff, X86FType1 }, /* fld8001 */
    { 0x0354, 0x0000a8db, 0x0000f8ff, X86FType1 }, /* fld8010 */
    { 0x1659, 0x000000db, 0x0000f8fb, X86FType2 }, /* fild00 */
    { 0x1659, 0x000040db, 0x0000f8fb, X86FType2 }, /* fild01 */
    { 0x1659, 0x000080db, 0x0000f8fb, X86FType2 }, /* fild10 */
    { 0x1659, 0x000028df, 0x0000f8ff, X86FType1 }, /* fild6400 */
    { 0x1659, 0x000068df, 0x0000f8ff, X86FType1 }, /* fild6401 */
    { 0x1659, 0x0000a8df, 0x0000f8ff, X86FType1 }, /* fild6410 */
    { 0x034b, 0x0000f7d9, 0x0000ffff, X86FType4 }, /* fincstp */
    { 0x07a7, 0x0000e3db, 0x0000ffff, X86FType4 }, /* fninit */
    { 0x0f06, 0x00000000, 0x00000000, NULL }, /* finit */
    { 0x0c43, 0x000008d8, 0x0000f8fb, X86FType2 }, /* fmul00 */
    { 0x0c43, 0x000048d8, 0x0000f8fb, X86FType2 }, /* fmul01 */
    { 0x0c43, 0x000088d8, 0x0000f8fb, X86FType2 }, /* fmul10 */
    { 0x0c43, 0x0000c8d8, 0x0000f8fb, X86FType3 }, /* fmul11 */
    { 0x0f0c, 0x000008da, 0x0000f8fb, X86FType2 }, /* fimul00 */
    { 0x0f0c, 0x000048da, 0x0000f8fb, X86FType2 }, /* fimul01 */
    { 0x0f0c, 0x000088da, 0x0000f8fb, X86FType2 }, /* fimul10 */
    { 0x0f14, 0x0000c8de, 0x0000f8ff, X86FType3 }, /* fmulp */
    { 0x07ae, 0x0000e4db, 0x0000ffff, X86FType4 }, /* fsetpm */
    { 0x03b0, 0x000010d9, 0x0000f8fb, X86FType2 }, /* fst00 */
    { 0x03b0, 0x000050d9, 0x0000f8fb, X86FType2 }, /* fst01 */
    { 0x03b0, 0x000090d9, 0x0000f8fb, X86FType2 }, /* fst10 */
    { 0x03b0, 0x0000d0dd, 0x0000f8ff, X86FType3B }, /* fst11 */
    { 0x165e, 0x000018d9, 0x0000f8fb, X86FType2 }, /* fstp00 */
    { 0x165e, 0x000058d9, 0x0000f8fb, X86FType2 }, /* fstp01 */
    { 0x165e, 0x000098d9, 0x0000f8fb, X86FType2 }, /* fstp10 */
    { 0x165e, 0x0000d8dd, 0x0000f8ff, X86FType3B }, /* fstp11 */
    { 0x165e, 0x000038db, 0x0000f8ff, X86FType1 }, /* fstp8000 */
    { 0x165e, 0x000078db, 0x0000f8ff, X86FType1 }, /* fstp8001 */
    { 0x165e, 0x0000b8db, 0x0000f8ff, X86FType1 }, /* fstp8010 */
    { 0x07b6, 0x000010db, 0x0000f8fb, X86FType2 }, /* fist00 */
    { 0x07b6, 0x000050db, 0x0000f8fb, X86FType2 }, /* fist01 */
    { 0x07b6, 0x000090db, 0x0000f8fb, X86FType2 }, /* fist10 */
    { 0x0f1a, 0x000018db, 0x0000f8fb, X86FType2 }, /* fistp00 */
    { 0x0f1a, 0x000058db, 0x0000f8fb, X86FType2 }, /* fistp01 */
    { 0x0f1a, 0x000098db, 0x0000f8fb, X86FType2 }, /* fistp10 */
    { 0x0f1a, 0x000038df, 0x0000f8ff, X86FType1 }, /* fistp6400 */
    { 0x0f1a, 0x000078df, 0x0000f8ff, X86FType1 }, /* fistp6401 */
    { 0x0f1a, 0x0000b8df, 0x0000f8ff, X86FType1 }, /* fistp6410 */
    { 0x07b7, 0x000008db, 0x0000f8fb, X86FType2 }, /* fisttp00 */
    { 0x07b7, 0x000048db, 0x0000f8fb, X86FType2 }, /* fisttp01 */
    { 0x07b7, 0x000088db, 0x0000f8fb, X86FType2 }, /* fisttp10 */
    { 0x07b7, 0x000008dd, 0x0000f8ff, X86FType1 }, /* fisttp6400 */
    { 0x07b7, 0x000048dd, 0x0000f8ff, X86FType1 }, /* fisttp6401 */
    { 0x07b7, 0x000088dd, 0x0000f8ff, X86FType1 }, /* fisttp6410 */
    { 0x07c7, 0x000020d8, 0x0000f8fb, X86FType2 }, /* fsub00 */
    { 0x07c7, 0x000060d8, 0x0000f8fb, X86FType2 }, /* fsub01 */
    { 0x07c7, 0x0000a0d8, 0x0000f8fb, X86FType2 }, /* fsub10 */
    { 0x07c7, 0x0000e0d8, 0x0000f8fb, X86FType3 }, /* fsub11 */
    { 0x07bf, 0x000020da, 0x0000f8fb, X86FType2 }, /* fisub00 */
    { 0x07bf, 0x000060da, 0x0000f8fb, X86FType2 }, /* fisub01 */
    { 0x07bf, 0x0000a0da, 0x0000f8fb, X86FType2 }, /* fisub10 */
    { 0x0f20, 0x0000e8de, 0x0000f8ff, X86FType3 }, /* fsubp */
    { 0x07c8, 0x000028d8, 0x0000f8fb, X86FType2 }, /* fsubr00 */
    { 0x07c8, 0x000068d8, 0x0000f8fb, X86FType2 }, /* fsubr01 */
    { 0x07c8, 0x0000a8d8, 0x0000f8fb, X86FType2 }, /* fsubr10 */
    { 0x07c8, 0x0000e8d8, 0x0000f8fb, X86FType3 }, /* fsubr11 */
    { 0x07c0, 0x000028da, 0x0000f8fb, X86FType2 }, /* fisubr00 */
    { 0x07c0, 0x000068da, 0x0000f8fb, X86FType2 }, /* fisubr01 */
    { 0x07c0, 0x0000a8da, 0x0000f8fb, X86FType2 }, /* fisubr10 */
    { 0x07c9, 0x0000e0de, 0x0000f8ff, X86FType3 }, /* fsubrp */
    { 0x1663, 0x0000e8d9, 0x0000ffff, X86FType4 }, /* fld1 */
    { 0x0f26, 0x000028d9, 0x0000f8ff, X86FType1 }, /* fldcw00 */
    { 0x0f26, 0x000068d9, 0x0000f8ff, X86FType1 }, /* fldcw01 */
    { 0x0f26, 0x0000a8d9, 0x0000f8ff, X86FType1 }, /* fldcw10 */
    { 0x0355, 0x000020d9, 0x0000f8ff, X86FTypeEnv }, /* fldenv00 */
    { 0x0355, 0x000060d9, 0x0000f8ff, X86FTypeEnv }, /* fldenv01 */
    { 0x0355, 0x0000a0d9, 0x0000f8ff, X86FTypeEnv }, /* fldenv10 */
    { 0x0356, 0x00000000, 0x00000000, NULL }, /* fldenvw */
    { 0x035e, 0x00000000, 0x00000000, NULL }, /* fldenvd */
    { 0x07d0, 0x0000e9d9, 0x0000ffff, X86FType4 }, /* fldl2t */
    { 0x07d8, 0x0000ead9, 0x0000ffff, X86FType4 }, /* fldl2e */
    { 0x0f2c, 0x0000ebd9, 0x0000ffff, X86FType4 }, /* fldpi */
    { 0x07df, 0x0000ecd9, 0x0000ffff, X86FType4 }, /* fldlg2 */
    { 0x07e6, 0x0000edd9, 0x0000ffff, X86FType4 }, /* fldln2 */
    { 0x1668, 0x0000eed9, 0x0000ffff, X86FType4 }, /* fldz */
    { 0x166d, 0x0000d0d9, 0x0000ffff, X86FType4 }, /* fnop */
    { 0x0f32, 0x0000f2d9, 0x0000ffff, X86FType4 }, /* fptan */
    { 0x07ed, 0x0000f3d9, 0x0000ffff, X86FType4 }, /* fpatan */
    { 0x07f6, 0x0000f5d9, 0x0000ffff, X86FType4 }, /* fprem1 */
    { 0x07f5, 0x0000f8d9, 0x0000ffff, X86FType4 }, /* fprem */
    { 0x0366, 0x0000fcd9, 0x0000ffff, X86FType4 }, /* frndint */
    { 0x0370, 0x000020dd, 0x0000f8ff, X86FTypeEnv }, /* frstor00 */
    { 0x0370, 0x000060dd, 0x0000f8ff, X86FTypeEnv }, /* frstor01 */
    { 0x0370, 0x0000a0dd, 0x0000f8ff, X86FTypeEnv }, /* frstor10 */
    { 0x0371, 0x00000000, 0x00000000, NULL }, /* frstorw */
    { 0x0379, 0x00000000, 0x00000000, NULL }, /* frstord */
    { 0x0381, 0x000030dd, 0x0000f8ff, X86FTypeEnv }, /* fnsave00 */
    { 0x0381, 0x000070dd, 0x0000f8ff, X86FTypeEnv }, /* fnsave01 */
    { 0x0381, 0x0000b0dd, 0x0000f8ff, X86FTypeEnv }, /* fnsave10 */
    { 0x0382, 0x00000000, 0x00000000, NULL }, /* fnsavew */
    { 0x038b, 0x00000000, 0x00000000, NULL }, /* fnsaved */
    { 0x07fd, 0x00000000, 0x00000000, NULL }, /* fsave */
    { 0x07fe, 0x00000000, 0x00000000, NULL }, /* fsavew */
    { 0x0805, 0x00000000, 0x00000000, NULL }, /* fsaved */
    { 0x0393, 0x0000c0da, 0x0000f8ff, X86FTypeCond }, /* fcmovb */
    { 0x0128, 0x0000c0db, 0x0000f8ff, X86FTypeCond }, /* fcmovnb */
    { 0x02c0, 0x0000c8da, 0x0000f8ff, X86FTypeCond }, /* fcmove */
    { 0x02f0, 0x0000c8db, 0x0000f8ff, X86FTypeCond }, /* fcmovne */
    { 0x0394, 0x0000d0da, 0x0000f8ff, X86FTypeCond }, /* fcmovbe */
    { 0x0129, 0x0000d0db, 0x0000f8ff, X86FTypeCond }, /* fcmovnbe */
    { 0x080c, 0x0000d8da, 0x0000f8ff, X86FTypeCond }, /* fcmovu */
    { 0x039e, 0x0000d8db, 0x0000f8ff, X86FTypeCond }, /* fcmovnu */
    { 0x09b3, 0x0000fad9, 0x0000ffff, X86FType4 }, /* fsqrt */
    { 0x03a8, 0x0000fbd9, 0x0000ffff, X86FType4 }, /* fsincos */
    { 0x0813, 0x0000fdd9, 0x0000ffff, X86FType4 }, /* fscale */
    { 0x03a7, 0x0000fed9, 0x0000ffff, X86FType4 }, /* fsin */
    { 0x081a, 0x000038d9, 0x0000f8ff, X86FType1 }, /* fnstcw00 */
    { 0x081a, 0x000078d9, 0x0000f8ff, X86FType1 }, /* fnstcw01 */
    { 0x081a, 0x0000b8d9, 0x0000f8ff, X86FType1 }, /* fnstcw10 */
    { 0x0f38, 0x00000000, 0x00000000, NULL }, /* fstcw */
    { 0x0133, 0x000030d9, 0x0000f8ff, X86FTypeEnv }, /* fnstenv00 */
    { 0x0133, 0x000070d9, 0x0000f8ff, X86FTypeEnv }, /* fnstenv01 */
    { 0x0133, 0x0000b0d9, 0x0000f8ff, X86FTypeEnv }, /* fnstenv10 */
    { 0x0134, 0x00000000, 0x00000000, NULL }, /* fnstenvw */
    { 0x013e, 0x00000000, 0x00000000, NULL }, /* fnstenvd */
    { 0x03b1, 0x00000000, 0x00000000, NULL }, /* fstenv */
    { 0x03b2, 0x00000000, 0x00000000, NULL }, /* fstenvw */
    { 0x03ba, 0x00000000, 0x00000000, NULL }, /* fstenvd */
    { 0x0822, 0x000038dd, 0x0000f8ff, X86FType1 }, /* fnstsw00 */
    { 0x0822, 0x000078dd, 0x0000f8ff, X86FType1 }, /* fnstsw01 */
    { 0x0822, 0x0000b8dd, 0x0000f8ff, X86FType1 }, /* fnstsw10 */
    { 0x0f3e, 0x00000000, 0x00000000, NULL }, /* fstsw */
    { 0x0822, 0x0000e0df, 0x0000ffff, X86FTypeFSTSWAX }, /* fnstsw2 */
    { 0x0f3e, 0x00000000, 0x00000000, NULL }, /* fstsw2 */
    { 0x1673, 0x0000e4d9, 0x0000ffff, X86FType4 }, /* ftst */
    { 0x03c2, 0x0000e0dd, 0x0000f8ff, X86FType3B }, /* fucom */
    { 0x03c3, 0x0000e8dd, 0x0000f8ff, X86FType3B }, /* fucomp */
    { 0x03c4, 0x0000e9da, 0x0000ffff, X86FType4 }, /* fucompp */
    { 0x1678, 0x0000e5d9, 0x0000ffff, X86FType4 }, /* fxam */
    { 0x167d, 0x0000c8d9, 0x0000f8ff, X86FType3B }, /* fxch */
    { 0x03cc, 0x0008ae0f, 0x00f8ffff, X86ModRM_24 }, /* fxrstor00 */
    { 0x03cc, 0x0048ae0f, 0x00f8ffff, X86ModRM_24 }, /* fxrstor01 */
    { 0x03cc, 0x0088ae0f, 0x00f8ffff, X86ModRM_24 }, /* fxrstor10 */
    { 0x082a, 0x0000ae0f, 0x00f8ffff, X86ModRM_24 }, /* fxsave00 */
    { 0x082a, 0x0040ae0f, 0x00f8ffff, X86ModRM_24 }, /* fxsave01 */
    { 0x082a, 0x0080ae0f, 0x00f8ffff, X86ModRM_24 }, /* fxsave10 */
    { 0x03d4, 0x0000f4d9, 0x0000ffff, X86FType4 }, /* fxtract */
    { 0x03dd, 0x0000f1d9, 0x0000ffff, X86FType4 }, /* fyl2x */
    { 0x03de, 0x0000f9d9, 0x0000ffff, X86FType4 }, /* fyl2xp1 */
    { 0x0831, 0x0000f0db, 0x0000f8ff, X86FType3C }, /* fcomi */
    { 0x0832, 0x0000f0df, 0x0000f8ff, X86FType3C }, /* fcomip */
    { 0x03e6, 0x0000e8db, 0x0000f8ff, X86FType3C }, /* fucomi */
    { 0x03e7, 0x0000e8df, 0x0000f8ff, X86FType3C }, /* fucomip */
    { 0x0f44, 0x00000e0f, 0x0000ffff, X86NoOp_16 }, /* femms */
    { 0x0015, 0x00000d0f, 0x0018ffff, X86ModRM_24 }, /* prefetch */
    { 0x007b, 0x00080d0f, 0x0018ffff, X86ModRM_24 }, /* prefetchw */
    { 0x0f4c, 0x00000f0f, 0x0000ffff, X86_3DNow }, /* prefix3dnow */
    { 0x03ef, 0x000000bf, 0x00000000, NULL }, /* pavgusb */
    { 0x0f52, 0x0000001d, 0x00000000, NULL }, /* pf2id */
    { 0x0f58, 0x0000001c, 0x00000000, NULL }, /* pf2iw */
    { 0x0f5e, 0x000000ae, 0x00000000, NULL }, /* pfacc */
    { 0x0f64, 0x0000009e, 0x00000000, NULL }, /* pfadd */
    { 0x03f8, 0x000000b0, 0x00000000, NULL }, /* pfcmpeq */
    { 0x0402, 0x00000090, 0x00000000, NULL }, /* pfcmpge */
    { 0x040a, 0x000000a0, 0x00000000, NULL }, /* pfcmpgt */
    { 0x0f6a, 0x000000a4, 0x00000000, NULL }, /* pfmax */
    { 0x0f70, 0x00000094, 0x00000000, NULL }, /* pfmin */
    { 0x0f76, 0x000000b4, 0x00000000, NULL }, /* pfmul */
    { 0x0839, 0x0000008a, 0x00000000, NULL }, /* pfnacc */
    { 0x0412, 0x0000008e, 0x00000000, NULL }, /* pfpnacc */
    { 0x0147, 0x00000096, 0x00000000, NULL }, /* pfrcp */
    { 0x0148, 0x000000a6, 0x00000000, NULL }, /* pfrcpit1 */
    { 0x0152, 0x000000b6, 0x00000000, NULL }, /* pfrcpit2 */
    { 0x015b, 0x000000a7, 0x00000000, NULL }, /* pfrsqit1 */
    { 0x041a, 0x00000097, 0x00000000, NULL }, /* pfrsqrt */
    { 0x0840, 0x0000009a, 0x00000000, NULL }, /* pfsub */
    { 0x0841, 0x000000aa, 0x00000000, NULL }, /* pfsubr */
    { 0x0f7c, 0x0000000d, 0x00000000, NULL }, /* pi2fd */
    { 0x0f82, 0x0000000c, 0x00000000, NULL }, /* pi2fw */
    { 0x0423, 0x000000b7, 0x00000000, NULL }, /* pmulhrw */
    { 0x0848, 0x000000bb, 0x00000000, NULL }, /* pswapd */

    /* Table_2 */

    { 0x0968, 0x0000580f, 0x0000ffff, X86XMMRegModRM }, /* addps */
    { 0x0851, 0x0000550f, 0x0000ffff, X86XMMRegModRM }, /* andnps */
    { 0x0f88, 0x0000540f, 0x0000ffff, X86XMMRegModRM }, /* andps */
    { 0x042d, 0x0038ae0f, 0x00f8ffff, X86ModRM_24 }, /* clflush00 */
    { 0x042d, 0x0078ae0f, 0x00f8ffff, X86ModRM_24 }, /* clflush01 */
    { 0x042d, 0x00b8ae0f, 0x00f8ffff, X86ModRM_24 }, /* clflush10 */
    { 0x0f8e, 0x0000c20f, 0x0000ffff, X86XMMRegModRMImm }, /* cmpps */
    { 0x04e0, 0x00002f0f, 0x0000ffff, X86XMMRegModRM32 }, /* comiss */
    { 0x0165, 0x00005b0f, 0x0000ffff, X86XMMRegModRM }, /* cvtdq2ps */
    { 0x0170, 0x00002a0f, 0x0000ffff, X86XMMRegModRMMixed }, /* cvtpi2ps */
    { 0x0179, 0x00005a0f, 0x0000ffff, X86XMMRegModRM64 }, /* cvtps2pd */
    { 0x0182, 0x00002d0f, 0x0000ffff, X86MMRegModRMMixed }, /* cvtps2pi */
    { 0x0085, 0x00002c0f, 0x0000ffff, X86MMRegModRMMixed }, /* cvttps2pi */
    { 0x0f94, 0x00005e0f, 0x0000ffff, X86XMMRegModRM }, /* divps */
    { 0x0f46, 0x0000770f, 0x0000ffff, X86NoOp_16 }, /* emms */
    { 0x0437, 0x0010ae0f, 0x00f8ffff, X86ModRM_24 }, /* ldmxcsr00 */
    { 0x0437, 0x0050ae0f, 0x00f8ffff, X86ModRM_24 }, /* ldmxcsr01 */
    { 0x0437, 0x0090ae0f, 0x00f8ffff, X86ModRM_24 }, /* ldmxcsr10 */
    { 0x0858, 0x00e8ae0f, 0x00ffffff, X86NoOp_24 }, /* lfence */
    { 0x018b, 0x00c0f70f, 0x00c0ffff, X86MMRegModRM }, /* maskmovq */
    { 0x0f9a, 0x00005f0f, 0x0000ffff, X86XMMRegModRM }, /* maxps */
    { 0x085f, 0x00f0ae0f, 0x00ffffff, X86NoOp_24 }, /* mfence */
    { 0x0fa0, 0x00005d0f, 0x0000ffff, X86XMMRegModRM }, /* minps */
    { 0x0440, 0x00c8010f, 0x00ffffff, X86NoOp_24 }, /* monitor */
    { 0x0866, 0x0000280f, 0x0000ffff, X86XMMRegModRM }, /* movaps_1 */
    { 0x0866, 0x0000290f, 0x0000ffff, X86XMMRegModRM_Rev }, /* movaps_2 */
    { 0x004e, 0x00006e0f, 0x0000ffff, X86MMRegModRMMixed }, /* movd_1 */
    { 0x004e, 0x00007e0f, 0x0000ffff, X86MMRegModRMMixed_Rev }, /* movd_3 */
    { 0x086d, 0x0000160f, 0x00c0ffff, X86XMMRegModRM64 }, /* movhps00_1 */
    { 0x086d, 0x0040160f, 0x00c0ffff, X86XMMRegModRM64 }, /* movhps01_1 */
    { 0x086d, 0x0080160f, 0x00c0ffff, X86XMMRegModRM64 }, /* movhps10_1 */
    { 0x0448, 0x00c0160f, 0x00c0ffff, X86XMMRegModRM64 }, /* movlhps */
    { 0x086d, 0x0000170f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movhps00_2 */
    { 0x086d, 0x0040170f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movhps01_2 */
    { 0x086d, 0x0080170f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movhps10_2 */
    { 0x0874, 0x0000120f, 0x00c0ffff, X86XMMRegModRM64 }, /* movlps00_1 */
    { 0x0874, 0x0040120f, 0x00c0ffff, X86XMMRegModRM64 }, /* movlps01_1 */
    { 0x0874, 0x0080120f, 0x00c0ffff, X86XMMRegModRM64 }, /* movlps10_1 */
    { 0x0450, 0x00c0120f, 0x00c0ffff, X86XMMRegModRM64 }, /* movhlps */
    { 0x0874, 0x0000130f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movlps00_2 */
    { 0x0874, 0x0040130f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movlps01_2 */
    { 0x0874, 0x0080130f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movlps10_2 */
    { 0x0195, 0x00c0500f, 0x00c0ffff, X86RegModRMMixed }, /* movmskps */
    { 0x087b, 0x0000c30f, 0x00c0ffff, X86RegModRM32_Rev }, /* movnti00 */
    { 0x087b, 0x0040c30f, 0x00c0ffff, X86RegModRM32_Rev }, /* movnti01 */
    { 0x087b, 0x0080c30f, 0x00c0ffff, X86RegModRM32_Rev }, /* movnti10 */
    { 0x0458, 0x00002b0f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntps00 */
    { 0x0458, 0x00402b0f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntps01 */
    { 0x0458, 0x00802b0f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntps10 */
    { 0x0882, 0x0000e70f, 0x00c0ffff, X86MMRegModRM_Rev }, /* movntq00 */
    { 0x0882, 0x0040e70f, 0x00c0ffff, X86MMRegModRM_Rev }, /* movntq01 */
    { 0x0882, 0x0080e70f, 0x00c0ffff, X86MMRegModRM_Rev }, /* movntq10 */
    { 0x0190, 0x00006f0f, 0x0000ffff, X86MMRegModRM }, /* movq_1 */
    { 0x0190, 0x00007f0f, 0x0000ffff, X86MMRegModRM_Rev }, /* movq_3 */
    { 0x0889, 0x0000100f, 0x0000ffff, X86XMMRegModRM }, /* movups_1 */
    { 0x0889, 0x0000110f, 0x0000ffff, X86XMMRegModRM_Rev }, /* movups_2 */
    { 0x0fa6, 0x0000590f, 0x0000ffff, X86XMMRegModRM }, /* mulps */
    { 0x0fac, 0x00c9010f, 0x00ffffff, X86NoOp_24 }, /* mwait */
    { 0x1023, 0x0000560f, 0x0000ffff, X86XMMRegModRM }, /* orps */
    { 0x019f, 0x00006b0f, 0x0000ffff, X86MMRegModRM }, /* packssdw_1 */
    { 0x01a8, 0x0000630f, 0x0000ffff, X86MMRegModRM }, /* packsswb_1 */
    { 0x01b2, 0x0000670f, 0x0000ffff, X86MMRegModRM }, /* packuswb_1 */
    { 0x0fb2, 0x0000fc0f, 0x0000ffff, X86MMRegModRM }, /* paddb_1 */
    { 0x0fb8, 0x0000fe0f, 0x0000ffff, X86MMRegModRM }, /* paddd_1 */
    { 0x0fbe, 0x0000d40f, 0x0000ffff, X86MMRegModRM }, /* paddq_1 */
    { 0x0890, 0x0000ec0f, 0x0000ffff, X86MMRegModRM }, /* paddsb_1 */
    { 0x0897, 0x0000ed0f, 0x0000ffff, X86MMRegModRM }, /* paddsw_1 */
    { 0x0460, 0x0000dc0f, 0x0000ffff, X86MMRegModRM }, /* paddusb_1 */
    { 0x0469, 0x0000dd0f, 0x0000ffff, X86MMRegModRM }, /* paddusw_1 */
    { 0x0fc4, 0x0000fd0f, 0x0000ffff, X86MMRegModRM }, /* paddw_1 */
    { 0x0fca, 0x0000db0f, 0x0000ffff, X86MMRegModRM }, /* pand_1 */
    { 0x0fcb, 0x0000df0f, 0x0000ffff, X86MMRegModRM }, /* pandn_1 */
    { 0x0fd1, 0x0000e00f, 0x0000ffff, X86MMRegModRM }, /* pavgb_1 */
    { 0x0fd7, 0x0000e30f, 0x0000ffff, X86MMRegModRM }, /* pavgw_1 */
    { 0x0471, 0x0000740f, 0x0000ffff, X86MMRegModRM }, /* pcmpeqb_1 */
    { 0x0479, 0x0000760f, 0x0000ffff, X86MMRegModRM }, /* pcmpeqd_1 */
    { 0x0481, 0x0000750f, 0x0000ffff, X86MMRegModRM }, /* pcmpeqw_1 */
    { 0x0489, 0x0000640f, 0x0000ffff, X86MMRegModRM }, /* pcmpgtb_1 */
    { 0x0491, 0x0000660f, 0x0000ffff, X86MMRegModRM }, /* pcmpgtd_1 */
    { 0x0499, 0x0000650f, 0x0000ffff, X86MMRegModRM }, /* pcmpgtw_1 */
    { 0x089e, 0x00c0c50f, 0x00c0ffff, X86RegModRMMixedImm }, /* pextrw_1 */
    { 0x08a5, 0x0000c40f, 0x00c0ffff, X86MMRegModRMMixedImm }, /* pinsrw00_1 */
    { 0x08a5, 0x0040c40f, 0x00c0ffff, X86MMRegModRMMixedImm }, /* pinsrw01_1 */
    { 0x08a5, 0x0080c40f, 0x00c0ffff, X86MMRegModRMMixedImm }, /* pinsrw10_1 */
    { 0x08a5, 0x00c0c40f, 0x00c0ffff, X86MMRegModRMMixedImm }, /* pinsrw11_1 */
    { 0x04a2, 0x0000f50f, 0x0000ffff, X86MMRegModRM }, /* pmaddwd_1 */
    { 0x08ae, 0x0000ee0f, 0x0000ffff, X86MMRegModRM }, /* pmaxsw_1 */
    { 0x08b6, 0x0000de0f, 0x0000ffff, X86MMRegModRM }, /* pmaxub_1 */
    { 0x08bd, 0x0000ea0f, 0x0000ffff, X86MMRegModRM }, /* pminsw_1 */
    { 0x08c4, 0x0000da0f, 0x0000ffff, X86MMRegModRM }, /* pminub_1 */
    { 0x01bb, 0x00c0d70f, 0x00c0ffff, X86RegModRMMixed }, /* pmovmskb_1 */
    { 0x04aa, 0x0000e40f, 0x0000ffff, X86MMRegModRM }, /* pmulhuw_1 */
    { 0x08cb, 0x0000e50f, 0x0000ffff, X86MMRegModRM }, /* pmulhw_1 */
    { 0x08d2, 0x0000d50f, 0x0000ffff, X86MMRegModRM }, /* pmullw_1 */
    { 0x04b3, 0x0000f40f, 0x0000ffff, X86MMRegModRM }, /* pmuludq_1 */
    { 0x1b2a, 0x0000eb0f, 0x0000ffff, X86MMRegModRM }, /* por_1 */
    { 0x0016, 0x0000180f, 0x00f8ffff, X86ModRM_24 }, /* prefetchnta00 */
    { 0x0016, 0x0040180f, 0x00f8ffff, X86ModRM_24 }, /* prefetchnta01 */
    { 0x0016, 0x0080180f, 0x00f8ffff, X86ModRM_24 }, /* prefetchnta10 */
    { 0x0024, 0x0008180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht000 */
    { 0x0024, 0x0048180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht001 */
    { 0x0024, 0x0088180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht010 */
    { 0x0030, 0x0010180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht100 */
    { 0x0030, 0x0050180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht101 */
    { 0x0030, 0x0090180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht110 */
    { 0x003c, 0x0018180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht200 */
    { 0x003c, 0x0058180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht201 */
    { 0x003c, 0x0098180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht210 */
    { 0x08db, 0x0000f60f, 0x0000ffff, X86MMRegModRM }, /* psadbw_1 */
    { 0x08e2, 0x0000700f, 0x0000ffff, X86MMRegModRMImm }, /* pshufw */
    { 0x0946, 0x00f0720f, 0x00f8ffff, X86MMRegImm }, /* pslld_1 */
    { 0x0946, 0x0000f20f, 0x0000ffff, X86MMRegModRM }, /* pslld_3 */
    { 0x0fdd, 0x00f0730f, 0x00f8ffff, X86MMRegImm }, /* psllq_1 */
    { 0x0fdd, 0x0000f30f, 0x0000ffff, X86MMRegModRM }, /* psllq_3 */
    { 0x0fe4, 0x00f0710f, 0x00f8ffff, X86MMRegImm }, /* psllw_1 */
    { 0x0fe4, 0x0000f10f, 0x0000ffff, X86MMRegModRM }, /* psllw_3 */
    { 0x0fea, 0x00e0720f, 0x00f8ffff, X86MMRegImm }, /* psrad_1 */
    { 0x0fea, 0x0000e20f, 0x0000ffff, X86MMRegModRM }, /* psrad_3 */
    { 0x0ff0, 0x00e0710f, 0x00f8ffff, X86MMRegImm }, /* psraw_1 */
    { 0x0ff0, 0x0000e10f, 0x0000ffff, X86MMRegModRM }, /* psraw_3 */
    { 0x094f, 0x00d0720f, 0x00f8ffff, X86MMRegImm }, /* psrld_1 */
    { 0x094f, 0x0000d20f, 0x0000ffff, X86MMRegModRM }, /* psrld_3 */
    { 0x0ff6, 0x00d0730f, 0x00f8ffff, X86MMRegImm }, /* psrlq_1 */
    { 0x0ff6, 0x0000d30f, 0x0000ffff, X86MMRegModRM }, /* psrlq_3 */
    { 0x0ffd, 0x00d0710f, 0x00f8ffff, X86MMRegImm }, /* psrlw_1 */
    { 0x0ffd, 0x0000d10f, 0x0000ffff, X86MMRegModRM }, /* psrlw_3 */
    { 0x1003, 0x0000f80f, 0x0000ffff, X86MMRegModRM }, /* psubb_1 */
    { 0x1009, 0x0000fa0f, 0x0000ffff, X86MMRegModRM }, /* psubd_1 */
    { 0x100f, 0x0000fb0f, 0x0000ffff, X86MMRegModRM }, /* psubq_1 */
    { 0x08e9, 0x0000e80f, 0x0000ffff, X86MMRegModRM }, /* psubsb_1 */
    { 0x08f0, 0x0000e90f, 0x0000ffff, X86MMRegModRM }, /* psubsw_1 */
    { 0x04bb, 0x0000d80f, 0x0000ffff, X86MMRegModRM }, /* psubusb_1 */
    { 0x04c4, 0x0000d90f, 0x0000ffff, X86MMRegModRM }, /* psubusw_1 */
    { 0x1015, 0x0000f90f, 0x0000ffff, X86MMRegModRM }, /* psubw_1 */
    { 0x0090, 0x0000680f, 0x0000ffff, X86MMRegModRM }, /* punpckhbw_1 */
    { 0x009a, 0x00006a0f, 0x0000ffff, X86MMRegModRM }, /* punpckhdq_1 */
    { 0x00a4, 0x0000690f, 0x0000ffff, X86MMRegModRM }, /* punpckhwd_1 */
    { 0x00ae, 0x0000600f, 0x0000ffff, X86MMRegModRM }, /* punpcklbw_1 */
    { 0x00b9, 0x0000620f, 0x0000ffff, X86MMRegModRM }, /* punpckldq_1 */
    { 0x00c5, 0x0000610f, 0x0000ffff, X86MMRegModRM }, /* punpcklwd_1 */
    { 0x1682, 0x0000ef0f, 0x0000ffff, X86MMRegModRM }, /* pxor_1 */
    { 0x101b, 0x0000530f, 0x0000ffff, X86XMMRegModRM }, /* rcpps */
    { 0x04cd, 0x0000520f, 0x0000ffff, X86XMMRegModRM }, /* rsqrtps */
    { 0x08f7, 0x00f8ae0f, 0x00ffffff, X86NoOp_24 }, /* sfence */
    { 0x08fe, 0x0000c60f, 0x0000ffff, X86XMMRegModRMImm }, /* shufps */
    { 0x04cf, 0x0000510f, 0x0000ffff, X86XMMRegModRM }, /* sqrtps */
    { 0x04d6, 0x0018ae0f, 0x00f8ffff, X86ModRM_24 }, /* stmxcsr00 */
    { 0x04d6, 0x0058ae0f, 0x00f8ffff, X86ModRM_24 }, /* stmxcsr01 */
    { 0x04d6, 0x0098ae0f, 0x00f8ffff, X86ModRM_24 }, /* stmxcsr10 */
    { 0x0229, 0x00005c0f, 0x0000ffff, X86XMMRegModRM }, /* subps */
    { 0x04de, 0x00002e0f, 0x0000ffff, X86XMMRegModRM32 }, /* ucomiss */
    { 0x01c4, 0x0000150f, 0x0000ffff, X86XMMRegModRM }, /* unpckhps */
    { 0x01cd, 0x0000140f, 0x0000ffff, X86XMMRegModRM }, /* unpcklps */
    { 0x1021, 0x0000570f, 0x0000ffff, X86XMMRegModRM }, /* xorps */

    /* Table_3 */

    { 0x090f, 0x0000580f, 0x0000ffff, X86XMMRegModRM }, /* addpd */
    { 0x01d8, 0x0000d00f, 0x0000ffff, X86XMMRegModRM }, /* addsubpd */
    { 0x0905, 0x0000550f, 0x0000ffff, X86XMMRegModRM }, /* andnpd */
    { 0x1028, 0x0000540f, 0x0000ffff, X86XMMRegModRM }, /* andpd */
    { 0x102e, 0x0000c20f, 0x0000ffff, X86XMMRegModRMImm }, /* cmppd */
    { 0x04f9, 0x00002f0f, 0x0000ffff, X86XMMRegModRM64 }, /* comisd */
    { 0x01e5, 0x00002d0f, 0x0000ffff, X86MMRegModRMMixed }, /* cvtpd2pi */
    { 0x01ee, 0x00005a0f, 0x0000ffff, X86XMMRegModRM }, /* cvtpd2ps */
    { 0x01f7, 0x00002a0f, 0x0000ffff, X86XMMRegModRMMixed }, /* cvtpi2pd */
    { 0x0200, 0x00005b0f, 0x0000ffff, X86XMMRegModRM }, /* cvtps2dq */
    { 0x00d0, 0x0000e60f, 0x0000ffff, X86XMMRegModRM }, /* cvttpd2dq */
    { 0x00da, 0x00002c0f, 0x0000ffff, X86MMRegModRMMixed }, /* cvttpd2pi */
    { 0x1035, 0x00005e0f, 0x0000ffff, X86XMMRegModRM }, /* divpd */
    { 0x090d, 0x00007c0f, 0x0000ffff, X86XMMRegModRM }, /* haddpd */
    { 0x0915, 0x00007d0f, 0x0000ffff, X86XMMRegModRM }, /* hsubpd */
    { 0x0048, 0x00c0f70f, 0x00c0ffff, X86XMMRegModRM }, /* maskmovdqu */
    { 0x103b, 0x00005f0f, 0x0000ffff, X86XMMRegModRM }, /* maxpd */
    { 0x1041, 0x00005d0f, 0x0000ffff, X86XMMRegModRM }, /* minpd */
    { 0x091c, 0x0000280f, 0x0000ffff, X86XMMRegModRM }, /* movapd_1 */
    { 0x091c, 0x0000290f, 0x0000ffff, X86XMMRegModRM_Rev }, /* movapd_2 */
    { 0x004e, 0x00006e0f, 0x0000ffff, X86XMMRegModRMMixed }, /* movd_2 */
    { 0x004e, 0x00007e0f, 0x0000ffff, X86XMMRegModRMMixed_Rev }, /* movd_4 */
    { 0x0923, 0x00006f0f, 0x0000ffff, X86XMMRegModRM }, /* movdqa_1 */
    { 0x0923, 0x00007f0f, 0x0000ffff, X86XMMRegModRM_Rev }, /* movdqa_2 */
    { 0x092a, 0x0000160f, 0x00c0ffff, X86XMMRegModRM64 }, /* movhpd00_1 */
    { 0x092a, 0x0040160f, 0x00c0ffff, X86XMMRegModRM64 }, /* movhpd01_1 */
    { 0x092a, 0x0080160f, 0x00c0ffff, X86XMMRegModRM64 }, /* movhpd10_1 */
    { 0x092a, 0x0000170f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movhpd00_2 */
    { 0x092a, 0x0040170f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movhpd01_2 */
    { 0x092a, 0x0080170f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movhpd10_2 */
    { 0x0931, 0x0000120f, 0x00c0ffff, X86XMMRegModRM64 }, /* movlpd00_1 */
    { 0x0931, 0x0040120f, 0x00c0ffff, X86XMMRegModRM64 }, /* movlpd01_1 */
    { 0x0931, 0x0080120f, 0x00c0ffff, X86XMMRegModRM64 }, /* movlpd10_1 */
    { 0x0931, 0x0000130f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movlpd00_2 */
    { 0x0931, 0x0040130f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movlpd01_2 */
    { 0x0931, 0x0080130f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movlpd10_2 */
    { 0x0209, 0x00c0500f, 0x00c0ffff, X86RegModRMMixed }, /* movmskpd */
    { 0x04e7, 0x0000e70f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntdq00 */
    { 0x04e7, 0x0040e70f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntdq01 */
    { 0x04e7, 0x0080e70f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntdq10 */
    { 0x04ef, 0x00002b0f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntpd00 */
    { 0x04ef, 0x00402b0f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntpd01 */
    { 0x04ef, 0x00802b0f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntpd10 */
    { 0x0190, 0x0000d60f, 0x0000ffff, X86XMMRegModRM64_Rev }, /* movq_4 */
    { 0x0938, 0x0000100f, 0x0000ffff, X86XMMRegModRM }, /* movupd_1 */
    { 0x0938, 0x0000110f, 0x0000ffff, X86XMMRegModRM_Rev }, /* movupd_2 */
    { 0x1047, 0x0000590f, 0x0000ffff, X86XMMRegModRM }, /* mulpd */
    { 0x104f, 0x0000560f, 0x0000ffff, X86XMMRegModRM }, /* orpd */
    { 0x019f, 0x00006b0f, 0x0000ffff, X86XMMRegModRM }, /* packssdw_2 */
    { 0x01a8, 0x0000630f, 0x0000ffff, X86XMMRegModRM }, /* packsswb_2 */
    { 0x01b2, 0x0000670f, 0x0000ffff, X86XMMRegModRM }, /* packuswb_2 */
    { 0x0fb2, 0x0000fc0f, 0x0000ffff, X86XMMRegModRM }, /* paddb_2 */
    { 0x0fb8, 0x0000fe0f, 0x0000ffff, X86XMMRegModRM }, /* paddd_2 */
    { 0x0fbe, 0x0000d40f, 0x0000ffff, X86XMMRegModRM }, /* paddq_2 */
    { 0x0890, 0x0000ec0f, 0x0000ffff, X86XMMRegModRM }, /* paddsb_2 */
    { 0x0897, 0x0000ed0f, 0x0000ffff, X86XMMRegModRM }, /* paddsw_2 */
    { 0x0460, 0x0000dc0f, 0x0000ffff, X86XMMRegModRM }, /* paddusb_2 */
    { 0x0469, 0x0000dd0f, 0x0000ffff, X86XMMRegModRM }, /* paddusw_2 */
    { 0x0fc4, 0x0000fd0f, 0x0000ffff, X86XMMRegModRM }, /* paddw_2 */
    { 0x0fca, 0x0000db0f, 0x0000ffff, X86XMMRegModRM }, /* pand_2 */
    { 0x0fcb, 0x0000df0f, 0x0000ffff, X86XMMRegModRM }, /* pandn_2 */
    { 0x0fd1, 0x0000e00f, 0x0000ffff, X86XMMRegModRM }, /* pavgb_2 */
    { 0x0fd7, 0x0000e30f, 0x0000ffff, X86XMMRegModRM }, /* pavgw_2 */
    { 0x0471, 0x0000740f, 0x0000ffff, X86XMMRegModRM }, /* pcmpeqb_2 */
    { 0x0479, 0x0000760f, 0x0000ffff, X86XMMRegModRM }, /* pcmpeqd_2 */
    { 0x0481, 0x0000750f, 0x0000ffff, X86XMMRegModRM }, /* pcmpeqw_2 */
    { 0x0489, 0x0000640f, 0x0000ffff, X86XMMRegModRM }, /* pcmpgtb_2 */
    { 0x0491, 0x0000660f, 0x0000ffff, X86XMMRegModRM }, /* pcmpgtd_2 */
    { 0x0499, 0x0000650f, 0x0000ffff, X86XMMRegModRM }, /* pcmpgtw_2 */
    { 0x089e, 0x00c0c50f, 0x00c0ffff, X86RegModRMMixedImm }, /* pextrw_2 */
    { 0x08a5, 0x0000c40f, 0x00c0ffff, X86XMMRegModRMMixedImm }, /* pinsrw00_2 */
    { 0x08a5, 0x0040c40f, 0x00c0ffff, X86XMMRegModRMMixedImm }, /* pinsrw01_2 */
    { 0x08a5, 0x0080c40f, 0x00c0ffff, X86XMMRegModRMMixedImm }, /* pinsrw10_2 */
    { 0x08a5, 0x00c0c40f, 0x00c0ffff, X86XMMRegModRMMixedImm }, /* pinsrw11_2 */
    { 0x04a2, 0x0000f50f, 0x0000ffff, X86XMMRegModRM }, /* pmaddwd_2 */
    { 0x08ae, 0x0000ee0f, 0x0000ffff, X86XMMRegModRM }, /* pmaxsw_2 */
    { 0x08b6, 0x0000de0f, 0x0000ffff, X86XMMRegModRM }, /* pmaxub_2 */
    { 0x08bd, 0x0000ea0f, 0x0000ffff, X86XMMRegModRM }, /* pminsw_2 */
    { 0x08c4, 0x0000da0f, 0x0000ffff, X86XMMRegModRM }, /* pminub_2 */
    { 0x01bb, 0x00c0d70f, 0x00c0ffff, X86RegModRMMixed }, /* pmovmskb_2 */
    { 0x04aa, 0x0000e40f, 0x0000ffff, X86XMMRegModRM }, /* pmulhuw_2 */
    { 0x08cb, 0x0000e50f, 0x0000ffff, X86XMMRegModRM }, /* pmulhw_2 */
    { 0x08d2, 0x0000d50f, 0x0000ffff, X86XMMRegModRM }, /* pmullw_2 */
    { 0x04b3, 0x0000f40f, 0x0000ffff, X86XMMRegModRM }, /* pmuludq_2 */
    { 0x1b2a, 0x0000eb0f, 0x0000ffff, X86XMMRegModRM }, /* por_2 */
    { 0x08db, 0x0000f60f, 0x0000ffff, X86XMMRegModRM }, /* psadbw_2 */
    { 0x093f, 0x0000700f, 0x0000ffff, X86XMMRegModRMImm }, /* pshufd */
    { 0x0947, 0x00f8730f, 0x00f8ffff, X86XMMRegImm }, /* pslldq */
    { 0x0946, 0x00f0720f, 0x00f8ffff, X86XMMRegImm }, /* pslld_2 */
    { 0x0946, 0x0000f20f, 0x0000ffff, X86XMMRegModRM }, /* pslld_4 */
    { 0x0fdd, 0x00f0730f, 0x00f8ffff, X86XMMRegImm }, /* psllq_2 */
    { 0x0fdd, 0x0000f30f, 0x0000ffff, X86XMMRegModRM }, /* psllq_4 */
    { 0x0fe4, 0x00f0710f, 0x00f8ffff, X86XMMRegImm }, /* psllw_2 */
    { 0x0fe4, 0x0000f10f, 0x0000ffff, X86XMMRegModRM }, /* psllw_4 */
    { 0x0fea, 0x00e0720f, 0x00f8ffff, X86XMMRegImm }, /* psrad_2 */
    { 0x0fea, 0x0000e20f, 0x0000ffff, X86XMMRegModRM }, /* psrad_4 */
    { 0x0ff0, 0x00e0710f, 0x00f8ffff, X86XMMRegImm }, /* psraw_2 */
    { 0x0ff0, 0x0000e10f, 0x0000ffff, X86XMMRegModRM }, /* psraw_4 */
    { 0x0950, 0x00d8730f, 0x00f8ffff, X86XMMRegImm }, /* psrldq */
    { 0x094f, 0x00d0720f, 0x00f8ffff, X86XMMRegImm }, /* psrld_2 */
    { 0x094f, 0x0000d20f, 0x0000ffff, X86XMMRegModRM }, /* psrld_4 */
    { 0x0ff6, 0x00d0730f, 0x00f8ffff, X86XMMRegImm }, /* psrlq_2 */
    { 0x0ff6, 0x0000d30f, 0x0000ffff, X86XMMRegModRM }, /* psrlq_4 */
    { 0x0ffd, 0x00d0710f, 0x00f8ffff, X86XMMRegImm }, /* psrlw_2 */
    { 0x0ffd, 0x0000d10f, 0x0000ffff, X86XMMRegModRM }, /* psrlw_4 */
    { 0x1003, 0x0000f80f, 0x0000ffff, X86XMMRegModRM }, /* psubb_2 */
    { 0x1009, 0x0000fa0f, 0x0000ffff, X86XMMRegModRM }, /* psubd_2 */
    { 0x100f, 0x0000fb0f, 0x0000ffff, X86XMMRegModRM }, /* psubq_2 */
    { 0x08e9, 0x0000e80f, 0x0000ffff, X86XMMRegModRM }, /* psubsb_2 */
    { 0x08f0, 0x0000e90f, 0x0000ffff, X86XMMRegModRM }, /* psubsw_2 */
    { 0x04bb, 0x0000d80f, 0x0000ffff, X86XMMRegModRM }, /* psubusb_2 */
    { 0x04c4, 0x0000d90f, 0x0000ffff, X86XMMRegModRM }, /* psubusw_2 */
    { 0x1015, 0x0000f90f, 0x0000ffff, X86XMMRegModRM }, /* psubw_2 */
    { 0x0056, 0x00006d0f, 0x0000ffff, X86XMMRegModRM }, /* punpckhqdq */
    { 0x0090, 0x0000680f, 0x0000ffff, X86XMMRegModRM }, /* punpckhbw_2 */
    { 0x009a, 0x00006a0f, 0x0000ffff, X86XMMRegModRM }, /* punpckhdq_2 */
    { 0x00a4, 0x0000690f, 0x0000ffff, X86XMMRegModRM }, /* punpckhwd_2 */
    { 0x0061, 0x00006c0f, 0x0000ffff, X86XMMRegModRM }, /* punpcklqdq */
    { 0x00ae, 0x0000600f, 0x0000ffff, X86XMMRegModRM }, /* punpcklbw_2 */
    { 0x00b9, 0x0000620f, 0x0000ffff, X86XMMRegModRM }, /* punpckldq_2 */
    { 0x00c5, 0x0000610f, 0x0000ffff, X86XMMRegModRM }, /* punpcklwd_2 */
    { 0x1682, 0x0000ef0f, 0x0000ffff, X86XMMRegModRM }, /* pxor_2 */
    { 0x0958, 0x0000c60f, 0x0000ffff, X86XMMRegModRMImm }, /* shufpd */
    { 0x095f, 0x0000510f, 0x0000ffff, X86XMMRegModRM }, /* sqrtpd */
    { 0x01df, 0x00005c0f, 0x0000ffff, X86XMMRegModRM }, /* subpd */
    { 0x04f7, 0x00002e0f, 0x0000ffff, X86XMMRegModRM64 }, /* ucomisd */
    { 0x0212, 0x0000150f, 0x0000ffff, X86XMMRegModRM }, /* unpckhpd */
    { 0x021b, 0x0000140f, 0x0000ffff, X86XMMRegModRM }, /* unpcklpd */
    { 0x104d, 0x0000570f, 0x0000ffff, X86XMMRegModRM }, /* xorpd */

    /* Table_4 */

    { 0x1054, 0x0000580f, 0x0000ffff, X86XMMRegModRM64 }, /* addsd */
    { 0x0225, 0x0000d00f, 0x0000ffff, X86XMMRegModRM }, /* addsubps */
    { 0x105b, 0x0000c20f, 0x0000ffff, X86XMMRegModRM64Imm }, /* cmpsd */
    { 0x022f, 0x0000e60f, 0x0000ffff, X86XMMRegModRM }, /* cvtpd2dq */
    { 0x0238, 0x00002d0f, 0x0000ffff, X86RegModRMMixed }, /* cvtsd2si */
    { 0x0241, 0x00005a0f, 0x0000ffff, X86XMMRegModRM64 }, /* cvtsd2ss */
    { 0x024a, 0x00002a0f, 0x0000ffff, X86XMMRegModRMMixed }, /* cvtsi2sd */
    { 0x00e5, 0x00002c0f, 0x0000ffff, X86RegModRMMixed }, /* cvttsd2si */
    { 0x1061, 0x00005e0f, 0x0000ffff, X86XMMRegModRM64 }, /* divsd */
    { 0x0966, 0x00007c0f, 0x0000ffff, X86XMMRegModRM }, /* haddps */
    { 0x096e, 0x00007d0f, 0x0000ffff, X86XMMRegModRM }, /* hsubps */
    { 0x1068, 0x0000f00f, 0x00c0ffff, X86XMMRegModRM }, /* lddqu00 */
    { 0x1068, 0x0040f00f, 0x00c0ffff, X86XMMRegModRM }, /* lddqu01 */
    { 0x1068, 0x0080f00f, 0x00c0ffff, X86XMMRegModRM }, /* lddqu10 */
    { 0x106e, 0x00005f0f, 0x0000ffff, X86XMMRegModRM64 }, /* maxsd */
    { 0x1074, 0x00005d0f, 0x0000ffff, X86XMMRegModRM64 }, /* minsd */
    { 0x0500, 0x0000120f, 0x0000ffff, X86XMMRegModRM64 }, /* movddup */
    { 0x0508, 0x00c0d60f, 0x00c0ffff, X86MMRegModRMMixed }, /* movdq2q */
    { 0x107a, 0x0000100f, 0x0000ffff, X86XMMRegModRM64 }, /* movsd_1 */
    { 0x107a, 0x0000110f, 0x0000ffff, X86XMMRegModRM64_Rev }, /* movsd_2 */
    { 0x1080, 0x0000590f, 0x0000ffff, X86XMMRegModRM64 }, /* mulsd */
    { 0x0510, 0x0000700f, 0x0000ffff, X86XMMRegModRMImm }, /* pshuflw */
    { 0x0975, 0x0000510f, 0x0000ffff, X86XMMRegModRM64 }, /* sqrtsd */
    { 0x1086, 0x00005c0f, 0x0000ffff, X86XMMRegModRM64 }, /* subsd */

    /* Table_5 */

    { 0x108c, 0x0000580f, 0x0000ffff, X86XMMRegModRM32 }, /* addss */
    { 0x1092, 0x0000c20f, 0x0000ffff, X86XMMRegModRM32Imm }, /* cmpss */
    { 0x0253, 0x0000e60f, 0x0000ffff, X86XMMRegModRM64 }, /* cvtdq2pd */
    { 0x025c, 0x00002a0f, 0x0000ffff, X86XMMRegModRMMixed }, /* cvtsi2ss */
    { 0x0265, 0x00005a0f, 0x0000ffff, X86XMMRegModRM32 }, /* cvtss2sd */
    { 0x026e, 0x00002d0f, 0x0000ffff, X86RegModRMMixed }, /* cvtss2si */
    { 0x00f1, 0x00005b0f, 0x0000ffff, X86XMMRegModRM }, /* cvttps2dq */
    { 0x00fb, 0x00002c0f, 0x0000ffff, X86RegModRMMixed }, /* cvttss2si */
    { 0x1098, 0x00005e0f, 0x0000ffff, X86XMMRegModRM32 }, /* divss */
    { 0x109e, 0x00005f0f, 0x0000ffff, X86XMMRegModRM32 }, /* maxss */
    { 0x10a4, 0x00005d0f, 0x0000ffff, X86XMMRegModRM32 }, /* minss */
    { 0x004f, 0x00006f0f, 0x0000ffff, X86XMMRegModRM }, /* movdqu_1 */
    { 0x004f, 0x00007f0f, 0x0000ffff, X86XMMRegModRM_Rev }, /* movdqu_2 */
    { 0x0190, 0x00007e0f, 0x0000ffff, X86XMMRegModRM64 }, /* movq_2 */
    { 0x0518, 0x00c0d60f, 0x00c0ffff, X86XMMRegModRMMixed }, /* movq2dq */
    { 0x0278, 0x0000160f, 0x0000ffff, X86XMMRegModRM }, /* movshdup */
    { 0x0282, 0x0000120f, 0x0000ffff, X86XMMRegModRM }, /* movsldup */
    { 0x10aa, 0x0000100f, 0x0000ffff, X86XMMRegModRM32 }, /* movss_1 */
    { 0x10aa, 0x0000110f, 0x0000ffff, X86XMMRegModRM32_Rev }, /* movss_2 */
    { 0x10b0, 0x0000590f, 0x0000ffff, X86XMMRegModRM32 }, /* mulss */
    { 0x10b7, 0x00000090, 0x00000000, NULL }, /* pause */
    { 0x0520, 0x0000700f, 0x0000ffff, X86XMMRegModRMImm }, /* pshufhw */
    { 0x10bd, 0x0000530f, 0x0000ffff, X86XMMRegModRM32 }, /* rcpss */
    { 0x0528, 0x0000520f, 0x0000ffff, X86XMMRegModRM32 }, /* rsqrtss */
    { 0x052a, 0x0000510f, 0x0000ffff, X86XMMRegModRM32 }, /* sqrtss */
    { 0x10c3, 0x00005c0f, 0x0000ffff, X86XMMRegModRM32 }, /* subss */


    /* Machine:X64 */

    /* Table_1 */

    { 0x1b72, 0x00000040, 0x000000f0, X64PrefixRex }, /* rex_pr */
    { 0x159d, 0x00000066, 0x000000ff, X64PrefixOpnd }, /* opnd_pr */
    { 0x15a2, 0x00000067, 0x000000ff, X64PrefixAddr }, /* addr_pr */
    { 0x15a7, 0x000000f3, 0x000000ff, X64PrefixRepe }, /* repe_pr */
    { 0x0e12, 0x00000000, 0x00000000, NULL }, /* rep_pr */
    { 0x0e13, 0x000000f2, 0x000000ff, X64PrefixRepne }, /* repne_pr */
    { 0x0346, 0x0000002e, 0x000000ff, X64PrefixCS }, /* cs_pr */
    { 0x0100, 0x00000036, 0x000000ff, X64PrefixSS }, /* ss_pr */
    { 0x01db, 0x0000003e, 0x000000ff, X64PrefixDS }, /* ds_pr */
    { 0x054f, 0x00000026, 0x000000ff, X64PrefixES }, /* es_pr */
    { 0x03a6, 0x00000064, 0x000000ff, X64PrefixFS }, /* fs_pr */
    { 0x0999, 0x00000065, 0x000000ff, X64PrefixGS }, /* gs_pr */
    { 0x15ac, 0x000000f0, 0x000000ff, X64PrefixLock }, /* lock_pr */
    { 0x1aba, 0x00000010, 0x000000fc, X64RegModRM_16 }, /* adc */
    { 0x1aba, 0x00000014, 0x000000fe, X64ImmAcc_8 }, /* adc2 */
    { 0x1aba, 0x00001080, 0x000038fc, X64ModRMImm_16 }, /* adc3 */
    { 0x01d6, 0x00000000, 0x000000fc, X64RegModRM_16 }, /* add */
    { 0x01d6, 0x00000004, 0x000000fe, X64ImmAcc_8 }, /* add2 */
    { 0x01d6, 0x00000080, 0x000038fc, X64ModRMImm_16 }, /* add3 */
    { 0x0638, 0x00000020, 0x000000fc, X64RegModRM_16 }, /* and */
    { 0x0638, 0x00000024, 0x000000fe, X64ImmAcc_8 }, /* and2 */
    { 0x0638, 0x00002080, 0x000038fc, X64ModRMImm_16 }, /* and3 */
    { 0x02bd, 0x0000bc0f, 0x0000ffff, X64RegModRM_24B }, /* bsf */
    { 0x195d, 0x0000bd0f, 0x0000ffff, X64RegModRM_24B }, /* bsr */
    { 0x0e26, 0x0000c80f, 0x0000f8ff, X64Reg_16 }, /* bswap */
    { 0x0665, 0x0000a30f, 0x0000ffff, X64RegModRM_24B }, /* bt */
    { 0x0665, 0x0020ba0f, 0x0038ffff, X64ModRMImm_24 }, /* bt2 */
    { 0x1abe, 0x0000bb0f, 0x0000ffff, X64RegModRM_24B }, /* btc */
    { 0x1abe, 0x0038ba0f, 0x0038ffff, X64ModRMImm_24 }, /* btc2 */
    { 0x1ac2, 0x0000b30f, 0x0000ffff, X64RegModRM_24B }, /* btr */
    { 0x1ac2, 0x0030ba0f, 0x0038ffff, X64ModRMImm_24 }, /* btr2 */
    { 0x0666, 0x0000ab0f, 0x0000ffff, X64RegModRM_24B }, /* bts */
    { 0x0666, 0x0028ba0f, 0x0038ffff, X64ModRMImm_24 }, /* bts2 */
    { 0x0112, 0x000000e8, 0x000000ff, X64Rel_8 }, /* call */
    { 0x0112, 0x000010ff, 0x000038ff, X64ModRM_16 }, /* call2 */
    { 0x0112, 0x000018ff, 0x000038ff, X64ModRM_16 }, /* call4 */
    { 0x15bc, 0x00000098, 0x000000ff, X64NoOp_8 }, /* cwde */
    { 0x1ac6, 0x00000000, 0x00000000, NULL }, /* cbw */
    { 0x16b8, 0x00000000, 0x00000000, NULL }, /* cdqe */
    { 0x14cc, 0x000000f8, 0x000000ff, X64NoOp_8 }, /* clc */
    { 0x1aca, 0x000000fc, 0x000000ff, X64NoOp_8 }, /* cld */
    { 0x1ace, 0x000000fa, 0x000000ff, X64NoOp_8 }, /* cli */
    { 0x15b6, 0x0000060f, 0x0000ffff, X64NoOp_16 }, /* clts */
    { 0x1ad2, 0x000000f5, 0x000000ff, X64NoOp_8 }, /* cmc */
    { 0x006c, 0x00000038, 0x000000fc, X64RegModRM_16 }, /* cmp */
    { 0x006c, 0x0000003c, 0x000000fe, X64ImmAcc_8 }, /* cmp2 */
    { 0x006c, 0x00003880, 0x000038fc, X64ModRMImm_16 }, /* cmp3 */
    { 0x105a, 0x000000a6, 0x000000fe, X64String_8 }, /* cmps */
    { 0x006d, 0x0000b00f, 0x0000feff, X64RegModRM_24 }, /* cmpxchg */
    { 0x006e, 0x0008c70f, 0x0038ffff, X64ModRM_24 }, /* cmpxchg8b */
    { 0x0e2c, 0x0000400f, 0x0000ffff, X64MovCC_24 }, /* cmovo */
    { 0x0728, 0x0000410f, 0x0000ffff, X64MovCC_24 }, /* cmovno */
    { 0x0396, 0x0000420f, 0x0000ffff, X64MovCC_24 }, /* cmovb */
    { 0x0730, 0x0000430f, 0x0000ffff, X64MovCC_24 }, /* cmovae */
    { 0x02c3, 0x0000440f, 0x0000ffff, X64MovCC_24 }, /* cmove */
    { 0x02f2, 0x0000450f, 0x0000ffff, X64MovCC_24 }, /* cmovne */
    { 0x0397, 0x0000460f, 0x0000ffff, X64MovCC_24 }, /* cmovbe */
    { 0x072f, 0x0000470f, 0x0000ffff, X64MovCC_24 }, /* cmova */
    { 0x0e32, 0x0000480f, 0x0000ffff, X64MovCC_24 }, /* cmovs */
    { 0x0737, 0x0000490f, 0x0000ffff, X64MovCC_24 }, /* cmovns */
    { 0x073e, 0x00004a0f, 0x0000ffff, X64MovCC_24 }, /* cmovp */
    { 0x073f, 0x00004b0f, 0x0000ffff, X64MovCC_24 }, /* cmovpo */
    { 0x02ae, 0x00004c0f, 0x0000ffff, X64MovCC_24 }, /* cmovl */
    { 0x02ce, 0x00004d0f, 0x0000ffff, X64MovCC_24 }, /* cmovge */
    { 0x02e0, 0x00004e0f, 0x0000ffff, X64MovCC_24 }, /* cmovle */
    { 0x02cd, 0x00004f0f, 0x0000ffff, X64MovCC_24 }, /* cmovg */
    { 0x0e38, 0x0000a20f, 0x0000ffff, X64NoOp_16 }, /* cpuid */
    { 0x16b7, 0x00000099, 0x000000ff, X64NoOp_8 }, /* cdq */
    { 0x15bb, 0x00000000, 0x00000000, NULL }, /* cwd */
    { 0x1b77, 0x00000000, 0x00000000, NULL }, /* cqo */
    { 0x0343, 0x000008fe, 0x000038fe, X64ModRM_16 }, /* dec */
    { 0x0792, 0x000030f6, 0x000038fe, X64ModRM_16 }, /* div */
    { 0x0122, 0x000000c8, 0x000000ff, X64ImmImm_8 }, /* enter */
    { 0x1ad6, 0x000000f4, 0x000000ff, X64NoOp_8 }, /* halt */
    { 0x0790, 0x000038f6, 0x000038fe, X64ModRM_16 }, /* idiv */
    { 0x0f0e, 0x000028f6, 0x000038fe, X64ModRM_16 }, /* imul */
    { 0x0f0e, 0x0000af0f, 0x0000ffff, X64RegModRM_24B }, /* imul2 */
    { 0x0f0e, 0x00000069, 0x000000fd, X64RegModRM_16B }, /* imul3 */
    { 0x0011, 0x000000e4, 0x000000fe, X64ImmAcc_8 }, /* in */
    { 0x0011, 0x000000ec, 0x000000fe, X64AccAcc_8 }, /* in2 */
    { 0x034d, 0x000000fe, 0x000038fe, X64ModRM_16 }, /* inc */
    { 0x08a7, 0x0000006c, 0x000000fe, X64String_8 }, /* ins */
    { 0x036c, 0x000000cc, 0x000000fe, X64Imm_8 }, /* int */
    { 0x15c1, 0x000000ce, 0x000000ff, X64NoOp_8 }, /* into */
    { 0x0770, 0x0000080f, 0x0000ffff, X64NoOp_16 }, /* invd */
    { 0x0746, 0x0038010f, 0x0078ffff, X64ModRM_24 }, /* invlpg */
    { 0x0e3f, 0x000000cf, 0x000000ff, X64NoOp_8 }, /* iretd */
    { 0x0e3e, 0x00000000, 0x00000000, NULL }, /* iret */
    { 0x110e, 0x00000000, 0x00000000, NULL }, /* iretq */
    { 0x1d19, 0x00000070, 0x000000ff, X64JmpCC_8 }, /* jo */
    { 0x1ada, 0x00000071, 0x000000ff, X64JmpCC_8 }, /* jno */
    { 0x1ae6, 0x00000072, 0x000000ff, X64JmpCC_8 }, /* jb */
    { 0x1ade, 0x00000073, 0x000000ff, X64JmpCC_8 }, /* jae */
    { 0x0e45, 0x00000074, 0x000000ff, X64JmpCC_8 }, /* je */
    { 0x1ae2, 0x00000075, 0x000000ff, X64JmpCC_8 }, /* jne */
    { 0x1ae7, 0x00000076, 0x000000ff, X64JmpCC_8 }, /* jbe */
    { 0x18e8, 0x00000077, 0x000000ff, X64JmpCC_8 }, /* ja */
    { 0x0002, 0x00000078, 0x000000ff, X64JmpCC_8 }, /* js */
    { 0x1aeb, 0x00000079, 0x000000ff, X64JmpCC_8 }, /* jns */
    { 0x1aef, 0x0000007a, 0x000000ff, X64JmpCC_8 }, /* jp */
    { 0x1af0, 0x0000007b, 0x000000ff, X64JmpCC_8 }, /* jpo */
    { 0x1af9, 0x0000007c, 0x000000ff, X64JmpCC_8 }, /* jl */
    { 0x1af5, 0x0000007d, 0x000000ff, X64JmpCC_8 }, /* jge */
    { 0x1afa, 0x0000007e, 0x000000ff, X64JmpCC_8 }, /* jle */
    { 0x1af4, 0x0000007f, 0x000000ff, X64JmpCC_8 }, /* jg */
    { 0x1d19, 0x0000800f, 0x0000ffff, X64JmpCC_16 }, /* jo2 */
    { 0x1ada, 0x0000810f, 0x0000ffff, X64JmpCC_16 }, /* jno2 */
    { 0x1ae6, 0x0000820f, 0x0000ffff, X64JmpCC_16 }, /* jb2 */
    { 0x1ade, 0x0000830f, 0x0000ffff, X64JmpCC_16 }, /* jae2 */
    { 0x0e45, 0x0000840f, 0x0000ffff, X64JmpCC_16 }, /* je2 */
    { 0x1ae2, 0x0000850f, 0x0000ffff, X64JmpCC_16 }, /* jne2 */
    { 0x1ae7, 0x0000860f, 0x0000ffff, X64JmpCC_16 }, /* jbe2 */
    { 0x18e8, 0x0000870f, 0x0000ffff, X64JmpCC_16 }, /* ja2 */
    { 0x0002, 0x0000880f, 0x0000ffff, X64JmpCC_16 }, /* js2 */
    { 0x1aeb, 0x0000890f, 0x0000ffff, X64JmpCC_16 }, /* jns2 */
    { 0x1aef, 0x00008a0f, 0x0000ffff, X64JmpCC_16 }, /* jp2 */
    { 0x1af0, 0x00008b0f, 0x0000ffff, X64JmpCC_16 }, /* jpo2 */
    { 0x1af9, 0x00008c0f, 0x0000ffff, X64JmpCC_16 }, /* jl2 */
    { 0x1af5, 0x00008d0f, 0x0000ffff, X64JmpCC_16 }, /* jge2 */
    { 0x1afa, 0x00008e0f, 0x0000ffff, X64JmpCC_16 }, /* jle2 */
    { 0x1af4, 0x00008f0f, 0x0000ffff, X64JmpCC_16 }, /* jg2 */
    { 0x15c6, 0x000000e3, 0x000000ff, X64JmpCC_8 }, /* jcxz */
    { 0x0e46, 0x00000000, 0x00000000, NULL }, /* jecxz */
    { 0x1115, 0x00000000, 0x00000000, NULL }, /* jrcxz */
    { 0x1756, 0x000000eb, 0x000000ff, X64JmpCC_8 }, /* jmp */
    { 0x1756, 0x000000e9, 0x000000ff, X64Rel_8 }, /* jmp1 */
    { 0x1756, 0x000020ff, 0x000038ff, X64ModRM_16 }, /* jmp2 */
    { 0x1756, 0x000028ff, 0x000038ff, X64ModRM_16 }, /* jmp4 */
    { 0x15cb, 0x0000009f, 0x000000ff, X64NoOp_8 }, /* lahf */
    { 0x1afe, 0x0000020f, 0x0000ffff, X64RegModRM_24B }, /* lar */
    { 0x0c6f, 0x0000b40f, 0x0000ffff, X64RegModRM_24B }, /* lfs */
    { 0x141d, 0x0000b50f, 0x0000ffff, X64RegModRM_24B }, /* lgs */
    { 0x10b3, 0x0000b20f, 0x0000ffff, X64RegModRM_24B }, /* lss */
    { 0x062c, 0x0000008d, 0x000000ff, X64RegModRM_16B }, /* lea */
    { 0x0e4d, 0x000000c9, 0x000000ff, X64NoOp_8 }, /* leave */
    { 0x15d0, 0x0010010f, 0x0038ffff, X64ModRM_24 }, /* lgdt */
    { 0x15d5, 0x0018010f, 0x0038ffff, X64ModRM_24 }, /* lidt */
    { 0x15da, 0x0010000f, 0x0038ffff, X64ModRM_24 }, /* lldt */
    { 0x15e0, 0x0030010f, 0x0038ffff, X64ModRM_24 }, /* lmsw */
    { 0x15e5, 0x000000ac, 0x000000fe, X64String_8 }, /* lods */
    { 0x0327, 0x000000e2, 0x000000ff, X64JmpCC_8 }, /* loop */
    { 0x0e53, 0x00000000, 0x00000000, NULL }, /* loopw */
    { 0x0e59, 0x00000000, 0x00000000, NULL }, /* loopd */
    { 0x111c, 0x00000000, 0x00000000, NULL }, /* loopq */
    { 0x074d, 0x000000e1, 0x000000ff, X64JmpCC_8 }, /* loopz */
    { 0x074e, 0x00000000, 0x00000000, NULL }, /* loopzw */
    { 0x0755, 0x00000000, 0x00000000, NULL }, /* loopzd */
    { 0x097d, 0x00000000, 0x00000000, NULL }, /* loopzq */
    { 0x0328, 0x000000e0, 0x000000ff, X64JmpCC_8 }, /* loopnz */
    { 0x0329, 0x00000000, 0x00000000, NULL }, /* loopnzw */
    { 0x0331, 0x00000000, 0x00000000, NULL }, /* loopnzd */
    { 0x0531, 0x00000000, 0x00000000, NULL }, /* loopnzq */
    { 0x0595, 0x0018000f, 0x0038ffff, X64ModRM_24 }, /* ltr */
    { 0x1b06, 0x0000030f, 0x0000ffff, X64RegModRM_24B }, /* lsl */
    { 0x004d, 0x00000088, 0x000000fc, X64RegModRM_16 }, /* mov */
    { 0x004d, 0x000000c6, 0x000038fe, X64ModRMImm_16 }, /* mov2 */
    { 0x004d, 0x000000b0, 0x000000f0, X64ImmReg_8 }, /* mov3 */
    { 0x004d, 0x000000a0, 0x000000fc, X64MemAbsAcc_8 }, /* mov4 */
    { 0x004d, 0x0000200f, 0x0000fdff, X64CRegReg_24 }, /* mov5 */
    { 0x004d, 0x0000210f, 0x0000fdff, X64DRegReg_24 }, /* mov6 */
    { 0x004d, 0x0000008c, 0x000000fd, X64SRegModRM_16 }, /* mov7 */
    { 0x0277, 0x000000a4, 0x000000fe, X64String_8 }, /* movs */
    { 0x0984, 0x0000be0f, 0x0000feff, X64RegModRM_24C }, /* movsx */
    { 0x0985, 0x00000063, 0x000000ff, X64RegModRM_16C }, /* movsxd */
    { 0x0e5f, 0x0000b60f, 0x0000feff, X64RegModRM_24C }, /* movzx */
    { 0x0425, 0x000020f6, 0x000038fe, X64ModRM_16 }, /* mul */
    { 0x1179, 0x000018f6, 0x000038fe, X64ModRM_16 }, /* neg */
    { 0x05f7, 0x000010f6, 0x000038fe, X64ModRM_16 }, /* not */
    { 0x000a, 0x00000008, 0x000000fc, X64RegModRM_16 }, /* or */
    { 0x000a, 0x0000000c, 0x000000fe, X64ImmAcc_8 }, /* or2 */
    { 0x000a, 0x00000880, 0x000038fc, X64ModRMImm_16 }, /* or3 */
    { 0x000d, 0x000000e6, 0x000000fe, X64ImmAcc_8 }, /* out */
    { 0x000d, 0x000000ee, 0x000000fe, X64AccAcc_8 }, /* out2 */
    { 0x15ea, 0x0000006e, 0x000000fe, X64String_8 }, /* outs */
    { 0x0e71, 0x0000008f, 0x000038ff, X64ModRM_16 }, /* pop */
    { 0x0e71, 0x00000058, 0x000000f8, X64Reg_8 }, /* pop2 */
    { 0x0e71, 0x0000a10f, 0x0000ffff, X64SReg_16 }, /* pop4f */
    { 0x0e71, 0x0000a90f, 0x0000ffff, X64SReg_16 }, /* pop4g */
    { 0x075c, 0x000030ff, 0x000038ff, X64ModRM_16 }, /* push */
    { 0x0e65, 0x00000000, 0x00000000, NULL }, /* pushw */
    { 0x075c, 0x00000050, 0x000000f8, X64Reg_8 }, /* push2 */
    { 0x075c, 0x00000006, 0x000000e7, X64SReg_8 }, /* push3 */
    { 0x075c, 0x0000a00f, 0x0000ffff, X64SReg_16 }, /* push4f */
    { 0x075c, 0x0000a80f, 0x0000ffff, X64SReg_16 }, /* push4g */
    { 0x075c, 0x00000068, 0x000000fd, X64Imm_8 }, /* push5 */
    { 0x0e79, 0x00000000, 0x00000000, NULL }, /* popf */
    { 0x1122, 0x0000009d, 0x000000ff, X64NoOp_8 }, /* popfq */
    { 0x0765, 0x00000000, 0x00000000, NULL }, /* pushf */
    { 0x098c, 0x0000009c, 0x000000ff, X64NoOp_8 }, /* pushfq */
    { 0x14ca, 0x000010d0, 0x000038fc, X64Shift_16 }, /* rcl */
    { 0x14ca, 0x000010c0, 0x000038fe, X64ModRMImm_16 }, /* rcl2 */
    { 0x0bd8, 0x000018d0, 0x000038fc, X64Shift_16 }, /* rcr */
    { 0x0bd8, 0x000018c0, 0x000038fe, X64ModRMImm_16 }, /* rcr2 */
    { 0x0e80, 0x0000320f, 0x0000ffff, X64NoOp_16 }, /* rdmsr */
    { 0x0e86, 0x0000330f, 0x0000ffff, X64NoOp_16 }, /* rdpmc */
    { 0x0e8c, 0x0000310f, 0x0000ffff, X64NoOp_16 }, /* rdtsc */
    { 0x09a1, 0x000000c3, 0x000000ff, X64NoOp_8 }, /* ret */
    { 0x09a1, 0x000000c2, 0x000000ff, X64Imm_8 }, /* ret2 */
    { 0x15ef, 0x000000cb, 0x000000ff, X64NoOp_8 }, /* retf */
    { 0x15ef, 0x000000ca, 0x000000ff, X64Imm_8 }, /* retf2 */
    { 0x0bdd, 0x000008d0, 0x000038fc, X64Shift_16 }, /* ror */
    { 0x0bdd, 0x000008c0, 0x000038fe, X64ModRMImm_16 }, /* ror2 */
    { 0x1b0a, 0x000000d0, 0x000038fc, X64Shift_16 }, /* rol */
    { 0x1b0a, 0x000000c0, 0x000038fe, X64ModRMImm_16 }, /* rol2 */
    { 0x1b0e, 0x0000aa0f, 0x0000ffff, X64NoOp_16 }, /* rsm */
    { 0x15f4, 0x0000009e, 0x000000ff, X64NoOp_8 }, /* sahf */
    { 0x1b12, 0x00000018, 0x000000fc, X64RegModRM_16 }, /* sbb */
    { 0x1b12, 0x0000001c, 0x000000fe, X64ImmAcc_8 }, /* sbb2 */
    { 0x1b12, 0x00001880, 0x000038fc, X64ModRMImm_16 }, /* sbb3 */
    { 0x15f9, 0x000000ae, 0x000000fe, X64String_8 }, /* scas */
    { 0x15fe, 0x0000900f, 0x0038ffff, X64SetCC }, /* seto */
    { 0x0e92, 0x0000910f, 0x0038ffff, X64SetCC }, /* setno */
    { 0x0ea6, 0x0000920f, 0x0038ffff, X64SetCC }, /* setb */
    { 0x0e99, 0x0000930f, 0x0038ffff, X64SetCC }, /* setae */
    { 0x1603, 0x0000940f, 0x0038ffff, X64SetCC }, /* sete */
    { 0x0e9f, 0x0000950f, 0x0038ffff, X64SetCC }, /* setne */
    { 0x0ea7, 0x0000960f, 0x0038ffff, X64SetCC }, /* setbe */
    { 0x0e98, 0x0000970f, 0x0038ffff, X64SetCC }, /* seta */
    { 0x1608, 0x0000980f, 0x0038ffff, X64SetCC }, /* sets */
    { 0x0ead, 0x0000990f, 0x0038ffff, X64SetCC }, /* setns */
    { 0x07b0, 0x00009a0f, 0x0038ffff, X64SetCC }, /* setp */
    { 0x0eb3, 0x00009b0f, 0x0038ffff, X64SetCC }, /* setpo */
    { 0x0ec1, 0x00009c0f, 0x0038ffff, X64SetCC }, /* setl */
    { 0x0eba, 0x00009d0f, 0x0038ffff, X64SetCC }, /* setge */
    { 0x0ec2, 0x00009e0f, 0x0038ffff, X64SetCC }, /* setle */
    { 0x0eb9, 0x00009f0f, 0x0038ffff, X64SetCC }, /* setg */
    { 0x0433, 0x000020d0, 0x000038fc, X64Shift_16 }, /* shl */
    { 0x0433, 0x000020c0, 0x000038fe, X64ModRMImm_16 }, /* shl2 */
    { 0x161c, 0x000028d0, 0x000038fc, X64Shift_16 }, /* shr */
    { 0x161c, 0x000028c0, 0x000038fe, X64ModRMImm_16 }, /* shr2 */
    { 0x1b16, 0x000038d0, 0x000038fc, X64Shift_16 }, /* sar */
    { 0x1b16, 0x000038c0, 0x000038fe, X64ModRMImm_16 }, /* sar2 */
    { 0x160d, 0x0000010f, 0x0038ffff, X64ModRM_24 }, /* sgdt */
    { 0x1612, 0x0008010f, 0x00f8ffff, X64ModRM_24 }, /* sidt00 */
    { 0x1612, 0x0048010f, 0x00f8ffff, X64ModRM_24 }, /* sidt01 */
    { 0x1612, 0x0088010f, 0x00f8ffff, X64ModRM_24 }, /* sidt10 */
    { 0x1617, 0x0000000f, 0x0038ffff, X64ModRM_24 }, /* sldt */
    { 0x0434, 0x0000a50f, 0x0000ffff, X64RegModRM_24B }, /* shld */
    { 0x0434, 0x0000a40f, 0x0000ffff, X64RegModRM_24B }, /* shld2 */
    { 0x161d, 0x0000ad0f, 0x0000ffff, X64RegModRM_24B }, /* shrd */
    { 0x161d, 0x0000ac0f, 0x0000ffff, X64RegModRM_24B }, /* shrd2 */
    { 0x1622, 0x0020010f, 0x0038ffff, X64ModRM_24 }, /* smsw */
    { 0x081d, 0x000000f9, 0x000000ff, X64NoOp_8 }, /* stc */
    { 0x0bed, 0x000000fd, 0x000000ff, X64NoOp_8 }, /* std */
    { 0x1b1a, 0x000000fb, 0x000000ff, X64NoOp_8 }, /* sti */
    { 0x1627, 0x000000aa, 0x000000fe, X64String_8 }, /* stos */
    { 0x1b1e, 0x0008000f, 0x0038ffff, X64ModRM_24 }, /* str */
    { 0x01de, 0x00000028, 0x000000fc, X64RegModRM_16 }, /* sub */
    { 0x01de, 0x0000002c, 0x000000fe, X64ImmAcc_8 }, /* sub2 */
    { 0x01de, 0x00002880, 0x000038fc, X64ModRMImm_16 }, /* sub3 */
    { 0x0994, 0x00f8010f, 0x00ffffff, X64NoOp_24 }, /* swapgs */
    { 0x0539, 0x0000050f, 0x0000ffff, X64NoOp_16 }, /* syscall */
    { 0x011e, 0x0000340f, 0x0000ffff, X64NoOp_16 }, /* sysenter */
    { 0x0339, 0x0000350f, 0x0000ffff, X64NoOp_16 }, /* sysexit */
    { 0x099c, 0x0000070f, 0x0000ffff, X64NoOp_16 }, /* sysret */
    { 0x162c, 0x00000084, 0x000000fe, X64RegModRM_test }, /* test */
    { 0x162c, 0x000000a8, 0x000000fe, X64ImmAcc_8 }, /* test2 */
    { 0x162c, 0x000000f6, 0x000038fe, X64ModRMImm_16 }, /* test3 */
    { 0x1b26, 0x00000b0f, 0x0000ffff, X64NoOp_16 }, /* ud2 */
    { 0x1631, 0x0020000f, 0x0038ffff, X64ModRM_24 }, /* verr */
    { 0x1636, 0x0028000f, 0x0038ffff, X64ModRM_24 }, /* verw */
    { 0x0e1b, 0x0000009b, 0x000000ff, X64NoOp_8 }, /* wait */
    { 0x076d, 0x0000090f, 0x0000ffff, X64NoOp_16 }, /* wbinvd */
    { 0x0ec8, 0x0000300f, 0x0000ffff, X64NoOp_16 }, /* wrmsr */
    { 0x163b, 0x0000c00f, 0x0000feff, X64RegModRM_24 }, /* xadd */
    { 0x0072, 0x00000086, 0x000000fe, X64RegModRM_test }, /* xchg */
    { 0x0072, 0x00000090, 0x000000f8, X64Reg_8 }, /* xchg2 */
    { 0x1640, 0x000000d7, 0x000000ff, X64NoOp_8 }, /* xlat */
    { 0x0be5, 0x00000030, 0x000000fc, X64RegModRM_16 }, /* xor */
    { 0x0be5, 0x00000034, 0x000000fe, X64ImmAcc_8 }, /* xor2 */
    { 0x0be5, 0x00003080, 0x000038fc, X64ModRMImm_16 }, /* xor3 */
    { 0x166f, 0x00000090, 0x00000000, NULL }, /* nop */


    /* Machine:SPARC */

    /* Table_1 */

    { 0x1128, 0x81a01880, 0xc1f83fe0, SPARCFPop2 }, /* fitos */
    { 0x112e, 0x81a018c0, 0xc1f83fe0, SPARCFPop2 }, /* fdtos */
    { 0x1134, 0x81a018e0, 0xc1f83fe0, SPARCFPop2 }, /* fqtos */
    { 0x113a, 0x81a01900, 0xc1f83fe0, SPARCFPop2 }, /* fitod */
    { 0x1140, 0x81a01920, 0xc1f83fe0, SPARCFPop2 }, /* fstod */
    { 0x1146, 0x81a01960, 0xc1f83fe0, SPARCFPop2 }, /* fqtod */
    { 0x114c, 0x81a01980, 0xc1f83fe0, SPARCFPop2 }, /* fitoq */
    { 0x1152, 0x81a019a0, 0xc1f83fe0, SPARCFPop2 }, /* fstoq */
    { 0x1158, 0x81a019c0, 0xc1f83fe0, SPARCFPop2 }, /* fdtoq */
    { 0x115e, 0x81a01a20, 0xc1f83fe0, SPARCFPop2 }, /* fstoi */
    { 0x1164, 0x81a01a40, 0xc1f83fe0, SPARCFPop2 }, /* fdtoi */
    { 0x116a, 0x81a01a60, 0xc1f83fe0, SPARCFPop2 }, /* fqtoi */
    { 0x1170, 0x81a00020, 0xc1f83fe0, SPARCFPop2 }, /* fmovs */
    { 0x1177, 0x81a000a0, 0xc1f83fe0, SPARCFPop2 }, /* fnegs */
    { 0x117f, 0x81a00120, 0xc1f83fe0, SPARCFPop2 }, /* fabss */
    { 0x09b4, 0x81a00520, 0xc1f83fe0, SPARCFPop2 }, /* fsqrts */
    { 0x09bb, 0x81a00540, 0xc1f83fe0, SPARCFPop2 }, /* fsqrtd */
    { 0x09c2, 0x81a00560, 0xc1f83fe0, SPARCFPop2 }, /* fsqrtq */
    { 0x1185, 0x81a80a20, 0xc1f83fe0, SPARCFPop2 }, /* fcmps */
    { 0x118b, 0x81a80a40, 0xc1f83fe0, SPARCFPop2 }, /* fcmpd */
    { 0x1191, 0x81a80a60, 0xc1f83fe0, SPARCFPop2 }, /* fcmpq */
    { 0x09c9, 0x81a80aa0, 0xc1f83fe0, SPARCFPop2 }, /* fcmpes */
    { 0x09d0, 0x81a80ac0, 0xc1f83fe0, SPARCFPop2 }, /* fcmped */
    { 0x03fa, 0x81a80ae0, 0xc1f83fe0, SPARCFPop2 }, /* fcmpeq */
    { 0x0c24, 0x81a00820, 0xc1f83fe0, SPARCFPop3 }, /* fadds */
    { 0x1197, 0x81a00840, 0xc1f83fe0, SPARCFPop3 }, /* faddd */
    { 0x119d, 0x81a00860, 0xc1f83fe0, SPARCFPop3 }, /* faddq */
    { 0x0c52, 0x81a008a0, 0xc1f83fe0, SPARCFPop3 }, /* fsubs */
    { 0x11a3, 0x81a008c0, 0xc1f83fe0, SPARCFPop3 }, /* fsubd */
    { 0x11a9, 0x81a008e0, 0xc1f83fe0, SPARCFPop3 }, /* fsubq */
    { 0x0c44, 0x81a00920, 0xc1f83fe0, SPARCFPop3 }, /* fmuls */
    { 0x11af, 0x81a00940, 0xc1f83fe0, SPARCFPop3 }, /* fmuld */
    { 0x11b5, 0x81a00960, 0xc1f83fe0, SPARCFPop3 }, /* fmulq */
    { 0x0c3c, 0x81a009a0, 0xc1f83fe0, SPARCFPop3 }, /* fdivs */
    { 0x11bb, 0x81a009c0, 0xc1f83fe0, SPARCFPop3 }, /* fdivd */
    { 0x11c1, 0x81a009e0, 0xc1f83fe0, SPARCFPop3 }, /* fdivq */
    { 0x09d7, 0x81a00d20, 0xc1f83fe0, SPARCFPop3 }, /* fsmuld */
    { 0x09df, 0x81a00dc0, 0xc1f83fe0, SPARCFPop3 }, /* fdmulq */
    { 0x11c7, 0xc0480000, 0xc1f80000, SPARCMem }, /* ldsb */
    { 0x11ce, 0xc0500000, 0xc1f80000, SPARCMem }, /* ldsh */
    { 0x11d5, 0xc0080000, 0xc1f80000, SPARCMem }, /* ldub */
    { 0x11dc, 0xc0100000, 0xc1f80000, SPARCMem }, /* lduh */
    { 0x00c0, 0xc0000000, 0xc1f80000, SPARCMem }, /* ld */
    { 0x1067, 0xc0180000, 0xc1f80000, SPARCMem }, /* ldd */
    { 0x11c8, 0xc0c80000, 0xc1f80000, SPARCMem }, /* ldsba */
    { 0x11cf, 0xc0d00000, 0xc1f80000, SPARCMem }, /* ldsha */
    { 0x11d6, 0xc0880000, 0xc1f80000, SPARCMem }, /* lduba */
    { 0x11dd, 0xc0900000, 0xc1f80000, SPARCMem }, /* lduha */
    { 0x0c60, 0xc0800000, 0xc1f80000, SPARCMem }, /* lda */
    { 0x1718, 0xc0980000, 0xc1f80000, SPARCMem }, /* ldda */
    { 0x00c0, 0xc1000000, 0xc1f80000, SPARCMemF }, /* ldf */
    { 0x1067, 0xc1180000, 0xc1f80000, SPARCMemF }, /* lddf */
    { 0x00c0, 0xc1080000, 0xc1f80000, SPARCMemF }, /* ldfsr */
    { 0x00c0, 0xc1800000, 0xc1f80000, SPARCMemC }, /* ldc */
    { 0x1067, 0xc1980000, 0xc1f80000, SPARCMemC }, /* lddc */
    { 0x00c0, 0xc1880000, 0xc1f80000, SPARCMemC }, /* ldcsr */
    { 0x0d29, 0xc0280000, 0xc1f80000, SPARCMem }, /* stb */
    { 0x0701, 0xc0300000, 0xc1f80000, SPARCMem }, /* sth */
    { 0x0137, 0xc0200000, 0xc1f80000, SPARCMem }, /* st */
    { 0x0bed, 0xc0380000, 0xc1f80000, SPARCMem }, /* std */
    { 0x171e, 0xc0a80000, 0xc1f80000, SPARCMem }, /* stba */
    { 0x1723, 0xc0b00000, 0xc1f80000, SPARCMem }, /* stha */
    { 0x1bbf, 0xc0a00000, 0xc1f80000, SPARCMem }, /* sta */
    { 0x1728, 0xc0b80000, 0xc1f80000, SPARCMem }, /* stda */
    { 0x0137, 0xc1200000, 0xc1f80000, SPARCMemF }, /* stf */
    { 0x0bed, 0xc1380000, 0xc1f80000, SPARCMemF }, /* stdf */
    { 0x0137, 0xc1280000, 0xc1f80000, SPARCMemF }, /* stfsr */
    { 0x0bed, 0xc1300000, 0xc1f80000, SPARCMemF }, /* stdfq */
    { 0x0137, 0xc1a00000, 0xc1f80000, SPARCMemC }, /* stc */
    { 0x0bed, 0xc1b80000, 0xc1f80000, SPARCMemC }, /* stdc */
    { 0x0137, 0xc1a80000, 0xc1f80000, SPARCMemC }, /* stcsr */
    { 0x0bed, 0xc1b00000, 0xc1f80000, SPARCMemC }, /* stdcq */
    { 0x0543, 0xc0680000, 0xc1f80000, SPARCMem }, /* ldstub */
    { 0x0544, 0xc0e80000, 0xc1f80000, SPARCMem }, /* ldstuba */
    { 0x084a, 0xc0780000, 0xc1f80000, SPARCMem }, /* swap */
    { 0x11e3, 0xc0f80000, 0xc1f80000, SPARCMem }, /* swapa */
    { 0x11e9, 0x01000000, 0xc1c00000, SPARCSetHi }, /* sethi */
    { 0x0638, 0x80080000, 0xc1f80000, SPARCOp3 }, /* and */
    { 0x0654, 0x80880000, 0xc1f80000, SPARCOp3 }, /* andcc */
    { 0x0850, 0x80280000, 0xc1f80000, SPARCOp3 }, /* andn */
    { 0x09e7, 0x80a80000, 0xc1f80000, SPARCOp3 }, /* andncc */
    { 0x000a, 0x80100000, 0xc1f80000, SPARCOp3 }, /* or */
    { 0x09f5, 0x80900000, 0xc1f80000, SPARCOp3 }, /* orcc */
    { 0x0acb, 0x80300000, 0xc1f80000, SPARCOp3 }, /* orn */
    { 0x11ef, 0x80b00000, 0xc1f80000, SPARCOp3 }, /* orncc */
    { 0x0be5, 0x80180000, 0xc1f80000, SPARCOp3 }, /* xor */
    { 0x11f5, 0x80980000, 0xc1f80000, SPARCOp3 }, /* xorcc */
    { 0x09ef, 0x80380000, 0xc1f80000, SPARCOp3 }, /* xnor */
    { 0x09f0, 0x80b80000, 0xc1f80000, SPARCOp3 }, /* xnorcc */
    { 0x0949, 0x81280000, 0xc1f80000, SPARCOp3 }, /* sll */
    { 0x0952, 0x81300000, 0xc1f80000, SPARCOp3 }, /* srl */
    { 0x0a50, 0x81380000, 0xc1f80000, SPARCOp3 }, /* sra */
    { 0x01d6, 0x80000000, 0xc1f80000, SPARCOp3 }, /* add */
    { 0x0291, 0x80800000, 0xc1f80000, SPARCOp3 }, /* addcc */
    { 0x09fa, 0x80400000, 0xc1f80000, SPARCOp3 }, /* addx */
    { 0x09fb, 0x80c00000, 0xc1f80000, SPARCOp3 }, /* addxcc */
    { 0x028d, 0x81000000, 0xc1f80000, SPARCOp3 }, /* taddcc */
    { 0x028e, 0x81100000, 0xc1f80000, SPARCOp3 }, /* taddcctv */
    { 0x01de, 0x80200000, 0xc1f80000, SPARCOp3 }, /* sub */
    { 0x029c, 0x80a00000, 0xc1f80000, SPARCOp3 }, /* subcc */
    { 0x0a03, 0x80600000, 0xc1f80000, SPARCOp3 }, /* subx */
    { 0x0a04, 0x80e00000, 0xc1f80000, SPARCOp3 }, /* subxcc */
    { 0x0299, 0x81080000, 0xc1f80000, SPARCOp3 }, /* tsubcc */
    { 0x029a, 0x81180000, 0xc1f80000, SPARCOp3 }, /* tsubcctv */
    { 0x0a0d, 0x81200000, 0xc1f80000, SPARCOp3 }, /* mulscc */
    { 0x06c0, 0x80500000, 0xc1f80000, SPARCOp3 }, /* umul */
    { 0x09d9, 0x80580000, 0xc1f80000, SPARCOp3 }, /* smul */
    { 0x0a14, 0x80d00000, 0xc1f80000, SPARCOp3 }, /* umulcc */
    { 0x0a1b, 0x80d80000, 0xc1f80000, SPARCOp3 }, /* smulcc */
    { 0x0a22, 0x80700000, 0xc1f80000, SPARCOp3 }, /* udiv */
    { 0x0a2a, 0x80780000, 0xc1f80000, SPARCOp3 }, /* sdiv */
    { 0x0a23, 0x80f00000, 0xc1f80000, SPARCOp3 }, /* udivcc */
    { 0x0a2b, 0x80f80000, 0xc1f80000, SPARCOp3 }, /* sdivcc */
    { 0x0385, 0x81e00000, 0xc1f80000, SPARCOp3 }, /* save */
    { 0x054d, 0x81e80000, 0xc1f80000, SPARCOp3 }, /* restore */
    { 0x13e2, 0x00800000, 0xdfc00000, SPARCBranch }, /* bn */
    { 0x0130, 0x02800000, 0xdfc00000, SPARCBranch }, /* be */
    { 0x0ad6, 0x04800000, 0xdfc00000, SPARCBranch }, /* ble */
    { 0x0561, 0x06800000, 0xdfc00000, SPARCBranch }, /* bl */
    { 0x172d, 0x08800000, 0xdfc00000, SPARCBranch }, /* bleu */
    { 0x1bc3, 0x0a800000, 0xdfc00000, SPARCBranch }, /* bcs */
    { 0x1732, 0x0c800000, 0xdfc00000, SPARCBranch }, /* bneg */
    { 0x1bc7, 0x0e800000, 0xdfc00000, SPARCBranch }, /* bvs */
    { 0x054a, 0x10800000, 0xdfc00000, SPARCBranch }, /* ba */
    { 0x13e3, 0x12800000, 0xdfc00000, SPARCBranch }, /* bne */
    { 0x0130, 0x14800000, 0xdfc00000, SPARCBranch }, /* bg */
    { 0x0556, 0x16800000, 0xdfc00000, SPARCBranch }, /* bge */
    { 0x1bcb, 0x18800000, 0xdfc00000, SPARCBranch }, /* bgu */
    { 0x02a0, 0x1a800000, 0xdfc00000, SPARCBranch }, /* bcc */
    { 0x1737, 0x1c800000, 0xdfc00000, SPARCBranch }, /* bpos */
    { 0x1bcf, 0x1e800000, 0xdfc00000, SPARCBranch }, /* bvc */
    { 0x13df, 0x01800000, 0xdfc00000, SPARCBranch }, /* fbn */
    { 0x13e0, 0x03800000, 0xdfc00000, SPARCBranch }, /* fbne */
    { 0x173c, 0x05800000, 0xdfc00000, SPARCBranch }, /* fblg */
    { 0x1203, 0x07800000, 0xdfc00000, SPARCBranch }, /* fbul */
    { 0x13d4, 0x09800000, 0xdfc00000, SPARCBranch }, /* fbl */
    { 0x11fc, 0x0b800000, 0xdfc00000, SPARCBranch }, /* fbug */
    { 0x13e7, 0x0d800000, 0xdfc00000, SPARCBranch }, /* fbg */
    { 0x11fb, 0x0f800000, 0xdfc00000, SPARCBranch }, /* fbu */
    { 0x1bd3, 0x11800000, 0xdfc00000, SPARCBranch }, /* fba */
    { 0x13cd, 0x13800000, 0xdfc00000, SPARCBranch }, /* fbe */
    { 0x1741, 0x15800000, 0xdfc00000, SPARCBranch }, /* fbue */
    { 0x13e8, 0x17800000, 0xdfc00000, SPARCBranch }, /* fbge */
    { 0x11fd, 0x19800000, 0xdfc00000, SPARCBranch }, /* fbuge */
    { 0x13da, 0x1b800000, 0xdfc00000, SPARCBranch }, /* fble */
    { 0x1204, 0x1d800000, 0xdfc00000, SPARCBranch }, /* fbule */
    { 0x1bd7, 0x1f800000, 0xdfc00000, SPARCBranch }, /* fbo */
    { 0x1bdb, 0x01c00000, 0xdfc00000, SPARCBranch }, /* cbn */
    { 0x120c, 0x03c00000, 0xdfc00000, SPARCBranch }, /* cb123 */
    { 0x120b, 0x05c00000, 0xdfc00000, SPARCBranch }, /* cb12 */
    { 0x1746, 0x07c00000, 0xdfc00000, SPARCBranch }, /* cb13 */
    { 0x120a, 0x09c00000, 0xdfc00000, SPARCBranch }, /* cb1 */
    { 0x174c, 0x0bc00000, 0xdfc00000, SPARCBranch }, /* cb23 */
    { 0x174b, 0x0dc00000, 0xdfc00000, SPARCBranch }, /* cb2 */
    { 0x1bdf, 0x0fc00000, 0xdfc00000, SPARCBranch }, /* cb3 */
    { 0x1be3, 0x11c00000, 0xdfc00000, SPARCBranch }, /* cba */
    { 0x1212, 0x13c00000, 0xdfc00000, SPARCBranch }, /* cb0 */
    { 0x1751, 0x15c00000, 0xdfc00000, SPARCBranch }, /* cb03 */
    { 0x1213, 0x17c00000, 0xdfc00000, SPARCBranch }, /* cb02 */
    { 0x1214, 0x19c00000, 0xdfc00000, SPARCBranch }, /* cb023 */
    { 0x121a, 0x1bc00000, 0xdfc00000, SPARCBranch }, /* cb01 */
    { 0x121b, 0x1dc00000, 0xdfc00000, SPARCBranch }, /* cb013 */
    { 0x1221, 0x1fc00000, 0xdfc00000, SPARCBranch }, /* cb012 */
    { 0x0112, 0x40000000, 0xc0000000, SPARCCall }, /* call */
    { 0x1757, 0x81c00000, 0xc1f80000, SPARCMem }, /* jmpl */
    { 0x175c, 0x81c80000, 0xc1f80000, SPARCMem }, /* rett */


    /* Machine:MIPS */

    /* Table_1 */

    { 0x01d6, 0x00000020, 0xfc0007ff, MIPSReg3 }, /* ADD */
    { 0x062f, 0x20000000, 0xfc000000, MIPSImmed2 }, /* ADDI */
    { 0x0a35, 0x24000000, 0xfc000000, MIPSImmed2 }, /* ADDIU */
    { 0x0462, 0x00000021, 0xfc0007ff, MIPSReg3 }, /* ADDU */
    { 0x0638, 0x00000024, 0xfc0007ff, MIPSReg3 }, /* AND */
    { 0x0639, 0x30000000, 0xfc000000, MIPSImmed2U }, /* ANDI */
    { 0x12c7, 0x41000000, 0xffff0000, MIPSBranchCop }, /* BC0F */
    { 0x12c8, 0x41020000, 0xffff0000, MIPSBranchCop }, /* BC0FL */
    { 0x12ce, 0x41010000, 0xffff0000, MIPSBranchCop }, /* BC0T */
    { 0x12cf, 0x41030000, 0xffff0000, MIPSBranchCop }, /* BC0TL */
    { 0x13d0, 0x10000000, 0xfc000000, MIPSBranch2 }, /* BEQ */
    { 0x18d9, 0x50000000, 0xfc000000, MIPSBranch2 }, /* BEQL */
    { 0x0557, 0x04010000, 0xfc1f0000, MIPSBranch1 }, /* BGEZ */
    { 0x0558, 0x04110000, 0xfc1f0000, MIPSBranch1 }, /* BGEZAL */
    { 0x0559, 0x04130000, 0xfc1f0000, MIPSBranch1 }, /* BGEZALL */
    { 0x12d5, 0x04030000, 0xfc1f0000, MIPSBranch1 }, /* BGEZL */
    { 0x12dc, 0x1c000000, 0xfc1f0000, MIPSBranch3 }, /* BGTZ */
    { 0x12dd, 0x5c000000, 0xfc1f0000, MIPSBranch3 }, /* BGTZL */
    { 0x12e3, 0x18000000, 0xfc1f0000, MIPSBranch3 }, /* BLEZ */
    { 0x12e4, 0x58000000, 0xfc1f0000, MIPSBranch3 }, /* BLEZL */
    { 0x0563, 0x04000000, 0xfc1f0000, MIPSBranch1 }, /* BLTZ */
    { 0x0564, 0x04100000, 0xfc1f0000, MIPSBranch1 }, /* BLTZAL */
    { 0x0565, 0x04120000, 0xfc1f0000, MIPSBranch1 }, /* BLTZALL */
    { 0x12ea, 0x04020000, 0xfc1f0000, MIPSBranch1 }, /* BLTZL */
    { 0x13e3, 0x14000000, 0xfc000000, MIPSBranch2 }, /* BNE */
    { 0x18de, 0x54000000, 0xfc000000, MIPSBranch2 }, /* BNEL */
    { 0x12f0, 0x0000000d, 0xfc00003f, MIPSCode }, /* BREAK */
    { 0x12f6, 0xbc000000, 0xfc000000, MIPSCache }, /* CACHE */
    { 0x0223, 0x0000002c, 0xfc0007ff, MIPSReg3 }, /* DADD */
    { 0x0a32, 0x60000000, 0xfc000000, MIPSImmed2 }, /* DADDI */
    { 0x0a33, 0x64000000, 0xfc000000, MIPSImmed2 }, /* DADDIU */
    { 0x12fc, 0x0000002d, 0xfc0007ff, MIPSReg3 }, /* DADDU */
    { 0x1033, 0x0000001e, 0xfc00ffff, MIPSMulDiv }, /* DDIV */
    { 0x1302, 0x0000001f, 0xfc00ffff, MIPSMulDiv }, /* DDIVU */
    { 0x0792, 0x0000001a, 0xfc00ffff, MIPSMulDiv }, /* DIV */
    { 0x1304, 0x0000001b, 0xfc00ffff, MIPSMulDiv }, /* DIVU */
    { 0x1309, 0x40200000, 0xffe007ff, MIPSReg2 }, /* DMFC0 */
    { 0x1310, 0x40a00000, 0xffe007ff, MIPSReg2 }, /* DMTC0 */
    { 0x0a3b, 0x0000001c, 0xfc00ffff, MIPSMulDiv }, /* DMULT */
    { 0x0a3c, 0x0000001d, 0xfc00ffff, MIPSMulDiv }, /* DMULTU */
    { 0x0a45, 0x00000038, 0xffe0003f, MIPSShift }, /* DSLL */
    { 0x1317, 0x00000014, 0xfc0007ff, MIPSReg3 }, /* DSLLV */
    { 0x0a46, 0x0000003c, 0xffe0003f, MIPSShift }, /* DSLL32 */
    { 0x0a4d, 0x0000003b, 0xffe0003f, MIPSShift }, /* DSRA */
    { 0x131e, 0x00000017, 0xfc0007ff, MIPSReg3 }, /* DSRAV */
    { 0x0a4e, 0x0000003f, 0xffe0003f, MIPSShift }, /* DSRA32 */
    { 0x0a57, 0x0000003a, 0xffe0003f, MIPSShift }, /* DSRL */
    { 0x1325, 0x00000016, 0xfc0007ff, MIPSReg3 }, /* DSRLV */
    { 0x0a58, 0x0000003e, 0xffe0003f, MIPSShift }, /* DSRL32 */
    { 0x01dc, 0x0000002e, 0xfc0007ff, MIPSReg3 }, /* DSUB */
    { 0x132c, 0x0000002f, 0xfc0007ff, MIPSReg3 }, /* DSUBU */
    { 0x18e3, 0x42000018, 0xffffffff, MIPSNull }, /* ERET */
    { 0x0001, 0x08000000, 0xfc000000, MIPSJType }, /* J */
    { 0x18e9, 0x0c000000, 0xfc000000, MIPSJType }, /* JAL */
    { 0x18ea, 0x00000009, 0xfc1f07ff, MIPSJump2 }, /* JALR */
    { 0x1114, 0x00000008, 0xfc1fffff, MIPSJump1 }, /* JR */
    { 0x00b5, 0x80000000, 0xfc000000, MIPSMemory }, /* LB */
    { 0x1cc3, 0x90000000, 0xfc000000, MIPSMemory }, /* LBU */
    { 0x00c0, 0xdc000000, 0xfc000000, MIPSMemory }, /* LD */
    { 0x07d2, 0x68000000, 0xfc000000, MIPSMemory }, /* LDL */
    { 0x1cc7, 0x6c000000, 0xfc000000, MIPSMemory }, /* LDR */
    { 0x0428, 0x84000000, 0xfc000000, MIPSMemory }, /* LH */
    { 0x04ae, 0x94000000, 0xfc000000, MIPSMemory }, /* LHU */
    { 0x0117, 0xc0000000, 0xfc000000, MIPSMemory }, /* LL */
    { 0x0540, 0xd0000000, 0xfc000000, MIPSMemory }, /* LLD */
    { 0x00cc, 0x8c000000, 0xfc000000, MIPSMemory }, /* LW */
    { 0x1ccb, 0x88000000, 0xfc000000, MIPSMemory }, /* LWL */
    { 0x1ccf, 0x98000000, 0xfc000000, MIPSMemory }, /* LWR */
    { 0x1cd3, 0x9c000000, 0xfc000000, MIPSMemory }, /* LWU */
    { 0x18ef, 0xd4000000, 0xfc000000, MIPSFPUMemory }, /* LDC1 */
    { 0x18f4, 0xc4000000, 0xfc000000, MIPSFPUMemory }, /* LWC1 */
    { 0x1cd7, 0x3c000000, 0xffe00000, MIPSImmed1 }, /* LUI */
    { 0x130b, 0x40000000, 0xffe007ff, MIPSReg2 }, /* MFC0 */
    { 0x18f9, 0x00000010, 0xffff07ff, MIPSRegD }, /* MFHI */
    { 0x18fe, 0x00000012, 0xffff07ff, MIPSRegD }, /* MFLO */
    { 0x1312, 0x40800000, 0xffe007ff, MIPSReg2 }, /* MTC0 */
    { 0x1903, 0x00000011, 0xfc1fffff, MIPSRegS }, /* MTHI */
    { 0x1908, 0x00000013, 0xfc1fffff, MIPSRegS }, /* MTLO */
    { 0x0a3e, 0x00000018, 0xfc00ffff, MIPSMulDiv }, /* MULT */
    { 0x0a3f, 0x00000019, 0xfc00ffff, MIPSMulDiv }, /* MULTU */
    { 0x09f2, 0x00000027, 0xfc0007ff, MIPSReg3 }, /* NOR */
    { 0x000a, 0x00000025, 0xfc0007ff, MIPSReg3 }, /* OR */
    { 0x0d85, 0x34000000, 0xfc000000, MIPSImmed2U }, /* ORI */
    { 0x03f5, 0xa0000000, 0xfc000000, MIPSMemory }, /* SB */
    { 0x016e, 0xe0000000, 0xfc000000, MIPSMemory }, /* SC */
    { 0x1cdb, 0xf0000000, 0xfc000000, MIPSMemory }, /* SCD */
    { 0x00ea, 0xfc000000, 0xfc000000, MIPSMemory }, /* SD */
    { 0x097a, 0xb0000000, 0xfc000000, MIPSMemory }, /* SDL */
    { 0x1cdf, 0xb4000000, 0xfc000000, MIPSMemory }, /* SDR */
    { 0x027c, 0xa4000000, 0xfc000000, MIPSMemory }, /* SH */
    { 0x01ae, 0xac000000, 0xfc000000, MIPSMemory }, /* SW */
    { 0x0b24, 0xa8000000, 0xfc000000, MIPSMemory }, /* SWL */
    { 0x04ca, 0xb8000000, 0xfc000000, MIPSMemory }, /* SWR */
    { 0x190d, 0xf4000000, 0xfc000000, MIPSFPUMemory }, /* SDC1 */
    { 0x1912, 0xe4000000, 0xfc000000, MIPSFPUMemory }, /* SWC1 */
    { 0x1ce3, 0x42000010, 0xffffffff, MIPSNull }, /* RFE */
    { 0x0949, 0x00000000, 0xffe0003f, MIPSShift }, /* SLL */
    { 0x1319, 0x00000004, 0xfc0007ff, MIPSReg3 }, /* SLLV */
    { 0x1332, 0x0000002a, 0xfc0007ff, MIPSReg3 }, /* SLT */
    { 0x1333, 0x28000000, 0xfc000000, MIPSImmed2 }, /* SLTI */
    { 0x1334, 0x2c000000, 0xfc000000, MIPSImmed2 }, /* SLTIU */
    { 0x1917, 0x0000002b, 0xfc0007ff, MIPSReg3 }, /* SLTU */
    { 0x0a50, 0x00000003, 0xffe0003f, MIPSShift }, /* SRA */
    { 0x1320, 0x00000007, 0xfc0007ff, MIPSReg3 }, /* SRAV */
    { 0x0952, 0x00000002, 0xffe0003f, MIPSShift }, /* SRL */
    { 0x1327, 0x00000006, 0xfc0007ff, MIPSReg3 }, /* SRLV */
    { 0x01de, 0x00000022, 0xfc0007ff, MIPSReg3 }, /* SUB */
    { 0x04bd, 0x00000023, 0xfc0007ff, MIPSReg3 }, /* SUBU */
    { 0x0108, 0x0000000f, 0xffffffff, MIPSNull }, /* SYNC */
    { 0x0539, 0x0000000c, 0xfc00003f, MIPSCode }, /* SYSCALL */
    { 0x05ff, 0x00000034, 0xfc00003f, MIPSTrap2 }, /* TEQ */
    { 0x191c, 0x040c0000, 0xfc1f0000, MIPSTrap1 }, /* TEQI */
    { 0x0ebd, 0x00000030, 0xfc00003f, MIPSTrap2 }, /* TGE */
    { 0x133a, 0x04080000, 0xfc1f0000, MIPSTrap1 }, /* TGEI */
    { 0x133b, 0x04090000, 0xfc1f0000, MIPSTrap1 }, /* TGEIU */
    { 0x1921, 0x00000031, 0xfc00003f, MIPSTrap2 }, /* TGEU */
    { 0x1926, 0x42000008, 0xffffffff, MIPSNull }, /* TLBP */
    { 0x192b, 0x42000001, 0xffffffff, MIPSNull }, /* TLBR */
    { 0x1341, 0x42000002, 0xffffffff, MIPSNull }, /* TLBWI */
    { 0x1347, 0x42000006, 0xffffffff, MIPSNull }, /* TLBWR */
    { 0x0607, 0x00000032, 0xfc00003f, MIPSTrap2 }, /* TLT */
    { 0x134d, 0x040a0000, 0xfc1f0000, MIPSTrap1 }, /* TLTI */
    { 0x134e, 0x040b0000, 0xfc1f0000, MIPSTrap1 }, /* TLTIU */
    { 0x1930, 0x00000033, 0xfc00003f, MIPSTrap2 }, /* TLTU */
    { 0x0ea2, 0x00000036, 0xfc00003f, MIPSTrap2 }, /* TNE */
    { 0x1935, 0x040e0000, 0xfc1f0000, MIPSTrap1 }, /* TNEI */
    { 0x0be5, 0x00000026, 0xfc0007ff, MIPSReg3 }, /* XOR */
    { 0x0d82, 0x38000000, 0xfc000000, MIPSImmed2U }, /* XORI */
    { 0x0c4e, 0x46000005, 0xfe00003f, MIPSFPUOp2 }, /* ABS_f */
    { 0x01d6, 0x46000000, 0xfe00003f, MIPSFPUOp3 }, /* ADD_f */
    { 0x1354, 0x45000000, 0xffff0000, MIPSBranchCop }, /* BC1F */
    { 0x1355, 0x45020000, 0xffff0000, MIPSBranchCop }, /* BC1FL */
    { 0x135b, 0x45010000, 0xffff0000, MIPSBranchCop }, /* BC1T */
    { 0x135c, 0x45030000, 0xffff0000, MIPSBranchCop }, /* BC1TL */
    { 0x1ce7, 0x46000030, 0xfe00003f, MIPSFPUCmp }, /* C_F_f */
    { 0x193a, 0x46000031, 0xfe00003f, MIPSFPUCmp }, /* C_UN_f */
    { 0x193f, 0x46000032, 0xfe00003f, MIPSFPUCmp }, /* C_EQ_f */
    { 0x1362, 0x46000033, 0xfe00003f, MIPSFPUCmp }, /* C_UEQ_f */
    { 0x1368, 0x46000034, 0xfe00003f, MIPSFPUCmp }, /* C_OLT_f */
    { 0x136e, 0x46000035, 0xfe00003f, MIPSFPUCmp }, /* C_ULT_f */
    { 0x1374, 0x46000036, 0xfe00003f, MIPSFPUCmp }, /* C_OLE_f */
    { 0x137a, 0x46000037, 0xfe00003f, MIPSFPUCmp }, /* C_ULE_f */
    { 0x1944, 0x46000038, 0xfe00003f, MIPSFPUCmp }, /* C_SF_f */
    { 0x0a60, 0x46000039, 0xfe00003f, MIPSFPUCmp }, /* C_NGLE_f */
    { 0x1380, 0x4600003a, 0xfe00003f, MIPSFPUCmp }, /* C_SEQ_f */
    { 0x0a5f, 0x4600003b, 0xfe00003f, MIPSFPUCmp }, /* C_NGL_f */
    { 0x1949, 0x4600003c, 0xfe00003f, MIPSFPUCmp }, /* C_LE_f */
    { 0x0592, 0x4600003d, 0xfe00003f, MIPSFPUCmp }, /* C_LT_f */
    { 0x1386, 0x4600003e, 0xfe00003f, MIPSFPUCmp }, /* C_NGE_f */
    { 0x138c, 0x4600003f, 0xfe00003f, MIPSFPUCmp }, /* C_NGT_f */
    { 0x0a67, 0x4600000a, 0xfe00003f, MIPSFPUOp3 }, /* CEIL_L_f */
    { 0x0a6e, 0x4600000e, 0xfe00003f, MIPSFPUOp3 }, /* CEIL_W_f */
    { 0x194e, 0x44400000, 0xffe007ff, MIPSFGMove }, /* CFC1 */
    { 0x1953, 0x44c00000, 0xffe007ff, MIPSFGMove }, /* CTC1 */
    { 0x1392, 0x46000021, 0xfe00003f, MIPSFPUOp2 }, /* CVT_D_f */
    { 0x1398, 0x46000025, 0xfe00003f, MIPSFPUOp2 }, /* CVT_L_f */
    { 0x139e, 0x46000020, 0xfe00003f, MIPSFPUOp2 }, /* CVT_S_f */
    { 0x13a4, 0x46000024, 0xfe00003f, MIPSFPUOp2 }, /* CVT_W_f */
    { 0x0792, 0x46000003, 0xfe00003f, MIPSFPUOp3 }, /* DIV_f */
    { 0x13aa, 0x44200000, 0xffe007ff, MIPSReg2 }, /* DMFC1 */
    { 0x13b1, 0x44a00000, 0xffe007ff, MIPSReg2 }, /* DMTC1 */
    { 0x056d, 0x4600000b, 0xfe00003f, MIPSFPUOp2 }, /* FLOOR_L_f */
    { 0x0575, 0x4600000f, 0xfe00003f, MIPSFPUOp2 }, /* FLOOR_W_f */
    { 0x13ac, 0x44000000, 0xffe007ff, MIPSFGMove }, /* MFC1 */
    { 0x004d, 0x46000006, 0xfe00003f, MIPSFPUOp2 }, /* MOV_f */
    { 0x13b3, 0x44800000, 0xffe007ff, MIPSFGMove }, /* MTC1 */
    { 0x0425, 0x46000002, 0xfe00003f, MIPSFPUOp3 }, /* MUL_f */
    { 0x1179, 0x46000007, 0xfe00003f, MIPSFPUOp2 }, /* NEG_f */
    { 0x057d, 0x46000008, 0xfe00003f, MIPSFPUOp2 }, /* ROUND_L_f */
    { 0x0585, 0x4600000c, 0xfe00003f, MIPSFPUOp2 }, /* ROUND_W_f */
    { 0x041e, 0x46000004, 0xfe00003f, MIPSFPUOp2 }, /* SQRT_f */
    { 0x01de, 0x46000001, 0xfe00003f, MIPSFPUOp3 }, /* SUB_f */
    { 0x058d, 0x46000009, 0xfe00003f, MIPSFPUOp2 }, /* TRUNC_L_f */
    { 0x0597, 0x4600000d, 0xfe00003f, MIPSFPUOp2 }, /* TRUNC_W_f */

};

const unsigned short DisRegisterTable[] = {
    0x0000,
    0x196b,
    0x1428,
    0x0ece,
    0x14a3,
    0x1970,
    0x1975,
    0x197a,
    0x197f,
    0x1984,
    0x1989,
    0x1429,
    0x142f,
    0x1435,
    0x143b,
    0x1441,
    0x1447,
    0x144d,
    0x1453,
    0x1459,
    0x145f,
    0x1466,
    0x146c,
    0x1472,
    0x1478,
    0x147e,
    0x1484,
    0x148a,
    0x1490,
    0x1496,
    0x149c,
    0x14a4,
    0x14aa,
    0x1a8a,
    0x122b,
    0x1273,
    0x12bb,
    0x18b7,
    0x18bd,
    0x18c3,
    0x18c9,
    0x18cf,
    0x18d5,
    0x122c,
    0x1233,
    0x123a,
    0x1241,
    0x1248,
    0x124f,
    0x1256,
    0x125d,
    0x1264,
    0x126b,
    0x1274,
    0x127b,
    0x1282,
    0x1289,
    0x1290,
    0x1297,
    0x129e,
    0x12a5,
    0x12ac,
    0x12b3,
    0x12bc,
    0x12c3,
    0x19e9,
    0x002d,
    0x0039,
    0x0045,
    0x19f6,
    0x19fb,
    0x1a00,
    0x1a05,
    0x1a0a,
    0x1a0f,
    0x1a14,
    0x008b,
    0x0f4a,
    0x05b4,
    0x1a25,
    0x02fd,
    0x1a2e,
    0x1a33,
    0x1a38,
    0x0a53,
    0x1a41,
    0x1a46,
    0x1a4b,
    0x1a50,
    0x14b1,
    0x14b7,
    0x03d8,
    0x14bd,
    0x07f0,
    0x1a5d,
    0x019d,
    0x0ba3,
    0x1969,
    0x1425,
    0x1463,
    0x14a0,
    0x196e,
    0x1973,
    0x1978,
    0x197d,
    0x1982,
    0x1987,
    0x1426,
    0x142d,
    0x1433,
    0x1439,
    0x143f,
    0x1445,
    0x144b,
    0x1451,
    0x1457,
    0x145d,
    0x1464,
    0x146a,
    0x1470,
    0x1476,
    0x147c,
    0x1482,
    0x1488,
    0x148e,
    0x1494,
    0x149a,
    0x14a1,
    0x14a8,
    0x1d04,
    0x198c,
    0x19b5,
    0x19de,
    0x1d07,
    0x1d0a,
    0x1d0d,
    0x1d10,
    0x1d13,
    0x1d16,
    0x198d,
    0x1991,
    0x1995,
    0x1999,
    0x199d,
    0x19a1,
    0x19a5,
    0x19a9,
    0x19ad,
    0x19b1,
    0x19b6,
    0x19ba,
    0x19be,
    0x19c2,
    0x19c6,
    0x19ca,
    0x19ce,
    0x19d2,
    0x19d6,
    0x19da,
    0x19df,
    0x19e3,
    0x19e7,
    0x19ec,
    0x14ae,
    0x19f0,
    0x19f4,
    0x19f9,
    0x19fe,
    0x1a03,
    0x1a08,
    0x1a0d,
    0x1a12,
    0x1a17,
    0x1a1b,
    0x1a1f,
    0x1a23,
    0x1a28,
    0x1a2c,
    0x1a31,
    0x1a36,
    0x1a3b,
    0x1a3f,
    0x1a44,
    0x1a49,
    0x1a4e,
    0x14af,
    0x14b5,
    0x1a53,
    0x14bb,
    0x1a57,
    0x1a5b,
    0x1a60,
    0x0ba1,
    0x1a8a,
    0x122b,
    0x1273,
    0x12bb,
    0x18b7,
    0x18bd,
    0x18c3,
    0x18c9,
    0x18cf,
    0x18d5,
    0x122c,
    0x1233,
    0x123a,
    0x1241,
    0x1248,
    0x124f,
    0x1256,
    0x125d,
    0x1264,
    0x126b,
    0x1274,
    0x127b,
    0x1282,
    0x1289,
    0x1290,
    0x1297,
    0x129e,
    0x12a5,
    0x12ac,
    0x12b3,
    0x12bc,
    0x12c3,
    0x196b,
    0x1428,
    0x0ece,
    0x14a3,
    0x1970,
    0x1975,
    0x197a,
    0x197f,
    0x1984,
    0x1989,
    0x1429,
    0x142f,
    0x1435,
    0x143b,
    0x1441,
    0x1447,
    0x144d,
    0x1453,
    0x1459,
    0x145f,
    0x1466,
    0x146c,
    0x1472,
    0x1478,
    0x147e,
    0x1484,
    0x148a,
    0x1490,
    0x1496,
    0x149c,
    0x14a4,
    0x14aa,
    0x1a88,
    0x1a8d,
    0x1a91,
    0x1a95,
    0x1a99,
    0x1a9d,
    0x1aa1,
    0x1aa5,
    0x1575,
    0x0d8b,
    0x0dc8,
    0x0e05,
    0x157a,
    0x157f,
    0x1584,
    0x1589,
    0x158e,
    0x1593,
    0x0d8c,
    0x0d92,
    0x0d98,
    0x0d9e,
    0x0da4,
    0x0daa,
    0x0db0,
    0x0db6,
    0x0dbc,
    0x0dc2,
    0x0dc9,
    0x0dcf,
    0x0dd5,
    0x0ddb,
    0x0de1,
    0x0de7,
    0x0ded,
    0x0df3,
    0x0df9,
    0x0dff,
    0x0e06,
    0x0e0c,
    0x019d,
    0x1598,
    0x13c0,
    0x0115,
    0x001e,
    0x0325,
    0x090b,
    0x05bb,
    0x1d1c,
    0x0561,
    0x08b1,
    0x09ed,
    0x09fe,
    0x0a07,
    0x019d,
    0x0079,
    0x00ee,
    0x036a,
    0x1b2e,
    0x0e48,
    0x1b32,
    0x1b36,
    0x1b3a,
    0x1b3e,
    0x1b42,
    0x1b46,
    0x0137,
    0x10c9,
    0x10cf,
    0x10d5,
    0x10db,
    0x10e1,
    0x10e7,
    0x10ed,
    0x1689,
    0x168f,
    0x1695,
    0x169b,
    0x16a1,
    0x16a7,
    0x16ad,
    0x16b3,
    0x1687,
    0x168d,
    0x1693,
    0x1699,
    0x169f,
    0x16a5,
    0x16ab,
    0x16b1,
    0x1a88,
    0x1a91,
    0x1a95,
    0x1a99,
    0x1b4a,
    0x16fd,
    0x1b4e,
    0x1b52,
    0x1b56,
    0x1b5a,
    0x1b5e,
    0x1b62,
    0x1b66,
    0x1b6a,
    0x1b6e,
    0x054f,
    0x0346,
    0x0100,
    0x01db,
    0x03a6,
    0x0999,
    0x0115,
    0x0325,
    0x05bb,
    0x0561,
    0x1b7b,
    0x18d6,
    0x16bd,
    0x16c2,
    0x16c7,
    0x16cc,
    0x16d1,
    0x16d6,
    0x1b7f,
    0x13c0,
    0x1b83,
    0x001e,
    0x1b87,
    0x090b,
    0x1b8b,
    0x1d1c,
    0x08b1,
    0x09ed,
    0x09fe,
    0x0a07,
    0x019d,
    0x0079,
    0x00ee,
    0x036a,
    0x1b8f,
    0x1b93,
    0x16db,
    0x16e0,
    0x16e5,
    0x16ea,
    0x16ef,
    0x16f4,
    0x1b2e,
    0x0e48,
    0x1b32,
    0x1b36,
    0x1b3a,
    0x1b3e,
    0x1b42,
    0x1b46,
    0x1b97,
    0x1b9b,
    0x16f9,
    0x16ff,
    0x1704,
    0x1709,
    0x170e,
    0x1713,
    0x09a5,
    0x1b9f,
    0x1ba3,
    0x1117,
    0x1ba7,
    0x1bab,
    0x14ee,
    0x1baf,
    0x1bb3,
    0x110b,
    0x18cf,
    0x18d5,
    0x122c,
    0x1233,
    0x123a,
    0x1241,
    0x1248,
    0x124f,
    0x09ac,
    0x1bb7,
    0x0137,
    0x10c9,
    0x10cf,
    0x10d5,
    0x10db,
    0x10e1,
    0x10e7,
    0x10ed,
    0x1689,
    0x168f,
    0x1695,
    0x169b,
    0x16a1,
    0x16a7,
    0x16ad,
    0x16b3,
    0x1687,
    0x168d,
    0x1693,
    0x1699,
    0x169f,
    0x16a5,
    0x16ab,
    0x16b1,
    0x1a88,
    0x1a91,
    0x1a95,
    0x1a99,
    0x1bbb,
    0x1b4a,
    0x16fd,
    0x1b4e,
    0x1b52,
    0x1b56,
    0x1b5a,
    0x054f,
    0x0346,
    0x0100,
    0x01db,
    0x03a6,
    0x0999,
    0x1be7,
    0x1761,
    0x1794,
    0x17c7,
    0x1beb,
    0x1bef,
    0x1bf3,
    0x1bf7,
    0x1bfb,
    0x1bff,
    0x1762,
    0x1767,
    0x176c,
    0x1771,
    0x1776,
    0x177b,
    0x1780,
    0x1785,
    0x178a,
    0x178f,
    0x1795,
    0x179a,
    0x179f,
    0x17a4,
    0x17a9,
    0x17ae,
    0x17b3,
    0x17b8,
    0x17bd,
    0x17c2,
    0x17c8,
    0x17cd,
    0x1c03,
    0x17d2,
    0x1805,
    0x1838,
    0x1c07,
    0x1c0b,
    0x1c0f,
    0x1c13,
    0x1c17,
    0x1c1b,
    0x17d3,
    0x17d8,
    0x17dd,
    0x17e2,
    0x17e7,
    0x17ec,
    0x17f1,
    0x17f6,
    0x17fb,
    0x1800,
    0x1806,
    0x180b,
    0x1810,
    0x1815,
    0x181a,
    0x181f,
    0x1824,
    0x1829,
    0x182e,
    0x1833,
    0x1839,
    0x183e,
    0x1c1f,
    0x1c23,
    0x1c27,
    0x1c2b,
    0x1c2f,
    0x1c33,
    0x1c37,
    0x1c3b,
    0x1c3f,
    0x1c43,
    0x1c47,
    0x1c4b,
    0x1c4f,
    0x1c53,
    0x1c57,
    0x1c5b,
    0x1c5f,
    0x1c63,
    0x1c67,
    0x1c6b,
    0x1c6f,
    0x1c73,
    0x1c77,
    0x1c7b,
    0x1c7f,
    0x1c83,
    0x1c87,
    0x1c8b,
    0x1c8f,
    0x1c93,
    0x1c97,
    0x1c9b,
    0x1c9f,
    0x1ca3,
    0x1ca7,
    0x1843,
    0x1876,
    0x18a9,
    0x1cab,
    0x1caf,
    0x1cb3,
    0x1cb7,
    0x1cbb,
    0x1cbf,
    0x1844,
    0x1849,
    0x184e,
    0x1853,
    0x1858,
    0x185d,
    0x1862,
    0x1867,
    0x186c,
    0x1871,
    0x1877,
    0x187c,
    0x1881,
    0x1886,
    0x188b,
    0x1890,
    0x1895,
    0x189a,
    0x189f,
    0x18a4,
    0x18aa,
    0x18af,
    0x1227,
    0x126f,
    0x12b7,
    0x18b4,
    0x18ba,
    0x18c0,
    0x18c6,
    0x18cc,
    0x18d2,
    0x1228,
    0x1230,
    0x1237,
    0x123e,
    0x1245,
    0x124c,
    0x1253,
    0x125a,
    0x1261,
    0x1268,
    0x1270,
    0x1278,
    0x127f,
    0x1286,
    0x128d,
    0x1294,
    0x129b,
    0x12a2,
    0x12a9,
    0x12b0,
    0x12b8,
    0x12c0,
    0x0695,
    0x0991,
    0x043c,
    0x1b76,
    0x196b,
    0x1428,
    0x0ece,
    0x14a3,
    0x1970,
    0x1975,
    0x197a,
    0x197f,
    0x1984,
    0x1989,
    0x1429,
    0x142f,
    0x1435,
    0x143b,
    0x1441,
    0x1447,
    0x144d,
    0x1453,
    0x1459,
    0x145f,
    0x1466,
    0x146c,
    0x1472,
    0x1478,
    0x147e,
    0x1484,
    0x148a,
    0x1490,
    0x1496,
    0x149c,
    0x14a4,
    0x14aa,
    0x1d04,
    0x198c,
    0x19b5,
    0x19de,
    0x1d07,
    0x1d0a,
    0x1d0d,
    0x1d10,
    0x1d13,
    0x1d16,
    0x198d,
    0x1991,
    0x1995,
    0x1999,
    0x199d,
    0x19a1,
    0x19a5,
    0x19a9,
    0x19ad,
    0x19b1,
    0x19b6,
    0x19ba,
    0x19be,
    0x19c2,
    0x19c6,
    0x19ca,
    0x19ce,
    0x19d2,
    0x19d6,
    0x19da,
    0x19df,
    0x19e3,
    0x0ba3,
    0x07f0,
    0x19e9,
    0x1ced,
    0x1a2e,
    0x1a33,
    0x1a38,
    0x0a53,
    0x002d,
    0x0039,
    0x0045,
    0x19f6,
    0x19fb,
    0x1a00,
    0x1a05,
    0x1a0a,
    0x1a0f,
    0x1a14,
    0x008b,
    0x0f4a,
    0x05b4,
    0x1a25,
    0x1cf2,
    0x1cf7,
    0x1a4b,
    0x1a50,
    0x1cfc,
    0x1d01,
    0x1a5d,
    0x019d,
    0x02fd,
    0x03d8,
    0x1969,
    0x1425,
    0x1463,
    0x14a0,
    0x196e,
    0x1973,
    0x1978,
    0x197d,
    0x1982,
    0x1987,
    0x1426,
    0x142d,
    0x1433,
    0x1439,
    0x143f,
    0x1445,
    0x144b,
    0x1451,
    0x1457,
    0x145d,
    0x1464,
    0x146a,
    0x1470,
    0x1476,
    0x147c,
    0x1482,
    0x1488,
    0x148e,
    0x1494,
    0x149a,
    0x14a1,
    0x14a8,
    0x1d04,
    0x198c,
    0x19b5,
    0x19de,
    0x1d07,
    0x1d0a,
    0x1d0d,
    0x1d10,
    0x1d13,
    0x1d16,
    0x198d,
    0x1991,
    0x1995,
    0x1999,
    0x199d,
    0x19a1,
    0x19a5,
    0x19a9,
    0x19ad,
    0x19b1,
    0x19b6,
    0x19ba,
    0x19be,
    0x19c2,
    0x19c6,
    0x19ca,
    0x19ce,
    0x19d2,
    0x19d6,
    0x19da,
    0x19df,
    0x19e3,
    0x0ba1,
    0x1a57,
    0x19e7,
    0x1ceb,
    0x1a2c,
    0x1a31,
    0x1a36,
    0x1a3b,
    0x19ec,
    0x14ae,
    0x19f0,
    0x19f4,
    0x19f9,
    0x19fe,
    0x1a03,
    0x1a08,
    0x1a0d,
    0x1a12,
    0x1a17,
    0x1a1b,
    0x1a1f,
    0x1a23,
    0x1cf0,
    0x1cf5,
    0x1a49,
    0x1a4e,
    0x1cfa,
    0x1cff,
    0x1a5b,
    0x1a60,
    0x1a28,
    0x1a53,
};

const unsigned short DisRefTypeTable[] = {
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x1102,
    0x10f5,
    0x10f3,
    0x10fa,
    0x1100,
    0x1100,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x10f3,
    0x10fa,
    0x1107,
    0x10f3,
    0x1107,
    0x1107,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x1102,
    0x10f5,
    0x10f3,
    0x10fa,
    0x1100,
    0x1100,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x10f3,
    0x10fa,
    0x1107,
    0x10f3,
    0x1107,
    0x1107,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
};

const dis_range AXPRangeTable[] = {

    /* Table_1 */

    { 0x3f, 0x1a, 0x0000 },
    { 0x7f, 0x05, 0x0040 },
    { 0x3f, 0x06, 0x00c0 },
    { 0x7f, 0x05, 0x0100 },
    { 0x03, 0x09, 0x0180 },
    { 0x3f, 0x05, 0x0184 },
    { 0x3f, 0x05, 0x01c4 },
    { 0x3f, 0x05, 0x0204 },
    { 0x01, 0x0a, 0x0244 },
    { 0x03, 0x0e, 0x0246 },
    { 0x0f, 0x0c, 0x024a },
    { 0x01, 0x0e, 0x025a },
};

const int AXPRangeTablePos[] = {
    0,
    -1
};

const dis_range PPCRangeTable[] = {

    /* Table_1 */

    { 0x3f, 0x1a, 0x025c },
    { 0x07, 0x01, 0x029c },
    { 0x07, 0x02, 0x02a4 },
    { 0xff, 0x01, 0x02ac },
    { 0x03, 0x00, 0x03ac },
    { 0x1f, 0x01, 0x03b0 },
    { 0x01, 0x00, 0x03d0 },
    { 0xff, 0x01, 0x03d2 },
    { 0x01, 0x05, 0x04d2 },
    { 0x0f, 0x06, 0x04d4 },
    { 0x0f, 0x01, 0x04e4 },
    { 0x01, 0x0a, 0x04f4 },
    { 0xff, 0x02, 0x04f6 },
    { 0xff, 0x02, 0x05f6 },
    { 0x01, 0x0a, 0x06f6 },
    { 0xff, 0x03, 0x06f8 },
    { 0xff, 0x03, 0x07f8 },
    { 0xff, 0x03, 0x08f8 },
    { 0xff, 0x03, 0x09f8 },
    { 0xff, 0x03, 0x0af8 },
    { 0x01, 0x0a, 0x0bf8 },
    { 0xff, 0x02, 0x0bfa },
    { 0x01, 0x0a, 0x0cfa },
    { 0xff, 0x02, 0x0cfc },
    { 0xff, 0x03, 0x0dfc },
    { 0xff, 0x03, 0x0efc },
    { 0xff, 0x02, 0x0ffc },
    { 0xff, 0x02, 0x10fc },
    { 0xff, 0x03, 0x11fc },
    { 0xff, 0x03, 0x12fc },
    { 0xff, 0x03, 0x13fc },
    { 0xff, 0x03, 0x14fc },
    { 0xff, 0x02, 0x15fc },
    { 0xff, 0x02, 0x16fc },
    { 0xff, 0x03, 0x17fc },
    { 0x01, 0x0a, 0x18fc },
    { 0xff, 0x00, 0x18fe },
    { 0xff, 0x03, 0x19fe },
    { 0xff, 0x03, 0x1afe },
    { 0xff, 0x03, 0x1bfe },
    { 0xff, 0x03, 0x1cfe },
    { 0xff, 0x03, 0x1dfe },
    { 0xff, 0x03, 0x1efe },
    { 0x01, 0x0a, 0x1ffe },
    { 0x01, 0x0a, 0x2000 },
    { 0x01, 0x0a, 0x2002 },
    { 0xff, 0x02, 0x2004 },
    { 0xff, 0x02, 0x2104 },
    { 0xff, 0x02, 0x2204 },
    { 0xff, 0x02, 0x2304 },
    { 0xff, 0x03, 0x2404 },
    { 0x01, 0x0a, 0x2504 },
    { 0x01, 0x0a, 0x2506 },
    { 0x01, 0x0a, 0x2508 },
    { 0xff, 0x03, 0x250a },
};

const int PPCRangeTablePos[] = {
    0,
    -1
};

const dis_range X86RangeTable[] = {

    /* Table_1 */

    { 0x7f, 0x01, 0x260a },
    { 0xff, 0x00, 0x268a },
    { 0xff, 0x00, 0x278a },
    { 0xff, 0x00, 0x288a },
    { 0xff, 0x00, 0x298a },
    { 0xff, 0x00, 0x2a8a },
    { 0xff, 0x00, 0x2b8a },
    { 0xff, 0x00, 0x2c8a },
    { 0xff, 0x00, 0x2d8a },
    { 0xff, 0x00, 0x2e8a },
    { 0xff, 0x00, 0x2f8a },
    { 0xff, 0x00, 0x308a },
    { 0xff, 0x00, 0x318a },
    { 0xff, 0x00, 0x328a },
    { 0xff, 0x00, 0x338a },
    { 0xff, 0x00, 0x348a },
    { 0xff, 0x00, 0x358a },
    { 0xff, 0x00, 0x368a },
    { 0xff, 0x00, 0x378a },
    { 0xff, 0x00, 0x388a },
    { 0xff, 0x00, 0x398a },
    { 0xff, 0x00, 0x3a8a },
    { 0xff, 0x00, 0x3b8a },
    { 0x07, 0x0b, 0x3c8a },
    { 0x07, 0x0b, 0x3c92 },
    { 0xff, 0x00, 0x3c9a },
    { 0xff, 0x00, 0x3d9a },
    { 0xff, 0x00, 0x3e9a },
    { 0xff, 0x00, 0x3f9a },
    { 0xff, 0x00, 0x409a },
    { 0xff, 0x00, 0x419a },
    { 0x07, 0x0b, 0x429a },
    { 0xff, 0x00, 0x42a2 },
    { 0xff, 0x00, 0x43a2 },
    { 0xff, 0x00, 0x44a2 },
    { 0xff, 0x00, 0x45a2 },
    { 0xff, 0x00, 0x46a2 },
    { 0x07, 0x0b, 0x47a2 },
    { 0x07, 0x0b, 0x47aa },
    { 0xff, 0x00, 0x47b2 },
    { 0xff, 0x00, 0x48b2 },
    { 0xff, 0x00, 0x49b2 },
    { 0xff, 0x00, 0x4ab2 },
    { 0xff, 0x00, 0x4bb2 },
    { 0xff, 0x00, 0x4cb2 },
    { 0xff, 0x00, 0x4db2 },
    { 0xff, 0x00, 0x4eb2 },
    { 0xff, 0x00, 0x4fb2 },
    { 0xff, 0x00, 0x50b2 },
    { 0xff, 0x00, 0x51b2 },
    { 0x07, 0x0b, 0x52b2 },
    { 0xff, 0x00, 0x52ba },
    { 0xff, 0x00, 0x53ba },
    { 0xff, 0x00, 0x54ba },
    { 0x07, 0x0b, 0x55ba },
    { 0xff, 0x08, 0x55c2 },
    { 0x1f, 0x0b, 0x56c2 },
    { 0x1f, 0x0b, 0x56e2 },
    { 0x1f, 0x0b, 0x5702 },
    { 0x03, 0x0b, 0x5722 },
    { 0x1f, 0x0b, 0x5726 },
    { 0x1f, 0x0b, 0x5746 },
    { 0x1f, 0x0b, 0x5766 },
    { 0x03, 0x0b, 0x5786 },
    { 0x1f, 0x0b, 0x578a },
    { 0x03, 0x0b, 0x57aa },
    { 0x1f, 0x0b, 0x57ae },
    { 0x1f, 0x0b, 0x57ce },
    { 0x1f, 0x0b, 0x57ee },
    { 0x03, 0x0b, 0x580e },
    { 0x1f, 0x0b, 0x5812 },
    { 0x1f, 0x0b, 0x5832 },
    { 0x07, 0x13, 0x5852 },
    { 0x07, 0x13, 0x585a },
    { 0x01, 0x13, 0x5862 },
    { 0x01, 0x13, 0x5864 },
    { 0x07, 0x13, 0x5866 },
    { 0xff, 0x01, 0x586e },
    { 0xff, 0x08, 0x596e },
    { 0xff, 0x08, 0x5a6e },
    { 0xff, 0x08, 0x5b6e },
    { 0x03, 0x0e, 0x5c6e },
    { 0x03, 0x0e, 0x5c72 },
    { 0x03, 0x0e, 0x5c76 },
    { 0xff, 0x08, 0x5c7a },
    { 0x03, 0x0e, 0x5d7a },
    { 0x03, 0x0e, 0x5d7e },
    { 0x03, 0x0e, 0x5d82 },
    { 0x03, 0x0e, 0x5d86 },
    { 0x03, 0x0e, 0x5d8a },
    { 0x03, 0x0e, 0x5d8e },
    { 0x03, 0x0e, 0x5d92 },
    { 0x03, 0x0e, 0x5d96 },
    { 0x03, 0x0e, 0x5d9a },
    { 0x03, 0x0e, 0x5d9e },
    { 0x03, 0x0e, 0x5da2 },
    { 0x1f, 0x13, 0x5da6 },
    { 0x03, 0x16, 0x5dc6 },
    { 0x03, 0x16, 0x5dca },
    { 0x3f, 0x0a, 0x5dce },
    { 0x3f, 0x0a, 0x5e0e },

    /* Table_2 */

    { 0x0f, 0x00, 0x5e4e },
    { 0xff, 0x08, 0x5e5e },
    { 0xff, 0x09, 0x5f5e },
    { 0x03, 0x16, 0x605e },
    { 0x03, 0x16, 0x6062 },
    { 0x03, 0x16, 0x6066 },
    { 0x03, 0x16, 0x606a },
    { 0x03, 0x13, 0x606e },
    { 0x03, 0x16, 0x6072 },
    { 0x0f, 0x14, 0x6076 },
    { 0x0f, 0x14, 0x6086 },
    { 0x0f, 0x14, 0x6096 },
    { 0x1f, 0x13, 0x60a6 },
    { 0x03, 0x16, 0x60c6 },
    { 0x03, 0x16, 0x60ca },
    { 0x03, 0x16, 0x60ce },
    { 0x03, 0x16, 0x60d2 },
    { 0x03, 0x16, 0x60d6 },
    { 0x03, 0x16, 0x60da },
    { 0x03, 0x16, 0x60de },

    /* Table_3 */

    { 0x0f, 0x00, 0x60e2 },
    { 0xff, 0x08, 0x60f2 },
    { 0x03, 0x16, 0x61f2 },
    { 0x03, 0x16, 0x61f6 },
    { 0x03, 0x16, 0x61fa },
    { 0x03, 0x16, 0x61fe },
    { 0x03, 0x16, 0x6202 },
    { 0x0f, 0x14, 0x6206 },
    { 0x0f, 0x14, 0x6216 },
    { 0x1f, 0x13, 0x6226 },
    { 0x03, 0x16, 0x6246 },
    { 0x03, 0x16, 0x624a },

    /* Table_4 */

    { 0x0f, 0x00, 0x624e },
    { 0xff, 0x08, 0x625e },
    { 0x03, 0x16, 0x635e },

    /* Table_5 */

    { 0x0f, 0x00, 0x6362 },
    { 0xff, 0x08, 0x6372 },
};

const int X86RangeTablePos[] = {
    0,
    101,
    121,
    133,
    136,
    -1
};

const dis_range X64RangeTable[] = {

    /* Table_1 */

    { 0x7f, 0x01, 0x6472 },
    { 0xff, 0x00, 0x64f2 },
    { 0xff, 0x00, 0x65f2 },
    { 0xff, 0x00, 0x66f2 },
    { 0xff, 0x00, 0x67f2 },
    { 0xff, 0x00, 0x68f2 },
    { 0xff, 0x00, 0x69f2 },
    { 0xff, 0x00, 0x6af2 },
    { 0xff, 0x00, 0x6bf2 },
    { 0xff, 0x00, 0x6cf2 },
    { 0xff, 0x00, 0x6df2 },
    { 0xff, 0x00, 0x6ef2 },
    { 0xff, 0x00, 0x6ff2 },
    { 0xff, 0x00, 0x70f2 },
    { 0x07, 0x0b, 0x71f2 },
    { 0x07, 0x0b, 0x71fa },
    { 0xff, 0x00, 0x7202 },
    { 0xff, 0x00, 0x7302 },
    { 0xff, 0x00, 0x7402 },
    { 0xff, 0x00, 0x7502 },
    { 0xff, 0x00, 0x7602 },
    { 0x07, 0x0b, 0x7702 },
    { 0xff, 0x00, 0x770a },
    { 0xff, 0x00, 0x780a },
    { 0xff, 0x00, 0x790a },
    { 0xff, 0x00, 0x7a0a },
    { 0x07, 0x0b, 0x7b0a },
    { 0x07, 0x0b, 0x7b12 },
    { 0xff, 0x00, 0x7b1a },
    { 0xff, 0x00, 0x7c1a },
    { 0xff, 0x00, 0x7d1a },
    { 0xff, 0x00, 0x7e1a },
    { 0xff, 0x00, 0x7f1a },
    { 0x07, 0x0b, 0x801a },
    { 0xff, 0x00, 0x8022 },
    { 0xff, 0x00, 0x8122 },
    { 0xff, 0x00, 0x8222 },
    { 0x07, 0x0b, 0x8322 },
    { 0xff, 0x08, 0x832a },
    { 0x07, 0x13, 0x842a },
    { 0x07, 0x13, 0x8432 },
    { 0x07, 0x13, 0x843a },
    { 0x1f, 0x13, 0x8442 },
    { 0x1f, 0x13, 0x8462 },
};

const int X64RangeTablePos[] = {
    0,
    -1
};

const dis_range SPARCRangeTable[] = {

    /* Table_1 */

    { 0x03, 0x1e, 0x8482 },
    { 0x7f, 0x16, 0x8486 },
    { 0x3f, 0x13, 0x8506 },
    { 0x3f, 0x13, 0x8546 },
    { 0xff, 0x05, 0x8586 },
    { 0x07, 0x05, 0x8686 },
};

const int SPARCRangeTablePos[] = {
    0,
    -1
};

const dis_range MIPSRangeTable[] = {

    /* Table_1 */

    { 0x3f, 0x1a, 0x868e },
    { 0x3f, 0x00, 0x86ce },
    { 0x1f, 0x10, 0x870e },
    { 0x01, 0x15, 0x872e },
    { 0x7f, 0x19, 0x8730 },
    { 0xff, 0x17, 0x87b0 },
    { 0x01, 0x17, 0x88b0 },
    { 0xff, 0x15, 0x88b2 },
    { 0x3f, 0x00, 0x89b2 },
    { 0x03, 0x10, 0x89f2 },
    { 0x1f, 0x00, 0x89f6 },
    { 0x03, 0x10, 0x8a16 },
};

const int MIPSRangeTablePos[] = {
    0,
    -1
};

const dis_selector DisSelectorTable[] = {
/*0000*/   1,   0,   0,   0,   0,   0,   0,   0,   7,   8,   0,  13,   0,   0,   0,  20,
/*0010*/  -1,  -2,  -3,  -4,   0,  -5,  -6,  -7,  -8,   2,  -9,   3,   0,   4,   5,   6,
/*0020*/   0,   0,  14,  15,   0,   0,  21,  22,   9,  11,  10,  12,  16,  18,  17,  19,
/*0030*/  36,  37,  38,  39,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,
/*0040*/  52,   0,  62,   0,   0,   0,   0,   0,   0,  60,   0,  64,   0,   0,   0,  54,
/*0050*/   0,   0,  66,   0,   0,   0,   0,   0,   0,   0,   0,  68,   0,  59,   0,   0,
/*0060*/  53,   0,  63,   0,   0,   0,   0,   0,   0,  61,   0,  65,   0,  55,   0,   0,
/*0070*/   0,   0,  67,   0,   0,   0,   0,   0,   0,   0,   0,  69,   0,  58,   0,   0,
/*0080*/  52,   0,   0,   0,   0,   0,   0,   0,   0,  60,   0,   0,   0,  57,   0,   0,
/*0090*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*00a0*/  53,   0,   0,   0,   0,   0,   0,   0,   0,  61,   0,   0,   0,  56,   0,   0,
/*00b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*00c0*/  70,   0,   0,   0,  71,   0,   0,   0,   0,   0,  75,  74,   0,   0,   0,   0,
/*00d0*/  72,   0,  73,  80,  82,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*00e0*/  83,   0,  79,  76,  81,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*00f0*/   0,   0,  78,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0100*/   0,   0,  98,   0,   0,   0,  84,   0,   0,   0,   0,  91,   0,   0,   0,   0,
/*0110*/   0,   0, 104,   0,   0,   0,  90,   0,   0,   0,   0,  97,   0,   0,   0,   0,
/*0120*/   0,   0, 100,   0,   0,   0,  86,   0,   0,   0,   0,  93,   0,   0,   0,   0,
/*0130*/ 108, 109, 102,   0, 107,   0,  88,   0,   0, 105,   0,  95, 106,   0,   0,   0,
/*0140*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0150*/   0,   0, 103,   0,   0,   0,   0,  96,   0,   0,  89,   0,   0,   0,   0,   0,
/*0160*/   0,   0,  99,   0,   0,   0,   0,  92,   0,   0,  85,   0,   0,   0,   0,   0,
/*0170*/   0,   0, 101,   0,   0,   0,   0,  94,   0,   0,  87,   0,   0,   0,   0,   0,
/*0180*/ 110,   0, 111, 112, 142, 156, 154, 152,   0,   0,   0,   0,   0,   0,   0,   0,
/*0190*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*01a0*/   0,   0, 143,   0, 144, 157, 155, 153,   0, 145, 146, 147,   0,   0,   0,   0,
/*01b0*/ 148, 149,   0, 158,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*01c0*/ 150,   0, 151,   0, 126, 139, 137, 135,   0,   0,   0,   0,   0,   0,   0,   0,
/*01d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*01e0*/   0,   0,   0,   0, 127, 140, 138, 136, 131, 128, 129, 130,   0,   0,   0,   0,
/*01f0*/ 134,   0,   0, 141,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0200*/ 132,   0, 133,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0210*/   0,   0,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0220*/   0,   0,   0,   0, 113, 115, 114,   0, 125, 124,   0,   0,   0,   0, 118, 123,
/*0230*/ 122, 119, 121, 120, 117,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0240*/   0,   0,   0,   0, -10, -11,  32,  33,  34,  35,  29,   0,   0,   0,  25,   0,
/*0250*/   0,   0,  23,   0,  24,   0,  27,   0,  26,  28,  31,  30,   0,   0, 395, 400,
/*0260*/   0,   0,   0, 308, 390, 205, 181, 179, 164, 165, 163, 166, 174, 330, 173,  -1,
/*0270*/ 326, 327, 325, 328, 316, 317, 402, 403, 171, 172,  -2,  -3, 278, 279, 243, 244,
/*0280*/ 381, 384, 356, 357, 265, 266, 260, 261, 373, 375, 269, 378, 256, 257, 252, 253,
/*0290*/ 369, 370, 365, 366,   0,   0,  -4,  -5,   0,   0,  -6,  -7,  -8,  -9, 318,   0,
/*02a0*/   0,   0, 242,   0, 322, 323, 321, 324, -10,   0,   0,   0, -11,   0,   0,   0,
/*02b0*/ 399,   0,   0,   0, -12, 304, -13, 306,   0,   0,   0,   0,   0,   0,   0, -14,
/*02c0*/ 276, -15, -16, -17, -18, 329, -19, -20, -21, -22,   0,   0, 180,   0,   0,   0,
/*02d0*/   0,   0,   0,   0, 387,   0,   0,   0, 398,   0,   0,   0,   0,   0, 397,   0,
/*02e0*/   0, 250, -23, -24, 346,   0, -25,   0, -26,   0,   0,   0,   0,   0,   0,   0,
/*02f0*/ 394,   0,   0,   0,   0, 303,   0, -27,   0,   0,   0,   0,   0,   0,   0, -28,
/*0300*/ 248, -29, -30, -31,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0310*/   0,   0,   0,   0, -32,   0,   0, -33,   0,   0,   0,   0,   0,   0, 396,   0,
/*0320*/   0, 274,   0, -34,   0,   0,   0,   0, 313,   0,   0,   0,   0,   0,   0,   0,
/*0330*/   0,   0,   0,   0, 389,   0, 162,   0,   0,   0,   0,   0, 293,   0, 298, 292,
/*0340*/   0, -35, -36, -37, -38, -39, 211,   0, 315,   0,   0,   0,   0,   0,   0,   0,
/*0350*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 332,   0,
/*0360*/   0, 363, 207, -40, -41,   0, 210,   0, 314,   0,   0,   0,   0,   0,   0,   0,
/*0370*/   0,   0,   0, 296, 392, 200, 168, 203,   0,   0,   0,   0,   0,   0, 300, 299,
/*0380*/   0, 379, -42, -43, -44, -45, 212,   0, 311,   0,   0,   0,   0,   0,   0,   0,
/*0390*/   0,   0,   0,   0, -46, -47, 167, -48,   0,   0,   0,   0,   0, 361, -49,   0,
/*03a0*/   0,   0, -50, -51, -52,   0,   0,   0,   0,   0,   0,   0, 247, 249, 273,   0,
/*03b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*03c0*/   0,   0, 224,   0, 240, 215,   0,   0,   0, 231,   0,   0, 229, 226, 237, 235,
/*03d0*/ 360, 362, 218,   0,   0,   0,   0,   0,   0,   0, 213,   0,   0,   0, 238,   0,
/*03e0*/ 221, 222,   0,   0, 223,   0, 239, 214,   0,   0,   0, 230,   0,   0, 228, 225,
/*03f0*/ 236, 234, 217,   0,   0,   0,   0,   0, 295,   0, 233,   0,   0,   0,   0,   0,
/*0400*/ 219, 220,   0,   0,   0,   0,   0,   0,   0,   0,   0, 230,   0,   0, 228, 225,
/*0410*/ 236, 234, 285,   0,   0,   0,   0,   0, 294, 288, 227,   0,   0,   0,   0,   0,
/*0420*/ 216,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 230,   0,   0, 228, 225,
/*0430*/ 236, 234,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0440*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 230,   0,   0, 228, 225,
/*0450*/ 236, 234,   0,   0,   0,   0,   0,   0, 297,   0, 232,   0,   0,   0,   0,   0,
/*0460*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 230,   0,   0, 228, 225,
/*0470*/ 236, 234,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0480*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 230,   0,   0, 228, 225,
/*0490*/ 236, 234,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*04a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 230,   0,   0, 228, 225,
/*04b0*/ 236, 234,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*04c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 230,   0,   0, 228, 225,
/*04d0*/ 236, 234, 284, -53,   0, 188,   0,   0, 185,   0, 191, 187, 184, 186,   0,   0,
/*04e0*/   0, 190, 189,   0,   0,   0,   0,   0,   0,   0,   0,   0, 319, 320,   0,   0,
/*04f0*/   0,   0,   0,   0, 178, 286,   0,   0,   0,   0, 388,   0,   0,   0,   0,   0,
/*0500*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0510*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0520*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0530*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0540*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0550*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0560*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0570*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 204,   0,   0,   0,   0,   0,
/*0580*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0590*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*05a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*05b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*05c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*05d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*05e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*05f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 161,   0,   0,   0,   0,
/*0600*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0610*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0620*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0630*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0640*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0650*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0660*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0670*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 160,   0,   0,   0,   0,
/*0680*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0690*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*06a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*06b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*06c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*06d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*06e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*06f0*/   0,   0,   0,   0,   0,   0, 287, 177,   0,   0,   0,   0,   0, 251,   0,   0,
/*0700*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0710*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0720*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0730*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 270,   0,   0,
/*0740*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0750*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0760*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0770*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 272,   0,   0,
/*0780*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0790*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*07a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*07b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*07c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*07d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*07e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*07f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0800*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0810*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0820*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0830*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 195,   0,   0,
/*0840*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0850*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0860*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0870*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 277,   0,   0,
/*0880*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0890*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*08a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*08b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 264,   0,   0,
/*08c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*08d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*08e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*08f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 281,   0,   0,
/*0900*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0910*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0920*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0930*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 268,   0,   0,
/*0940*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0950*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0960*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0970*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 259,   0,   0,
/*0980*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0990*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*09a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*09b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*09c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*09d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*09e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*09f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 340,   0,
/*0a00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 355,   0,
/*0a80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0aa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ab0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 345,   0,
/*0ac0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ad0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ae0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0af0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 183,   0,
/*0b00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ba0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0bb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 341,   0,
/*0bc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0bd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0be0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0bf0*/   0,   0,   0,   0,   0,   0,   0,   0, 333, 347,   0,   0,   0,   0,   0,   0,
/*0c00*/   0,   0,   0,   0,   0,   0,   0,   0, 169,   0,   0,   0,   0,   0,   0,   0,
/*0c10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c80*/   0,   0,   0,   0,   0,   0,   0,   0, 209,   0,   0,   0,   0,   0,   0,   0,
/*0c90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ca0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0cb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0cc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0cd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ce0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0cf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 282, 283,   0,   0,   0,   0,
/*0d00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d10*/   0,   0,   0,   0,   0,   0,   0, 194,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d90*/   0,   0,   0,   0,   0,   0,   0, 206,   0,   0,   0,   0,   0,   0,   0,   0,
/*0da0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0db0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0dc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0dd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0de0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0df0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e00*/   0,   0,   0,   0,   0,   0,   0,   0,   0, 280,   0,   0,   0,   0,   0,   0,
/*0e10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e40*/   0,   0,   0,   0,   0,   0,   0,   0,   0, 267,   0,   0,   0,   0,   0,   0,
/*0e50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e80*/   0,   0,   0,   0,   0,   0,   0,   0,   0, 258,   0,   0,   0,   0,   0,   0,
/*0e90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ea0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0eb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ec0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ed0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ee0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ef0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 182,   0,   0,   0,   0,   0,
/*0f10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0fa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0fb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0fc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 342,   0,   0,   0,   0,   0,
/*0fd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0fe0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ff0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1000*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1010*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 170,   0,   0,   0,   0,   0,
/*1020*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1030*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1040*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1050*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1060*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1070*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1080*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1090*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 401,   0,   0,   0,   0,   0,
/*10a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*10b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*10c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*10d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*10e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*10f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1100*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1110*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1120*/   0, 305,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1130*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1140*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1150*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1160*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1170*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1180*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1190*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*11a0*/   0, 198,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*11b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*11c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*11d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*11e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*11f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1200*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1210*/ 289,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1220*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1230*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1240*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1250*/ 290,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1260*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1270*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1280*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1290*/ 291,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*12a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*12b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*12c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*12d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*12e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*12f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1300*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1310*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1320*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1330*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1340*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1350*/   0, 275,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1360*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1370*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1380*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1390*/   0, 271,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*13a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*13b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*13c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*13d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*13e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*13f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1400*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1410*/   0, 192,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1420*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1430*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1440*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1450*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1460*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1470*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1480*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1490*/   0, 393,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*14a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*14b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*14c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*14d0*/   0, 208,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*14e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*14f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1500*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1510*/   0, 246,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1520*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1530*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1540*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1550*/   0, 263,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1560*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1570*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1580*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1590*/   0, 255,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*15a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*15b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*15c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*15d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*15e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*15f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1600*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1610*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1620*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1630*/ 312,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1640*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1650*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1660*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1670*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1680*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1690*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*16a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*16b0*/ 159,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*16c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*16d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*16e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*16f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1700*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1710*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1720*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1730*/   0, 302,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1740*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1750*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1760*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1770*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1780*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1790*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*17a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*17b0*/   0, 201,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*17c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*17d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*17e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*17f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1800*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1810*/   0,   0,   0,   0,   0,   0,   0,   0,   0, 245,   0,   0,   0,   0,   0,   0,
/*1820*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1830*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1840*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1850*/   0,   0,   0,   0,   0,   0,   0,   0,   0, 262,   0,   0,   0,   0,   0,   0,
/*1860*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1870*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1880*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1890*/   0,   0,   0,   0,   0,   0,   0,   0,   0, 254,   0,   0,   0,   0,   0,   0,
/*18a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*18b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*18c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*18d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*18e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*18f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 364, 380,   0,   0,
/*1900*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1910*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1920*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, -54, 383,   0,   0,   0,   0,
/*1930*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1940*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1950*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1960*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1970*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1980*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1990*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*19a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*19b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*19c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*19d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*19e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*19f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a20*/   0,   0,   0, 386,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a60*/   0,   0,   0, 377,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1aa0*/   0,   0,   0, 372,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ab0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ac0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ad0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ae0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1af0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b20*/   0,   0,   0,   0, 339,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ba0*/   0,   0,   0,   0, 354,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1bb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1bc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1bd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1be0*/   0,   0,   0,   0, 343,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1bf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c20*/   0,   0,   0,   0, 334,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ca0*/   0,   0,   0,   0, 348,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1cb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1cc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1cd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ce0*/   0,   0,   0,   0, 349,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1cf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 385,   0,   0,   0,   0,
/*1d30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 376,   0,   0,   0,   0,
/*1d70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1da0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 371,   0,   0,   0,   0,
/*1db0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1dc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1dd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1de0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1df0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 336,   0,   0,   0,
/*1e30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ea0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 351,   0,   0,   0,
/*1eb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ec0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ed0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ee0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 344,   0,   0,   0,
/*1ef0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f70*/   0,   0,   0, 193,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1fa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1fb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1fc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1fd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1fe0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ff0*/   0,   0,   0, 241,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 359, 368,
/*2000*/ 338, 353, 335, 350,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2010*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2020*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2030*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2040*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2050*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2060*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2070*/   0,   0,   0,   0,   0,   0,   0,   0, 391,   0,   0,   0,   0,   0,   0,   0,
/*2080*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2090*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*20a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*20b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*20c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*20d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*20e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*20f0*/   0,   0,   0,   0,   0,   0,   0,   0, 310,   0,   0,   0,   0,   0,   0,   0,
/*2100*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2110*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2120*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2130*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2140*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2150*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2160*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2170*/   0,   0,   0,   0,   0,   0,   0,   0, 307,   0,   0,   0,   0,   0,   0,   0,
/*2180*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2190*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*21a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*21b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*21c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*21d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*21e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*21f0*/   0,   0,   0,   0,   0,   0,   0,   0, 199,   0,   0,   0,   0,   0,   0,   0,
/*2200*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2210*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2220*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2230*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2240*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2250*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2260*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2270*/   0,   0,   0,   0,   0,   0,   0,   0,   0, 309,   0,   0,   0,   0,   0,   0,
/*2280*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2290*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*22a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*22b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*22c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*22d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*22e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*22f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0, 202,   0,   0,   0,   0,   0,   0,
/*2300*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2310*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2320*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2330*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2340*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2350*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2360*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2370*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 301,   0,   0,
/*2380*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2390*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*23a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*23b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*23c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*23d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*23e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*23f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 331,   0,   0,
/*2400*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2410*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2420*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2430*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2440*/   0, 196,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2450*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2460*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2470*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2480*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2490*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*24a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*24b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*24c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*24d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*24e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*24f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2500*/   0, 197,   0,   0, 358, 367, 337, 352, 176, 175,   0,   0,   0,   0,   0,   0,
/*2510*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2520*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2530*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2540*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2550*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2560*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2570*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2580*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2590*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*25a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 382,
/*25b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*25c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*25d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*25e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 374,
/*25f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2600*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 424, 424, 425,  -1, 579, 579,
/*2610*/ 580,  -2, 421, 421, 422,  -3, 625, 625, 626,  -4, 427, 427, 428,  -5, 666, 666,
/*2620*/ 667,  -6, 684, 684, 685,  -7, 454, 454, 455,  -8, 493, 493, 493, 493, 482, 482,
/*2630*/ 482, 482, 595, 595, 595, 595, 586, 586, 586, 586,  -9, -10, -11, -12, -13, -14,
/*2640*/ 494, 584, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, 671, 681, 565, 565,
/*2650*/ -25, -26, 682, 682, 682, 682, -27, -28, -29, -30, 568, 568, 573, 457, 672, 664,
/*2660*/ 553, 628, 567, 567, 567, 567, 567, 567, 567, 567, -31, -32, -33, 566, -34, -35,
/*2670*/ 495, -36, -37, -38, -39, 683, -40, -41, -42, -43, -44, -45, 490, 582, -46, -47,
/*2680*/ 491, 583, 415, -48, -49, -50, -51, -52, -53, -54,   0,   0,   0,   0,   0,   0,
/*2690*/ 596, 587,   0,   0,   0,   0,   0,   0, 596,   0,   0,   0,   0,   0,   0,   0,
/*26a0*/ 596,   0,   0,   0,   0,   0,   0,   0, 596,   0,   0,   0,   0,   0,   0,   0,
/*26b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*26c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*26d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*26e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*26f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2700*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2710*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2720*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2730*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2740*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2750*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2760*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2770*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2780*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2790*/ 596,   0,   0,   0,   0,   0,   0,   0, 596, -55,   0,   0,   0,   0,   0,   0,
/*27a0*/ 596,   0,   0,   0,   0,   0,   0,   0, 596,   0,   0,   0,   0,   0,   0,   0,
/*27b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*27c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*27d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*27e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*27f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2800*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2810*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2820*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2830*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2840*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2850*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2860*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2870*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2880*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2890*/ 596,   0,   0,   0,   0,   0,   0,   0, 596,   0,   0,   0,   0,   0,   0,   0,
/*28a0*/ 596, 588,   0,   0,   0,   0,   0,   0, 596,   0,   0,   0,   0,   0,   0,   0,
/*28b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*28c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*28d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*28e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*28f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2900*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2910*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2920*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2930*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2940*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2950*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2960*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2970*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2980*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2990*/ 596,   0,   0,   0,   0,   0,   0,   0, 596,   0,   0,   0,   0,   0,   0,   0,
/*29a0*/ 596,   0,   0,   0,   0,   0,   0,   0, 596, 589,   0,   0,   0,   0,   0,   0,
/*29b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*29c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*29d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*29e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*29f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2aa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ab0*/ 412, 479,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ac0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ad0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ae0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2af0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ba0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2bb0*/   0,   0,   0,   0,   0,   0,   0,   0, 409, 480,   0,   0,   0,   0,   0,   0,
/*2bc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2bd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2be0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2bf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ca0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2cb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2cc0*/ 410, 417,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2cd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ce0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2cf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2da0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2db0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2dc0*/   0,   0,   0,   0,   0,   0,   0,   0, 411, 420,   0,   0,   0,   0,   0,   0,
/*2dd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2de0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2df0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ea0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2eb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ec0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ed0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ee0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 604, 600,   0,   0,   0,   0,
/*2ef0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2fa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2fb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2fc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2fd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2fe0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 431, 430,   0,   0,
/*2ff0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3000*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3010*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3020*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3030*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3040*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3050*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3060*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3070*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3080*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3090*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*30a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*30b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*30c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*30d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*30e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 413, 414,
/*30f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3100*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3110*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3120*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3130*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3140*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3150*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3160*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3170*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3180*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3190*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*31a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*31b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*31c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*31d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*31e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*31f0*/ 404, 405,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3200*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3210*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3220*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3230*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3240*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3250*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3260*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3270*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3280*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3290*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*32a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*32b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*32c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*32d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*32e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*32f0*/   0,   0, 599, 489, 599, 489,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3300*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3310*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3320*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3330*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3340*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3350*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3360*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3370*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3380*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3390*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*33a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*33b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*33c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*33d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*33e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*33f0*/   0,   0, 599, 489, 599, 489,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3400*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3410*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3420*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3430*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3440*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3450*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3460*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3470*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3480*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3490*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*34a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*34b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*34c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*34d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*34e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*34f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 501, 502,   0,   0,   0,   0,
/*3500*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3510*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3520*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3530*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3540*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3550*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3560*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3570*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3580*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3590*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*35a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*35b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*35c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*35d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*35e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*35f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 503, 504,   0,   0,
/*3600*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3610*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3620*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3630*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3640*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3650*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3660*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3670*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3680*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3690*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*36a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*36b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*36c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*36d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*36e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*36f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 505, 506,
/*3700*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3710*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3720*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3730*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3740*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3750*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3760*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3770*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3780*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3790*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*37a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*37b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*37c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*37d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*37e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*37f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3800*/ 507, 508,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3810*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3820*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3830*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3840*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3850*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3860*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3870*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3880*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3890*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*38a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*38b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*38c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*38d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*38e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*38f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3900*/   0,   0, 509, 510,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3910*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3920*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3930*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3940*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3950*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3960*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3970*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3980*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3990*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*39a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*39b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*39c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*39d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*39e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*39f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a00*/   0,   0,   0,   0, 511, 512,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3aa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ab0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ac0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ad0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ae0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3af0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b00*/   0,   0,   0,   0,   0,   0, 513, 514,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ba0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3bb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3bc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3bd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3be0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3bf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3c00*/   0,   0,   0,   0,   0,   0,   0,   0, 515, 516,   0,   0,   0,   0,   0,   0,
/*3c10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3c20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3c30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3c40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3c50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3c60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3c70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3c80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 426, 581, 423, 627, 429, 668,
/*3c90*/ 686, 456, 426, 581, 423, 627, 429, 668, 686, 456,   0,   0,   0,   0,   0,   0,
/*3ca0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3cb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3cc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3cd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ce0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3cf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d20*/   0,   0,   0,   0,   0,   0, 571, 547, 571,   0,   0,   0,   0,   0,   0,   0,
/*3d30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3da0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3db0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3dc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3dd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3de0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3df0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3e00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3e10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3e20*/   0,   0,   0,   0,   0,   0, 571,   0, 571, 585,   0,   0,   0,   0,   0,   0,
/*3e30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3e40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3e50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3e60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3e70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3e80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3e90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ea0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3eb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ec0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ed0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ee0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ef0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3f00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3f10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3f20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3f30*/   0,   0, 447, 477,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3f40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3f50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3f60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3f70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3f80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3f90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3fa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3fb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3fc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3fd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3fe0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ff0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4000*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4010*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4020*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4030*/   0,   0,   0,   0, 445, 416,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4040*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4050*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4060*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4070*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4080*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4090*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*40a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*40b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*40c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*40d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*40e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*40f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4100*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4110*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4120*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4130*/   0,   0,   0,   0,   0,   0, 606, 602,   0,   0,   0,   0,   0,   0,   0,   0,
/*4140*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4150*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4160*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4170*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4180*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4190*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*41a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*41b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*41c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*41d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*41e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*41f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4200*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4210*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4220*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4230*/   0,   0,   0,   0,   0,   0,   0,   0, 624, 540,   0,   0,   0,   0,   0,   0,
/*4240*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4250*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4260*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4270*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4280*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4290*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 622, 620, 609, 611, 646, 648,
/*42a0*/   0, 650,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*42b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*42c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*42d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*42e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*42f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4300*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4310*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4320*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4330*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4340*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4350*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4360*/   0,   0,   0,   0, 616, 615,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4370*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4380*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4390*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*43a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*43b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*43c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*43d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*43e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*43f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4400*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4410*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4420*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4430*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4440*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4450*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4460*/   0,   0,   0,   0,   0,   0, 543, 542,   0,   0,   0,   0,   0,   0,   0,   0,
/*4470*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4480*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4490*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*44a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*44b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*44c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*44d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*44e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*44f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4500*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4510*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4520*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4530*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4540*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4550*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4560*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 484, 548,   0,   0,   0,   0,
/*4570*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4580*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4590*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*45a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*45b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*45c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*45d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*45e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*45f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4600*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4610*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4620*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4630*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4640*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4650*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4660*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 618, 617,   0,   0,
/*4670*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4680*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4690*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*46a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*46b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*46c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*46d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*46e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*46f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4700*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4710*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4720*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4730*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4740*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4750*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4760*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4770*/ 496, 499,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4780*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4790*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*47a0*/   0,   0, 621, 619, 608, 610, 645, 647,   0, 649, 621, 619, 608, 610, 645, 647,
/*47b0*/   0, 649,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*47c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*47d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*47e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*47f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4800*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4810*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4820*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4830*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4840*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4850*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4860*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4870*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4880*/   0,   0,   0,   0,   0,   0, 419, 418,   0,   0,   0,   0,   0,   0,   0,   0,
/*4890*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*48a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*48b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*48c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*48d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*48e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*48f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4900*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4910*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4920*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4930*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4940*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4950*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4960*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4970*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4980*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, -56, -57,   0,   0, -58, -59,
/*4990*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*49a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*49b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*49c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*49d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*49e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*49f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4a00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4a10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4a20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4a30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4a40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4a50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4a60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4a70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4a80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, -60, -61,   0,   0,
/*4a90*/ -62, -63,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4aa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4ab0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4ac0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4ad0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4ae0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4af0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4b00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4b10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4b20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4b30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4b40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4b50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4b60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4b70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4b80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, -64, -65,   0,   0, -66, -67,
/*4b90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4ba0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4bb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4bc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4bd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4be0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4bf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4c00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4c10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4c20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4c30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4c40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4c50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4c60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4c70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4c80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, -68, -69,   0,   0,
/*4c90*/ -70, -71,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4ca0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4cb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4cc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4cd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4ce0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4cf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4d00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4d10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4d20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4d30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4d40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4d50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4d60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4d70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4d80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4d90*/   0,   0, 560, 557,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4da0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4db0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4dc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4dd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4de0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4df0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4e00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4e10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4e20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4e30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4e40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4e50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4e60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4e70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4e80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4e90*/   0,   0,   0,   0, 554, 533,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4ea0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4eb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4ec0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4ed0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4ee0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4ef0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4f00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4f10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4f20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4f30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4f40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4f50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4f60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4f70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4f80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4f90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 443, 536,   0,   0,   0,   0,
/*4fa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4fb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4fc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4fd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4fe0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*4ff0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5000*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5010*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5020*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5030*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5040*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5050*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5060*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5070*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5080*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5090*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 538, 535,   0,   0,
/*50a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*50b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*50c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*50d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*50e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*50f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5100*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5110*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5120*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5130*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5140*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5150*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5160*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5170*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5180*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5190*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*51a0*/   0,   0,   0,   0, 408, 406,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*51b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*51c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*51d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*51e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*51f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5200*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5210*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5220*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5230*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5240*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5250*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5260*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5270*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5280*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5290*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*52a0*/   0,   0,   0,   0,   0,   0, 485, 453,   0,   0,   0,   0,   0,   0,   0,   0,
/*52b0*/   0,   0, 673,   0, 578, 577, 576, 487, 483, 486,   0,   0,   0,   0,   0,   0,
/*52c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*52d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*52e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*52f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5300*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5310*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5320*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5330*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5340*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5350*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5360*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5370*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5380*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5390*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*53a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*53b0*/   0,   0, 449, 661,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*53c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*53d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*53e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*53f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5400*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5410*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5420*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5430*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5440*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5450*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5460*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5470*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5480*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5490*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*54a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*54b0*/   0,   0,   0,   0, 451, 663,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*54c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*54d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*54e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*54f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5500*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5510*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5520*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5530*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5540*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5550*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5560*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5570*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5580*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5590*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*55a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*55b0*/   0,   0,   0,   0,   0,   0, 450, 662,   0,   0, 492, 481, 444, 446, 537, 539,
/*55c0*/ 592,   0, -72, -73, 541, 564,   0,   0, 452,   0, 497, 678,   0, 675,   0, -74,
/*55d0*/ 895, 898,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*55e0*/   0,   0, 569, 570, 569, 570, 572,   0, 572,   0,   0,   0,   0,   0,   0,   0,
/*55f0*/   0,   0, 679, 614, 612, 613, 669, 670,   0,   0,   0,   0,   0,   0,   0,   0,
/*5600*/   0,   0, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
/*5610*/ 474, 475,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5620*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5630*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5640*/   0,   0, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
/*5650*/ 531, 532, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
/*5660*/ 643, 644, 597, 590, 476, 435, 657, 656,   0,   0, 598, 591, 623, 441, 659, 658,
/*5670*/ -75, 488, 458, 458, 546, 439, 544, 545, 575, 575,   0, 674, -76, 437, 432, 433,
/*5680*/ 574, 574, 680, 680,   0,   0,   0,   0,   0, 459, 434, 434, 434, 434, 434, 434,
/*5690*/ 434, 434,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*56a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*56b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*56c0*/   0,   0, 690, 761, 707, 711, 796, 804, 724, 732, 691, 762, 708, 712, 797, 805,
/*56d0*/ 725, 733, 692, 763, 709, 713, 798, 806, 726, 734, 693, 764, 710, 714, 799, 807,
/*56e0*/ 727, 735, 745,   0, 770, 774, 816, 813, 862, 858, 746,   0, 771, 775, 817, 814,
/*56f0*/ 863, 859, 747,   0, 772, 776, 818, 815, 864, 860, 748, 881, 827,   0, -77, -78,
/*5700*/ -79, -80, 690, 761, 707, 711, 796, 804, 724, 732, 691, 762, 708, 712, 797, 805,
/*5710*/ 725, 733, 692, 763, 709, 713, 798, 806, 726, 734, 693, 764,   0,   0, 799, 807,
/*5720*/ 727, 735, -81,   0, -82, -83, 694, 765, 715, 718, 800, 808, 728, 736, 695, 766,
/*5730*/ 716, 719, 801, 809, 729, 737, 696, 767, 717, 720, 802, 810, 730, 738, 846, 848,
/*5740*/ 850, 852,   0, 879,   0,   0, 752, 790, 781, 784,   0, 749,   0, 778, 753, 791,
/*5750*/ 782, 785,   0, 750,   0, 779, 754, 792, 783, 786,   0, 751,   0, 780, 847, 849,
/*5760*/ 851, 853, -84, 893, 891,   0, 694, 765, 715, 718, 800, 808, 728, 736, 695, 766,
/*5770*/ 716, 719, 801, 809, 729, 737, 696, 767, 717, 720, 802, 810, 730, 738,   0,   0,
/*5780*/   0,   0,   0,   0,   0,   0, -85, -86, -87, -88, 690, 761, 707, 711, 796, 804,
/*5790*/ 724, 732, 691, 762, 708, 712, 797, 805, 725, 733, 692, 763, 709, 713, 798, 806,
/*57a0*/ 726, 734, 693, 764,   0,   0, 799, 807, 727, 735, -89,   0, -90, -91, 690, 761,
/*57b0*/ 707, 711, 796, 804, 724, 732, 691, 762, 708, 712, 797, 805, 725, 733, 692, 763,
/*57c0*/ 709, 713, 798, 806, 726, 734, 693, 764,   0,   0, 799, 807, 727, 735, 745, 793,
/*57d0*/ 770, 774, 833,   0, 838, 870, 746, 794, 771, 775, 834,   0, 839, 871, 747, 795,
/*57e0*/ 772, 776, 835,   0, 840, 872, 744,   0, 773, 777, 877, 878,   0,   0, 694, 765,
/*57f0*/ 715, 718, 800, 808, 728, 736, 695, 766, 716, 719, 801, 809, 729, 737, 696, 767,
/*5800*/ 717, 720, 802, 810, 730, 738,   0,   0,   0,   0,   0,   0,   0,   0, -92, -93,
/*5810*/ -94, -95, 694, 765, 715, 718, 800, 808, 728, 736, 695, 766, 716, 719, 801, 809,
/*5820*/ 729, 737, 696, 767, 717, 720, 802, 810, 730, 738, 697, 768,   0, 721, 811, 803,
/*5830*/ 739, 731, 752, 790, 781, 784, 698, 755, 701, 787, 753, 791, 782, 785, 699, 756,
/*5840*/ 702, 788, 754, 792, 783, 786, 700, 757, 703, 789,   0,   0,   0,   0, 874, 894,
/*5850*/ 892,   0, 655, 665, 551, 563, 676, 677,   0,   0, 651, -96, 549, 550, 660,   0,
/*5860*/ 552, 498, 896, 897, -97, -98,   0,   0,   0,   0, 436, 442, 440, 438,   0,   0,
/*5870*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5880*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5890*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*58a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*58b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*58c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*58d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, -99,   0,   0,   0,   0,   0,
/*58e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*58f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5900*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5910*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5920*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5930*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5940*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5950*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,-100,   0,   0,   0,   0,   0,
/*5960*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5970*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5980*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5990*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*59a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*59b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*59c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*59d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*59e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*59f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5a00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5a10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5a20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5a30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5a40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5a50*/   0,   0,   0,   0,   0,   0, 812, 821, 822, 823, 824, 825, 826,   0,   0,   0,
/*5a60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5a70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5a80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5a90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5aa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5ab0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5ac0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5ad0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5ae0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5af0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5b00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5b10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5b20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5b30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5b40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5b50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 688, 889,
/*5b60*/ 828, 829, 888, 830, 723, 758,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5b70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5b80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5b90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5ba0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5bb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5bc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5bd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5be0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5bf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5c00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5c10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5c20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5c30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5c40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5c50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5c60*/   0,   0,   0,   0,   0,   0, 831, 890, 854, 855, 832, 856, 857, 722, 745, 746,
/*5c70*/ 747,   0, 770, 771, 772,   0, 774, 775, 776,   0,   0,   0,   0,   0,   0,   0,
/*5c80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5c90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5ca0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5cb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5cc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5cd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5ce0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5cf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5d00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5d10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5d20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5d30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5d40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5d50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 742, 740, 705, 759, 769,   0,
/*5d60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5d70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 752, 753, 754,   0, 790, 791,
/*5d80*/ 792,   0, 781, 782, 783,   0, 784, 785, 786,   0, 745, 746, 747,   0, 770, 771,
/*5d90*/ 772,   0, 774, 775, 776,   0, 752, 753, 754,   0, 790, 791, 792,   0, 781, 782,
/*5da0*/ 783,   0, 784, 785, 786,   0,   0, 652,   0,   0,   0,   0,   0,   0,   0, 653,
/*5db0*/   0,   0,   0,   0,   0,   0,   0, 654,   0,   0,   0,   0,   0,   0,   0,   0,
/*5dc0*/   0,   0,   0,   0,   0,   0, 885, 886, 887,   0, 882, 883, 884,   0,   0,   0,
/*5dd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5de0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5df0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5e00*/   0,   0,   0,   0,   0,   0, 704, 876,   0,   0,   0,   0,   0,   0,   0,   0,
/*5e10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5e20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5e30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5e40*/   0,   0,   0,   0,   0,   0, 689, 880,   0,   0,   0,   0,   0,   0,   0,   0,
/*5e50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  -1,   0,  -2,
/*5e60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 977, 978,
/*5e70*/  -3,  -4,1075,1074,  -5,  -6,  -7,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5e80*/   0,   0,   0,   0,   0,   0, 947, 948, 932,  -8, 935, 934,1073, 930,   0,   0,
/*5e90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5ea0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 965,1068,
/*5eb0*/1065,1064, 925, 924, 981,1076, 923, 979, 933, 931,1072, 945, 936, 943,1060,1062,
/*5ec0*/1061, 983,1000,1002,1001, 984,1057,1059,1058, 982,   0,   0, 949, 975,1032,  -9,
/*5ed0*/ -10, -11, 997, 999, 998, 937,   0,   0,   0,   0,   0,   0, 950, 976,   0,   0,
/*5ee0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5ef0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5f00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, -12,   0,   0,   0,
/*5f10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5f20*/ 929, -13, -14,1003,1067,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1048,
/*5f30*/1044,1046, 987,1016,   0,1013,1054,1055,1012, 993, 990, 991,1010, 994, 995,1042,
/*5f40*/1040, 996,1014,1015,   0, -15,1052,1053,1011,1018, 988, 989,1009,1063,   0,1038,
/*5f50*/1034,1036,1017,1008,1031, 942,1049,1056,1050,1051, 985, 992, 986,   0, 946,   0,
/*5f60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5f70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5f80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5f90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5fa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5fb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5fc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5fd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 980,   0,
/*5fe0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*5ff0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6000*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6010*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6020*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6030*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6040*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6050*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 958, 959,
/*6060*/ 960, 961, 962, 963, 964,   0, 951, 952, 953, 954, 955, 956, 957,   0, -16, -17,
/*6070*/ -18, -19, 969, 970, 971,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6080*/   0,   0,   0,1047,1041,1037,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6090*/   0,   0,   0,1043,1039,1033,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*60a0*/   0,   0,   0,1045,   0,1035,   0,   0, 938,1069,   0,   0,   0, 926,   0,   0,
/*60b0*/ 939,1070,   0,   0,   0, 927,   0,   0, 940,1071,   0,   0,   0, 928,   0,   0,
/*60c0*/   0,   0,   0, 941, 944,1066, 966, 967, 968,   0,1004,1005,1006,1007, 972, 973,
/*60d0*/ 974,   0,1019,1020,1021,   0,1022,1023,1024,   0,1025,1026,1027,   0,1028,1029,
/*60e0*/1030,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*60f0*/   0,  -1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6100*/   0,   0,1121,1122,  -2,  -3,1204,1203,  -4,  -5,   0,   0,   0,   0,   0,   0,
/*6110*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1095,1096,1085,  -6,1088,1083,
/*6120*/1202,1082,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6130*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6140*/   0,   0,1113,1200,   0,   0,1080,1079,1124,1205,1077,1123,1084,1086,1201,1094,
/*6150*/1089,1093,1195,1197,1196,1126,1143,1145,1144,1127,1191,1193,1192,1125,1194,1190,
/*6160*/1097,1099,1163,  -7,  -8,  -9,1140,1142,1141,   0,   0,   0,   0,   0,1090,1091,
/*6170*/1098,1100,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6180*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6190*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*61a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*61b0*/   0,   0,   0,   0,1081,   0, -10,1146,1199,   0,   0,   0,   0,   0,   0,   0,
/*61c0*/   0,   0,1078,1181,1177,1179,1130,1159,1120,1156,1187,1188,1155,1136,1133,1134,
/*61d0*/1153,1137,1138,1174,1172,1139,1157,1158,1087, -11,1185,1186,1154,1161,1131,1132,
/*61e0*/1152,1198,   0,1170,1166,1168,1160,1151,1162,1092,1182,1189,1183,1184,1128,1135,
/*61f0*/1129,   0,1107,1108,1109,   0,1110,1111,1112,   0,1101,1102,1103,   0,1104,1105,
/*6200*/1106,   0,1117,1118,1119,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6210*/   0,   0,   0,1180,1173,1169,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6220*/   0,   0,   0,1176,1171,1165,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6230*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6240*/1178,1175,   0,   0,1167,1164,1147,1148,1149,1150,1114,1115,1116,   0,   0,   0,
/*6250*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  -1,   0,   0,
/*6260*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1224,1225,
/*6270*/1222,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6280*/   0,   0,   0,   0,   0,   0,   0,   0,1212,   0,1213,1210,   0,   0,   0,   0,
/*6290*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*62a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1228,
/*62b0*/   0,   0,   0,   0,   0,   0,1206,1226,1211,   0,1229,1221,1214,1220,   0,   0,
/*62c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1227,   0,
/*62d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1215,1216,   0,   0,   0,   0,
/*62e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*62f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6300*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6310*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6320*/1208,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1207,   0,
/*6330*/   0,   0,   0,   0,1223,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6340*/   0,   0,   0,   0,1209,   0,   0,   0,   0,   0,   0,   0,   0,   0,  -2,   0,
/*6350*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1217,1218,
/*6360*/1219,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6370*/   0,  -1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6380*/   0,   0,1247,1248,1246,   0,   0,   0,1245,   0,   0,   0,   0,   0,   0,   0,
/*6390*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1233,   0,1237,1235,
/*63a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*63b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*63c0*/   0,   0,   0,1254,1253,1252,   0,   0,   0,   0,1230,1249,1234,1236,1255,1240,
/*63d0*/1238,1239,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*63e0*/   0,1241,1251,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*63f0*/1243,1242,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6400*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6410*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6420*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6430*/   0,   0,   0,   0,1231,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6440*/   0,   0,   0,   0,   0,   0,   0,   0,1244,   0,   0,   0,   0,   0,   0,   0,
/*6450*/   0,   0,   0,   0,   0,   0,   0,   0,1232,   0,   0,   0,   0,   0,   0,   0,
/*6460*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6470*/   0,   0,1272,1272,1273,1437,1424,1424,1425,  -1,1269,1269,1270,1437,1462,1462,
/*6480*/1463,1437,1275,1275,1276,1265,1503,1503,1504,1262,1524,1524,1525,1263,1300,1300,
/*6490*/1301,1264,1256,1256,1256,1256,1256,1256,1256,1256,1436,1436,1436,1436,1431,1431,
/*64a0*/1431,1431,   0,1419,  -2,  -3,  -4,  -5,1337,1429,  -6,  -7,  -8,  -9, -10, -11,
/*64b0*/ -12, -13, -14, -15,1511,1521,1410,1410, -16, -17,1522,1522,1522,1522, -18,1517,
/*64c0*/ -19, -20,1413,1413,1417,1303,1512,1501,1395,1465,1412,1412,1412,1412,1412,1412,
/*64d0*/1412,1412, -21, -22,   0,1411, -23, -24,1338, -25, -26, -27,   0,1523,   0,   0,
/*64e0*/   0,   0, -28, -29,1334,1427, -30,1380,1335,1428,1268, -31, -32, -33, -34, -35,
/*64f0*/ -36, -37,   0,   0,   0,   0,   0,   0,1437,   0,   0,   0,   0,   0,   0,   0,
/*6500*/1437, -38,   0,   0,   0,   0,   0,   0,1437,   0,   0,   0,   0,   0,   0,   0,
/*6510*/1437,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6520*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6530*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6540*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6550*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6560*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6570*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6580*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6590*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*65a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*65b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*65c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*65d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*65e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*65f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6600*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6610*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6620*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6630*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6640*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6650*/   0,   0,   0,   0,   0,   0,1266,1267,   0,   0,   0,   0,   0,   0,   0,   0,
/*6660*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6670*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6680*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6690*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*66a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*66b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*66c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*66d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*66e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*66f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6700*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6710*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6720*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6730*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6740*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6750*/   0,   0,   0,   0,   0,   0,   0,   0,1257,1258,   0,   0,   0,   0,   0,   0,
/*6760*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6770*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6780*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6790*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*67a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*67b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*67c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*67d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*67e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*67f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6800*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6810*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6820*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6830*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6840*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6850*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1440,1333,1440,1333,   0,   0,
/*6860*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6870*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6880*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6890*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*68a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*68b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*68c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*68d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*68e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*68f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6900*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6910*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6920*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6930*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6940*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6950*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1440,1333,1440,1333,   0,   0,
/*6960*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6970*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6980*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6990*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*69a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*69b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*69c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*69d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*69e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*69f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6a00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6a10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6a20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6a30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6a40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6a50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6a60*/   0,   0,1345,1346,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6a70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6a80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6a90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6aa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6ab0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6ac0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6ad0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6ae0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6af0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6b00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6b10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6b20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6b30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6b40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6b50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6b60*/   0,   0,   0,   0,1347,1348,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6b70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6b80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6b90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6ba0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6bb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6bc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6bd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6be0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6bf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6c00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6c10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6c20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6c30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6c40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6c50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6c60*/   0,   0,   0,   0,   0,   0,1349,1350,   0,   0,   0,   0,   0,   0,   0,   0,
/*6c70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6c80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6c90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6ca0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6cb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6cc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6cd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6ce0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6cf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6d00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6d10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6d20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6d30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6d40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6d50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6d60*/   0,   0,   0,   0,   0,   0,   0,   0,1351,1352,   0,   0,   0,   0,   0,   0,
/*6d70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6d80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6d90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6da0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6db0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6dc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6dd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6de0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6df0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6e00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6e10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6e20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6e30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6e40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6e50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6e60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1353,1354,   0,   0,   0,   0,
/*6e70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6e80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6e90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6ea0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6eb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6ec0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6ed0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6ee0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6ef0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6f00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6f10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6f20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6f30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6f40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6f50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6f60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1355,1356,   0,   0,
/*6f70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6f80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6f90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6fa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6fb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6fc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6fd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6fe0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*6ff0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7000*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7010*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7020*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7030*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7040*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7050*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7060*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1357,1358,
/*7070*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7080*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7090*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*70a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*70b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*70c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*70d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*70e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*70f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7100*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7110*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7120*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7130*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7140*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7150*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7160*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7170*/1359,1360,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7180*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7190*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*71a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*71b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*71c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*71d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*71e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*71f0*/   0,   0,1274,1426,1271,1464,1277,1505,1526,1302,1274,1426,1271,1464,1277,1505,
/*7200*/1526,1302,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7210*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7220*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7230*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7240*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7250*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7260*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7270*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7280*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1416,1389,
/*7290*/1416,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*72a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*72b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*72c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*72d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*72e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*72f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7300*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7310*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7320*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7330*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7340*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7350*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7360*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7370*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7380*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1416,   0,
/*7390*/1416,1430,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*73a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*73b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*73c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*73d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*73e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*73f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7400*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7410*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7420*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7430*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7440*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7450*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7460*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7470*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7480*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7490*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1292,1323,   0,   0,   0,   0,
/*74a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*74b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*74c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*74d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*74e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*74f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7500*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7510*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7520*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7530*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7540*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7550*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7560*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7570*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7580*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7590*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1444,1442,
/*75a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*75b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*75c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*75d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*75e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*75f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7600*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7610*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7620*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7630*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7640*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7650*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7660*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7670*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7680*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7690*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*76a0*/1461,1384,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*76b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*76c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*76d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*76e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*76f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7700*/   0,   0,1459,1457,1446,1448,1483,1485,   0,1487,   0,   0,   0,   0,   0,   0,
/*7710*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7720*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7730*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7740*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7750*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7760*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7770*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7780*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7790*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*77a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*77b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*77c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1453,1452,   0,   0,
/*77d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*77e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*77f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7800*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7810*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7820*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7830*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7840*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7850*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7860*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7870*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7880*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7890*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*78a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*78b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*78c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*78d0*/   0,   0,1328,1390,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*78e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*78f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7900*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7910*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7920*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7930*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7940*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7950*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7960*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7970*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7980*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7990*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*79a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*79b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*79c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*79d0*/   0,   0,   0,   0,1455,1454,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*79e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*79f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7a00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7a10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7a20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7a30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7a40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7a50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7a60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7a70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7a80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7a90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7aa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7ab0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7ac0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7ad0*/   0,   0,   0,   0,   0,   0,   0,   0,1339,1342,   0,   0,   0,   0,   0,   0,
/*7ae0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7af0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7b00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1458,1456,1445,1447,1482,1484,
/*7b10*/   0,1486,1458,1456,1445,1447,1482,1484,   0,1486,   0,   0,   0,   0,   0,   0,
/*7b20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7b30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7b40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7b50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7b60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7b70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7b80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7b90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7ba0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7bb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7bc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7bd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7be0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7bf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1404,1400,   0,   0,   0,   0,
/*7c00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7c10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7c20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7c30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7c40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7c50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7c60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7c70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7c80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7c90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7ca0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7cb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7cc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7cd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7ce0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7cf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1396,1377,   0,   0,
/*7d00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7d10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7d20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7d30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7d40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7d50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7d60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7d70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7d80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7d90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7da0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7db0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7dc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7dd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7de0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7df0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7e00*/   0,   0,1289,1381,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7e10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7e20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7e30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7e40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7e50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7e60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7e70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7e80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7e90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7ea0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7eb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7ec0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7ed0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7ee0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7ef0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7f00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1261,1259,   0,   0,
/*7f10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7f20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7f30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7f40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7f50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7f60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7f70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7f80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7f90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7fa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7fb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7fc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7fd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7fe0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*7ff0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8000*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1329,1299,
/*8010*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1513,   0,1423,1422,1421,1331,
/*8020*/1327,1330,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8030*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8040*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8050*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8060*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8070*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8080*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8090*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*80a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*80b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*80c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*80d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*80e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*80f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8100*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8110*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1295,1498,   0,   0,   0,   0,
/*8120*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8130*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8140*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8150*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8160*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8170*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8180*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8190*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*81a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*81b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*81c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*81d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*81e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*81f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8200*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8210*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1297,1500,   0,   0,
/*8220*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8230*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8240*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8250*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8260*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8270*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8280*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8290*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*82a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*82b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*82c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*82d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*82e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*82f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8300*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8310*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1296,1499,
/*8320*/   0,   0,1336,1326,1290,1291,1382,1383,1434,   0, -39, -40,1385,1409,   0,1507,
/*8330*/1298,1510,1340,1518,   0,1514,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8340*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1414,1415,1414,1415,   0,   0,
/*8350*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1519,1451,1449,1450,1508,1509,
/*8360*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1306,1307,1308,1309,1310,1311,
/*8370*/1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,   0,   0,   0,   0,   0,   0,
/*8380*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8390*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*83a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1361,1362,1363,1364,1365,1366,
/*83b0*/1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1466,1467,1468,1469,1470,1471,
/*83c0*/1472,1473,1474,1475,1476,1477,1478,1479,1480,1481,1438,1432,1322,1281,1494,1493,
/*83d0*/   0,   0,1439,1433,1460,1287,1496,1495,   0,1332,1304,1304,1388,1285,1386,1387,
/*83e0*/1420,1420,   0,   0, -41,1283,1278,1279,1418,1418,1520,1520,   0,   0,   0,   0,
/*83f0*/   0,1305,1280,1280,1280,1280,1280,1280,1280,1280,   0,   0,   0,   0,   0,   0,
/*8400*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8410*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8420*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1492,1502,1393,1408,1515,1516,
/*8430*/   0,   0,1488, -42,1391,1392,1497,   0,1394, -43,   0,   0,   0,   0,1282,1288,
/*8440*/1286,1284,   0,1489,   0,   0,   0,   0,   0,   0,   0,1490,   0,   0,   0,   0,
/*8450*/   0,   0,   0,1491,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8460*/   0,   0,   0,   0,   0,   0,   0,   0,   0,1341,   0,   0,   0,   0,   0,   0,
/*8470*/   0,   0,   0,   0,   0,   0,   0,   0,   0,1341,   0,   0,   0,   0,   0,   0,
/*8480*/   0,1506,  -1,1691,  -2,  -3,   0,   0,1643,   0,1604,   0,1659,1675,   0,   0,
/*8490*/1644,   0,1604,   0,1660,1676,   0,   0,1645,   0,1604,   0,1661,1677,   0,   0,
/*84a0*/1646,   0,1604,   0,1662,1678,   0,   0,1647,   0,1604,   0,1663,1679,   0,   0,
/*84b0*/1648,   0,1604,   0,1664,1680,   0,   0,1649,   0,1604,   0,1665,1681,   0,   0,
/*84c0*/1650,   0,1604,   0,1666,1682,   0,   0,1651,   0,1604,   0,1667,1683,   0,   0,
/*84d0*/1652,   0,1604,   0,1668,1684,   0,   0,1653,   0,1604,   0,1669,1685,   0,   0,
/*84e0*/1654,   0,1604,   0,1670,1686,   0,   0,1655,   0,1604,   0,1671,1687,   0,   0,
/*84f0*/1656,   0,1604,   0,1672,1688,   0,   0,1657,   0,1604,   0,1673,1689,   0,   0,
/*8500*/1658,   0,1604,   0,1674,1690,1620,1605,1609,1613,1626,1607,1611,1615,1622,   0,
/*8510*/1633,1634,1628,   0,1637,1638,1621,1606,1610,1614,1627,1608,1612,1616,1623,   0,
/*8520*/1635,1636,1629,   0,1639,1640,1624,1630,1625,1631,1632,1617,1618,1619,   0,   0,
/*8530*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  -4,  -5,   0,   0,1692,1693,
/*8540*/   0,   0,1641,1642,   0,   0,1570,1568,1569,1571,1586,1584,1585,1587,   0,1566,
/*8550*/1567,   0,   0,1600,   0,1602,1576,1574,1575,1577,1590,1588,1589,1591,   0,1572,
/*8560*/1573,   0,   0,1601,   0,1603,1578,1580,   0,1579,1592,1594,1595,1593,   0,   0,
/*8570*/   0,   0,   0,   0,   0,   0,1581,1583,   0,1582,1596,1598,1599,1597,   0,   0,
/*8580*/   0,   0,   0,   0,   0,   0,   0,1540,   0,   0,   0,1541,   0,   0,   0,1542,
/*8590*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*85a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1543,
/*85b0*/1544,1545,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*85c0*/   0,   0,   0,   0,   0,   0,   0,1552,1553,1554,   0,1555,1556,1557,   0,1558,
/*85d0*/1559,1560,   0,1561,1562,1563,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*85e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1564,
/*85f0*/   0,   0,   0,   0,1565,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8600*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8610*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8620*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8630*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8640*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1528,   0,1529,1530,1531,1532,
/*8650*/   0,1533,1534,1535,1536,   0,   0,1537,1538,1539,   0,   0,   0,   0,   0,   0,
/*8660*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8670*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8680*/   0,   0,   0,   0,   0,   0,   0,1546,1547,1548,   0,1549,1550,1551,  -1,  -2,
/*8690*/1746,1747,1704,1718,1712,1710,1695,1696,1793,1794,1699,1776,1821,1765,  -3,  -4,
/*86a0*/   0,   0,1705,1719,1713,1711,1723,1724,1753,1754,   0,   0,   0,   0,1750,1755,
/*86b0*/1760,1759,1751,1756,1761,1762,1777,1783,1785,1784,1781,1782,1786,1721,1757,1764,
/*86c0*/   0,   0,1758,1763,   0,1752,1778,1788,   0,   0,1779,1787,   0,1780,1790,   0,
/*86d0*/1798,1796,1791,   0,1799,1797,1749,1748,   0,   0,1803,1720,   0,1802,1767,1770,
/*86e0*/1768,1771,1735,   0,1741,1738,1772,1773,1728,1729,1732,1733,1726,1727,1694,1697,
/*86f0*/1800,1801,1698,1775,1820,1774,   0,   0,1792,1795,1722,1725,1743,1744,1806,1809,
/*8700*/1814,1817,1804,   0,1818,   0,1734,   0,1740,1737,1736,   0,1742,1739,1714,1706,
/*8710*/1717,1709,   0,   0,   0,   0,1807,1808,1815,1816,1805,   0,1819,   0,1715,1707,
/*8720*/1716,1708,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  -5,  -6,
/*8730*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8740*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8750*/   0,   0,  -7,  -8,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8760*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8770*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8780*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8790*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*87a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*87b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*87c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*87d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*87e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*87f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8800*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8810*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8820*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8830*/1766,1769,  -9,   0, -10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8840*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8850*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8860*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8870*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8880*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8890*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*88a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*88b0*/1730,1731,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*88c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*88d0*/   0,   0,1857,1853,1846,   0,1859,1854,1847,   0, -11,   0,   0,   0,   0,   0,
/*88e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*88f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8900*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8910*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8920*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8930*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8940*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8950*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8960*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8970*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8980*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*8990*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*89a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*89b0*/   0,   0,1823,1865,1860,1852,1864,1822,1858,1861,1862,1866,1844,1855,1863,1867,
/*89c0*/1845,1856,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*89d0*/   0,   0,1850,1848,   0,   0,1851,1849,   0,   0,   0,   0,   0,   0,   0,   0,
/*89e0*/   0,   0,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,
/*89f0*/1842,1843,1700,1702,1701,1703,   0,1811,1812,   0,   0,   0,1813,   0,1810,   0,
/*8a00*/   0,   0,   0,   0,   0,   0,1789,   0,   0,   0,   0,   0,   0,   0,1745,   0,
/*8a10*/   0,   0,   0,   0,   0,   0,1824,1826,1825,1827,};
