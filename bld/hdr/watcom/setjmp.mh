/*
 *  setjmp.h/csetjmp
 *
:include crwatqnx.sp
 */
#ifndef _SETJMP_H_INCLUDED
#define _SETJMP_H_INCLUDED

:include readonly.sp

:include owrtlink.sp

:include cpluspro.sp

#if defined(__PPC__)
 typedef unsigned int   jmp_buf[1];
#elif defined(__AXP__)
 typedef double         jmp_buf[24];
#elif defined(__MIPS__)
 typedef unsigned long  jmp_buf[26];
#else
 typedef unsigned int   jmp_buf[13];
#endif

_WCRTLINK extern int    _setjmp( jmp_buf __env );
_WCRTLINK extern void   longjmp( jmp_buf __env, int __val );

#if !defined(_SETJMPEX_H_INCLUDED_)
 #define setjmp(__env)  _setjmp(__env)
#endif

#if defined(_M_I86)
 #pragma aux _setjmp __modify [__8087];
#elif defined(__386__)
 #pragma aux _setjmp __parm __caller [__eax] __modify [__8087];
#endif

#pragma aux longjmp __aborts;

:segment QNX | LINUX
:include unixext.sp

:include pshpackl.sp

typedef struct {
    int         __flg;
    long        __msk;
    jmp_buf     __buf;
} sigjmp_buf[1];

:include poppack.sp

_WCRTLINK extern void __sigjmpsave( sigjmp_buf __env, int __msk );
_WCRTLINK extern void siglongjmp( sigjmp_buf __env, int __val );

#define sigsetjmp( __env, __msk ) ( __sigjmpsave( __env, __msk ), \
                                    _setjmp( (__env)[0].__buf ) )

#pragma aux siglongjmp __aborts;

:include extepi.sp

:endsegment
:include cplusepi.sp

#endif
