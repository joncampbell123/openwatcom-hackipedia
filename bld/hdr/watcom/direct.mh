/*
 *  direct.h    Defines the types and structures used by the directory routines
 *
:include crwat.sp
 */
#ifndef _DIRECT_H_INCLUDED
#define _DIRECT_H_INCLUDED

:include readonly.sp

:include owrtlink.sp

:segment DOS
:include lfndos.sp

:endsegment
#ifndef __TYPES_H_INCLUDED
 #include <sys/types.h>
#endif

:include cpluspro.sp

:include pshpackl.sp

:include wchar_t.sp

:include namemax.sp

#if defined( __RDOS__ )

struct dirent {
    int                d_handle;                  /* directory handle */
    char               d_match_mask[NAME_MAX+1];  /* mask for matching files */
    int                d_entry_nr;                /* current entry number (first = 0) */
    int                d_attr;                    /* file's attribute */
    unsigned long      d_msb_time;
    unsigned long      d_lsb_time;                /* timestamp, rdos formatted */
    long               d_size;                    /* file's size */
    char               d_name[NAME_MAX+1];        /* file's name */
};
typedef struct dirent   DIR;

#else
struct _wdirent {
    char                d_dta[21];          /* disk transfer area */
    char                d_attr;             /* file's attribute */
    unsigned short int  d_time;             /* file's modification time */
    unsigned short int  d_date;             /* file's modification date */
    long                d_size;             /* file's size */
    wchar_t             d_name[NAME_MAX+1]; /* file's name */
:segment DOS
    unsigned short      d_ino;              /* serial number (not used) */
:elsesegment
    ino_t               d_ino;              /* serial number (not used) */
:endsegment
    char                d_first;            /* flag for 1st time */
    wchar_t             *d_openpath;        /* path specified to _wopendir */
};

struct dirent {
    char                d_dta[21];          /* disk transfer area */
    char                d_attr;             /* file's attribute */
    unsigned short int  d_time;             /* file's time */
    unsigned short int  d_date;             /* file's date */
    long                d_size;             /* file's size */
    char                d_name[NAME_MAX+1]; /* file's name */
:segment DOS
    unsigned short      d_ino;              /* serial number (not used) */
:elsesegment
    ino_t               d_ino;              /* serial number (not used) */
:endsegment
    char                d_first;            /* flag for 1st time */
    char                *d_openpath;        /* path specified to opendir */
};
typedef struct dirent   DIR;

#endif

/* File attribute constants for d_attr field */

#define _A_NORMAL       0x00    /* Normal file - read/write permitted */
#define _A_RDONLY       0x01    /* Read-only file */
#define _A_HIDDEN       0x02    /* Hidden file */
#define _A_SYSTEM       0x04    /* System file */
#define _A_VOLID        0x08    /* Volume-ID entry */
#define _A_SUBDIR       0x10    /* Subdirectory */
#define _A_ARCH         0x20    /* Archive file */

:include dskfreet.sp

_WCRTLINK extern int              chdir( const char *__path );
_WCRTLINK extern int              _chdir( const char *__path );
_WCRTLINK extern int              _chdrive( int __drive );
_WCRTLINK extern int              closedir( struct dirent * );
_WCRTLINK extern char             *getcwd( char *__buf, size_t __size );
_WCRTLINK extern char             *_getcwd( char *__buf, size_t __size );
_WCRTLINK extern char             *_getdcwd( int __drive, char *__buffer,
                                            size_t __maxlen );
_WCRTLINK extern unsigned         _getdrive( void );
_WCRTLINK extern unsigned         _getdiskfree( unsigned __drive,
                                                struct _diskfree_t
                                                *__diskspace);
_WCRTLINK extern int              mkdir( const char *__path );
_WCRTLINK extern int              _mkdir( const char *__path );
_WCRTLINK extern struct dirent    *opendir( const char * );
_WCRTLINK extern struct dirent    *readdir( struct dirent * );
_WCRTLINK extern void             rewinddir( struct dirent * );
_WCRTLINK extern int              rmdir( const char *__path );
_WCRTLINK extern int              _rmdir( const char *__path );

_WCRTLINK extern int              _wchdir( const wchar_t *__path );
_WCRTLINK extern int              _wclosedir( struct _wdirent * );
_WCRTLINK extern wchar_t          *_wgetcwd( wchar_t *__buf, size_t __size );
_WCRTLINK extern wchar_t          *_wgetdcwd( int __drive, wchar_t *__buffer,
                                             size_t __maxlen );
_WCRTLINK extern int              _wmkdir( const wchar_t *__path );
_WCRTLINK extern struct _wdirent  *_wopendir( const wchar_t * );
_WCRTLINK extern struct _wdirent  *_wreaddir( struct _wdirent * );
_WCRTLINK extern void             _wrewinddir( struct _wdirent * );
_WCRTLINK extern int              _wrmdir( const wchar_t *__path );

:include poppack.sp

:include cplusepi.sp

#endif
