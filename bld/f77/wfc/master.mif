proj_name = wfc

!ifndef wfc_autodepends
wfc_autodepends = .AUTODEPEND
!endif

!include cproj.mif
!include deftarg.mif
!include defrule.mif

!include $(cg_dir)/mif/fe.mif
!include $(dwarf_dir)/dw/client.mif
!include wres.mif

!include ../files.mif

!ifeq release 0
wfc_trmem = 1
!endif

inc_dirs=-I"../h" -I"../../h" $(cg_inc_dirs) -I"$(dwarf_dir)/dw/h" -I"$(comp_cfg_dir)/h" -I"$(fe_misc_dir)/h" $(asminline_inc_dirs)

# define _USE_RESOURCES_ so that WASM error messages come from resources
extra_c_flags = -D_USE_RESOURCES_
extra_c_flags_i86 = -zp1
extra_c_flags_386 = -zp1
!ifeq cg_dll 1
extra_c_flags += -D_CGDLL
!endif

.h: ../h;../../h
.c: ../c;../../c;$(asminline_c);$(trmem_dir);

!ifeq host_cpu axp
extra_a_flags = -oc
.asm: ../../asmaxp
!endif

!ifeq wfc_trmem 1
extra_c_flags_fmemmgr = -DTRMEM -I$(trmem_dir)
fobjs += trmem.obj trmemcvr.obj
!endif

exename_i86 = wfc
exename_386 = wfc386
exename_axp = wfcaxp
exename_ppc = wfcppc
target_exe  = $(exename_$(target_cpu))

!ifdef mkstubs
wfc_cg_libs = $(cg_stub_libs);
!else ifeq release 1
wfc_cg_libs = $(cg_libs)
!else
wfc_cg_libs = $(cg_debug_libs)
!endif

extra_c_flags_trmem = -DTRMEM -of+
extra_c_flags_trmemcvr = -DTRMEM -of+

extra_l_flags = op map

# Need lots of stack for NT because code gen turns off safe recurse.
extra_l_flags_nt = op stack=1024k commit stack=32k

flibs = $(wres_lib) $(dwarf_dw_lib) $(asminline_lib)

$(target_exe).exe : $(asminline_deps) $(fobjs) errmsg.res $(cg_deps) $(flibs)
    %create $^&.lnk
    @for %i in ($(fobjs)) do @%append $^&.lnk file %i
    @for %i in ($(flibs)) do @%append $^&.lnk lib %i
    @%append $^&.lnk $(wfc_cg_libs)
!ifeq host_os osi
    @%append $^&.lnk name $^&.rex
    $(linker) $(lflags) @$^&.lnk
    $(w32bind) $^&.rex $@ $(os2ldr)
    @rm -f $^&.rex
!else    
    @%append $^&.lnk name $@
    $(linker) $(lflags) @$^&.lnk
!endif
    wstrip -q -a -r $@ . errmsg.res

option.obj : option.c optinfo.h

errmsg.res : ../c/errmsg.rc ../h/errmsgi.rc ../h/errmsg3.rc ../h/errcod.h ../h/errcodi.h ../h/errcod3.h
    $(rc_aui) -I"../../h" $(asminline_inc_dirs) -I"$(comp_cfg_dir)/h" -I"$(fe_misc_dir)/h" $[@ -fo=$^@

./mkopcod1.exe: $(wasm_dir)/mkopcod1.c $(wasm_dir)/mkopcode.h
    $(bld_cl) -I"$(wasm_dir)/h" $[@ $(wcl_util_opts)

asmops.gh: ./mkopcod1.exe $(wasm_dir)/inlnops.tok
    $[@ $(wasm_dir)/inlnops.tok $@

./mkopcode.exe: $(wasm_dir)/mkopcode.c $(wasm_dir)/mkopcode.h asmops.gh
    $(bld_cl) -I"$(wasm_dir)/h" $[@ $(wcl_util_opts)

asmopsd.gh: ./mkopcode.exe $(wasm_dir)/inlnops.tok
    $[@ $(wasm_dir)/inlnops.tok $@

msg.gh : $(wasm_dir)/h/asmshare.msg
    $(awk) -v base=MSG_RC_BASE -f $(misc_dir)/makemsg.awk $[@ > $^@
