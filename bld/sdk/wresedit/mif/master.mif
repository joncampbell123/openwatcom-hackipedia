proj_name = wresedit

!ifndef wresedit_autodepends
wresedit_autodepends = .AUTODEPEND
!endif

sys_dll = 1

suppress_bd = 1

.EXTENSIONS: .res .rc

memory_model_i86 = l

!include cproj.mif
!include deftarg.mif
!include defrule.mif

WINDOWS = 1
!include wres.mif

object = $(sys_object)
object +=   wmem.obj wctl3d.obj wgetfn.obj wlist.obj &
            winst.obj wsetedit.obj wmsg.obj wopts.obj wstrdup.obj &
            wselft.obj wrename.obj wwait.obj wmemf.obj wcopystr.obj &
            widn2str.obj wclip.obj wisedit.obj weditsym.obj &
            preproc.obj ppexpr.obj ppmacro.obj &
            toolbr.obj mstatwnd.obj ldstr.obj wwinhelp.obj jdlg.obj &
            inipath.obj about.obj

msgfiles = ../../h/w.msg ../h/$(name).msg $(sdk_dir)/misc/about.msg

extra_c_flags     = -DWIN_GUI -s

extra_c_flags_win = -zu-zw-zc
extra_c_flags_nt  = -DNOUSE3D

extra_c_flags_about = -DWRCTL3D

# main dll object
extra_c_flags_wmem= -fh
extra_c_flags_wctl3d= -fh
extra_c_flags_wgetfn= -fh
extra_c_flags_wlist= -fh
extra_c_flags_winst= -fh
extra_c_flags_wsetedit= -fh
extra_c_flags_wmsg= -fh
extra_c_flags_wopts= -fh
extra_c_flags_wstrdup= -fh
extra_c_flags_wselft= -fh
extra_c_flags_wrename= -fh
extra_c_flags_wwait= -fh
extra_c_flags_wmemf= -fh
extra_c_flags_wcopystr= -fh
extra_c_flags_widn2str= -fh
extra_c_flags_wclip= -fh
extra_c_flags_wisedit= -fh
extra_c_flags_weditsym= -bd

extra_c_flags_toolbr= -fh
extra_c_flags_mstatwnd= -fh
extra_c_flags_ldstr= -fh
extra_c_flags_wwinhelp= -fh
extra_c_flags_jdlg= -fh

# preprocessor objects
extra_c_flags_preproc = -zm
extra_c_flags_ppexpr = -zm
extra_c_flags_ppmacro = -zm

wr_lib = $(wr_dir)/$(host_os)$(host_cpu)/wr.lib

.c: ../c;../../c;$(misc_dir);$(cpp_dir)

inc_dirs = -I"../h" -I"../../h" -I$(misc_dir) -I"$(wr_dir)/h" -I"$(wres_dir)/h" -I$(cpp_dir)

extra_l_flags = op map,v,static
extra_l_flags_nt = op stack=16k,heap=16k commit heap=8k
extra_l_flags_win = library commdlg op stack=8k,rwr &
                    export WEP RESIDENT

# systems where version resources must be added to .DLL
version_res_nt_386 = version.res

xlibs = $(wres_lib) $(wr_lib)

$(name).lib: $(name).dll
        $(librarian) $(libflags) +$[@

$(name).dll: rcstr.gh $(object) $(name).res $(xlibs) $(version_res_$(host_os)_$(host_cpu))
        @%create tmp.lnk
        @%append tmp.lnk $(lflags)
        @for %i in ($(object)) do @%append tmp.lnk file %i
        @for %i in ($(xlibs)) do @%append tmp.lnk lib %i
        $(linker) name $^@ @tmp.lnk
!ifdef version_res_$(host_os)_$(host_cpu)
        $(rc) -k $(name).res $^@ -fr=$(version_res_$(host_os)_$(host_cpu))
!else
        $(rc) -k $(name).res $^@
!endif

$(name).res: ../h/$(name).rc .AUTODEPEND
        $(rc) $(rc_flags) -ad -zk0 $(inc_path) $[@ -fo=$^@

rcstr.gh: rcstrmsg.gh
        $(awk) -f $(misc_dir)/msgtoh.awk $[@ > $^@

rcstrmsg.gh: ../h/master.msg $(msgfiles)
        $(cc) $(preproc_opts) -I"$(sdk_dir)/misc" $(inc_path) -fo=$^@

./genverrc.exe : $(fe_misc_dir)/c/genverrc.c
        $(bld_cl) $[@ $(wcl_util_opts) -D_VERSION=$(bld_ver)

!ifndef patch_level
patch_level=0
!endif

version.res: ./genverrc.exe ../h/version.rc $(fe_misc_dir)/c/genverrc.c
        $[@ ../h/version.rc version.rc $$ $(name) $(patch_level)
        $(rc) $(rc_flags) $(inc_path) version.rc -fo=$^@

