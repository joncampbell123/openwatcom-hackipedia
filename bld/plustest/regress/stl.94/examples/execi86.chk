@@@ accum1.exe @@@
sum = 15
@@@ accum2.exe @@@
prod = 120
@@@ adjdiff0.exe @@@
1 2 4 8 16 
1 1 2 4 8 
@@@ adjdiff1.exe @@@
0 1 4 9 16 25 36 49 64 81 
0 1 3 5 7 9 11 13 15 17 
@@@ adjdiff2.exe @@@
1 2 3 4 5 6 7 8 9 10 
1 2 6 12 20 30 42 56 72 90 
@@@ adjfind0.exe @@@
No adjacent pairs
Found adjacent pair of: 1 at offset 3
@@@ adjfind1.exe @@@
No adjacent pairs
Found adjacent pair of: 7
@@@ adjfind2.exe @@@
Found two adjacent strings of equal length: Jack -and- Mike
@@@ advance.exe @@@
At Beginning: 0
At Beginning + 5: 5
@@@ alg1.exe @@@
min (4, 7) = 4
max ('a', 'z') = z
@@@ alg2.exe @@@
Count of 2s = 3
@@@ alg3.exe @@@
Count of 2s = 3
@@@ alg4.exe @@@
1962
1992
1999
2001
@@@ bcompos1.exe @@@
1 is odd and positive
@@@ bcompos2.exe @@@
1 is odd and positive
@@@ bind1st1.exe @@@
1
2
@@@ bind1st2.exe @@@
1
2
@@@ bind2nd1.exe @@@
1
2
4
@@@ bind2nd2.exe @@@
1
2
4
@@@ binsert1.exe @@@
laurie
jennifer
leisa
@@@ binsert2.exe @@@
laurie
jennifer
leisa
@@@ binsrch1.exe @@@
found 42
@@@ binsrch2.exe @@@
ff is in labels.
@@@ bnegate1.exe @@@
1
4
7
9
@@@ bnegate2.exe @@@
1
4
7
9
@@@ bvec1.exe @@@
000
101
@@@ copy1.exe @@@
 Src: A string to be copied.
Dest: A string to be copied.
@@@ copy2.exe @@@
0 1 2 3 4 5 6 7 8 9 
@@@ copy3.exe @@@
0 1 2 3 4 5 6 7 8 9 
@@@ copy4.exe @@@
0 1 2 3 4 5 6 7 8 9 
@@@ copyb.exe @@@
0 1 2 3 4 5 6 7 8 9 
@@@ copyb0.exe @@@
1 2 3 4 5 
1 2 3 4 5 
@@@ count0.exe @@@
Found 4 1's.
@@@ count1.exe @@@
Found 33 2's.
@@@ countif1.exe @@@
Found 33 odd elements.
@@@ deque1.exe @@@
d[0] = 1
d[1] = 4
d[2] = 9
d[3] = 16

d[0] = 4
d[1] = 9
d[2] = 25
@@@ divides.exe @@@
result = 2
@@@ eqlrnge0.exe @@@
2 can be inserted from before index 4 to before index 8
@@@ eqlrnge1.exe @@@
Within the collection:
	0 0 0 1 1 1 2 2 2 3 
2 can be inserted from before index 6 to before index 9
@@@ eqlrnge2.exe @@@
Within the collection:
	aabbccddggghhklllmqqqqssyyzz
q can be inserted from before index 18 to before index 22
@@@ equal0.exe @@@
numbers1 is not equal to numbers2
numbers3 is equal to numbers1
@@@ equal1.exe @@@
v1 is not equal to v2
v1 is equal to v2
@@@ equal2.exe @@@
v2[i] == v1[i] * v1[i]
@@@ equalto.exe @@@
1
0
1
0
@@@ error1.exe @@@
@@@ fill1.exe @@@
42 42 42 42 42 42 42 42 42 42 
@@@ filln1.exe @@@
42 42 42 42 42 42 42 42 42 42 
@@@ find0.exe @@@
Found 25 at offset 5
@@@ find1.exe @@@
Found 1972 at offset 3
@@@ findif0.exe @@@
Value 15 at offset 3 is odd
@@@ findif1.exe @@@
Value 9 at offset 2 is divisible by 3
@@@ finsert1.exe @@@
leisa
jennifer
laurie
@@@ finsert2.exe @@@
leisa
jennifer
laurie
@@@ foreach0.exe @@@
1 1 2 3 5 8 13 21 34 55 
@@@ foreach1.exe @@@
0 1 4 9 16 25 36 49 64 81 
@@@ func1.exe @@@
Number greater than 3 = 2
@@@ func2.exe @@@
5
4
1
@@@ func3.exe @@@
5
4
1
@@@ gener1.exe @@@
16838 5758 10113 17515 31051 5627 23010 7419 16212 4086 
@@@ gener2.exe @@@
1 1 2 3 5 8 13 21 34 55 
@@@ genern1.exe @@@
16838 5758 10113 17515 31051 5627 23010 7419 16212 4086 
@@@ genern2.exe @@@
1 1 2 3 5 8 13 21 34 55 
@@@ greateq.exe @@@
4
3
2
1
@@@ greater.exe @@@
4
3
2
1
@@@ incl0.exe @@@
numbers1 does not include numbers3
numbers2 includes numbers3
@@@ incl1.exe @@@
v1 does not include v2
v1 includes v2
@@@ incl2.exe @@@
v1 does not include v2
v1 includes v2
@@@ inplmrg1.exe @@@
1 10 42 3 16 32 
1 3 10 16 32 42 
@@@ inplmrg2.exe @@@
4 3 2 1 0 4 3 2 1 0 
4 4 3 3 2 2 1 1 0 0 
@@@ inrprod0.exe @@@
Inner product = 55
@@@ inrprod1.exe @@@
Inner product (sum of products) of:
	1 2 3 
	3 2 1 
is: 10
@@@ inrprod2.exe @@@
Inner product (product of sums):
	1 2 3 
	3 2 1 
is: 64
@@@ insert1.exe @@@
laurie
jennifer
amanda
saskia
carrie
leisa
@@@ insert2.exe @@@
laurie
jennifer
amanda
saskia
carrie
leisa
@@@ iota1.exe @@@
42 43 44 45 46 47 48 49 50 51 
@@@ istmit1.exe @@@
Please enter a string: read asdf
@@@ iter1.exe @@@
zippy
motorboy
@@@ iter2.exe @@@
zippy
motorboy
@@@ iter3.exe @@@
motorboy
zippy
@@@ iter4.exe @@@
last element is 3
first element is 1
@@@ iterswp0.exe @@@
3 1 2 0 4 5 
@@@ iterswp1.exe @@@
3 1 2 0 4 5 
@@@ less.exe @@@
1
2
3
4
@@@ lesseq.exe @@@
1
2
3
4
@@@ lexcmp1.exe @@@
shine is before shoe
@@@ lexcmp2.exe @@@
shoe is after shine
@@@ list1.exe @@@
1
4
9
16
36
@@@ list2.exe @@@
1
4
9
16
@@@ list3.exe @@@
original: xlxtss
reversed: sstxlx
removed: sstl
uniqued: stl
sorted: lst
@@@ list4.exe @@@
123467
@@@ logicand.exe @@@
0
1
0
0
@@@ logicnot.exe @@@
count = 2
@@@ logicor.exe @@@
1
1
0
1
@@@ lwrbnd1.exe @@@
0 0 0 0 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 
3 can be inserted at index: 12
@@@ lwrbnd2.exe @@@
d can be inserted at index: 4
@@@ map1.exe @@@
m['x'] = 20
m['x'] = 10
m['z'] = 0
m.count ('z') = 1
First insertion successful
Existing pair c -> 100
@@@ max1.exe @@@
100
@@@ max2.exe @@@
shoe
@@@ maxelem1.exe @@@
56
@@@ maxelem2.exe @@@
Todd
@@@ merge0.exe @@@
-5 1 6 13 25 26 36 46 99 101 
@@@ merge1.exe @@@
0 1 2 3 4 
3 4 5 6 7 
0 1 2 3 3 4 4 5 6 7 
@@@ merge2.exe @@@
10 9 8 7 6 
7 6 5 4 3 
10 9 8 7 7 6 6 5 4 3 
@@@ min1.exe @@@
42
@@@ min2.exe @@@
shine
@@@ minelem1.exe @@@
-242
@@@ minelem2.exe @@@
Brett
@@@ minus.exe @@@
0
1
-1
5
@@@ mismtch0.exe @@@
n1 and n2 are the same
Mismatch at offset: 3
@@@ mismtch1.exe @@@
v1 and v2 are the same
mismatch at index: 5
@@@ mismtch2.exe @@@
n1 and n2 are the same
mismatch at index: 2
@@@ mkheap0.exe @@@
19
13
11
10
5
4
@@@ mkheap1.exe @@@
4
5
10
11
13
19
@@@ mmap1.exe @@@
count ('X') = 0
count ('X') = 1
count ('X') = 2
X -> 10
X -> 20
Y -> 32
Erased 2 items
@@@ mmap2.exe @@@
lower bound:
3 -> c
upper bound:
6 -> f
@@@ modulus.exe @@@
2
0
10
2
@@@ mset1.exe @@@
count (42) = 0
count (42) = 1
count (42) = 2
40 Not found
Found 42
Erased 2 instances
@@@ mset2.exe @@@
alf
bob
chas
chas
dave
ed
@@@ mset3.exe @@@
lower bound = 3
upper bound = 6
@@@ mset4.exe @@@
lower bound = 3
upper bound = 6
@@@ mset5.exe @@@
Using less_than: 
1
3
6
9
Using greater_than: 
9
6
3
1
@@@ negate.exe @@@
-1
-2
-3
@@@ nequal.exe @@@
0
1
0
1
@@@ nextprm0.exe @@@
0 2 1 
@@@ nextprm1.exe @@@
0 1 2 
0 2 1 
1 0 2 
1 2 0 
2 0 1 
2 1 0 
0 1 2 
0 2 1 
1 0 2 
1 2 0 
@@@ nextprm2.exe @@@
ABC
ACB
BAC
BCA
CAB
CBA
ABC
ACB
BAC
BCA
@@@ nthelem0.exe @@@
1 0 2 3 4 5 
@@@ nthelem1.exe @@@
8 8 3 5 1 7 0 9 2 6 
0 2 3 1 5 6 7 9 8 8 
@@@ nthelem2.exe @@@
8 8 3 5 1 7 0 9 2 6 
8 8 9 7 6 5 3 0 2 1 
@@@ ostmit.exe @@@
hello
1524
@@@ pair0.exe @@@
p.first = 1, p.second = 10
@@@ pair1.exe @@@
p.first = 1, p.second = 10
@@@ pair2.exe @@@
p.first = 1
p.second = 10
@@@ parsrt0.exe @@@
1 2 3 5 4 6 
@@@ parsrt1.exe @@@
8 8 3 5 1 7 0 9 2 6 
0 1 2 3 5 8 8 9 7 6 
@@@ parsrt2.exe @@@
aa ff dd ee cc bb 
aa dd ff ee cc bb 
@@@ parsrtc0.exe @@@
1 2 3 
@@@ parsrtc1.exe @@@
8 8 3 5 1 7 0 9 2 6 
0 1 2 3 5 
@@@ parsrtc2.exe @@@
aa ff dd ee cc bb 
aa ff dd ee cc bb 
@@@ partsrt0.exe @@@
1 2 3 5 4 6 
@@@ partsum0.exe @@@
1 3 6 10 15 21 
@@@ partsum1.exe @@@
0 1 2 3 4 5 6 7 8 9 
0 1 3 6 10 15 21 28 36 45 
@@@ partsum2.exe @@@
1 2 3 4 5 
1 2 6 24 120 
@@@ pheap1.exe @@@
1 4 7 20 
@@@ pheap2.exe @@@
20 7 4 1 
@@@ plus.exe @@@
total = 77
@@@ pqueue1.exe @@@
101
69
42
@@@ pqueue2.exe @@@
1pe
3o1
86LC5YEChyf3Y
86f2ZdZHj3lrY
86mNoM8ZngBzc
86sVI5ronsYGc
86sVI5ronsYGc
86vy3e2ODUryw
ape
c1t
cat
dog
@@@ prevprm0.exe @@@
2 1 0 
@@@ prevprm1.exe @@@
0 1 2 
2 1 0 
2 0 1 
1 2 0 
1 0 2 
0 2 1 
0 1 2 
2 1 0 
2 0 1 
1 2 0 
@@@ prevprm2.exe @@@
0 1 2 
0 2 1 
1 0 2 
1 2 0 
2 0 1 
2 1 0 
0 1 2 
0 2 1 
1 0 2 
1 2 0 
@@@ ptition0.exe @@@
6 1 3 10 12 20 
@@@ ptition1.exe @@@
18 18 13 15 11 7 10 19 12 6 
6 10 7 15 11 13 18 19 12 18 
@@@ ptrbinf1.exe @@@
8
7
8
13
@@@ ptrbinf2.exe @@@
8
7
8
13
@@@ ptrunf1.exe @@@
2 is even
@@@ ptrunf2.exe @@@
2 is even
@@@ queue1.exe @@@
42
101
69
@@@ remcopy1.exe @@@
1 3 1 3 0 0 
@@@ remcpif1.exe @@@
2 2 0 0 0 0 
@@@ remif1.exe @@@
0 0 2 2 2 2 
@@@ remove1.exe @@@
2 3 2 3 2 3 
@@@ repcpif1.exe @@@
0 1 2 3 4 0 1 2 3 4 
0 1 2 3 4 0 1 2 3 4 
0 42 2 42 4 0 42 2 42 4 
@@@ replace0.exe @@@
0 1 42 0 1 42 
@@@ replace1.exe @@@
0 1 2 3 4 0 1 2 3 4 
0 1 42 3 4 0 1 42 3 4 
@@@ replcpy1.exe @@@
0 1 42 0 1 42 
@@@ replif1.exe @@@
0 1 2 3 4 0 1 2 3 4 
0 42 2 42 4 0 42 2 42 4 
@@@ revbit2.exe @@@
3
2
5
1
@@@ revcopy1.exe @@@
0 1 2 3 4 5 
5 4 3 2 1 0 
@@@ reverse1.exe @@@
5 4 3 2 1 0 
@@@ reviter2.exe @@@
3
2
5
1
@@@ rndshuf0.exe @@@
4 1 6 3 2 5 
@@@ rndshuf1.exe @@@
0 1 2 3 4 5 6 7 8 9 
6 8 9 2 1 4 3 7 0 5 
6 5 8 2 4 1 0 3 7 9 
4 2 8 9 6 5 1 0 7 3 
@@@ rndshuf2.exe @@@
0 1 2 3 4 5 6 7 8 9 
4 5 9 8 1 3 6 0 2 7 
3 9 4 7 6 5 2 0 1 8 
2 8 7 1 3 5 4 0 6 9 
@@@ rotate0.exe @@@
3 4 5 0 1 2 
@@@ rotate1.exe @@@
0 1 2 3 4 5 6 7 8 9 
0 1 2 3 4 5 6 7 8 9 
1 2 3 4 5 6 7 8 9 0 
3 4 5 6 7 8 9 0 1 2 
6 7 8 9 0 1 2 3 4 5 
0 1 2 3 4 5 6 7 8 9 
5 6 7 8 9 0 1 2 3 4 
1 2 3 4 5 6 7 8 9 0 
8 9 0 1 2 3 4 5 6 7 
6 7 8 9 0 1 2 3 4 5 
5 6 7 8 9 0 1 2 3 4 

@@@ rotcopy0.exe @@@
3 4 5 0 1 2 
@@@ rotcopy1.exe @@@
0 1 2 3 4 5 6 7 8 9 
0 1 2 3 4 5 6 7 8 9 
1 2 3 4 5 6 7 8 9 0 
2 3 4 5 6 7 8 9 0 1 
3 4 5 6 7 8 9 0 1 2 
4 5 6 7 8 9 0 1 2 3 
5 6 7 8 9 0 1 2 3 4 
6 7 8 9 0 1 2 3 4 5 
7 8 9 0 1 2 3 4 5 6 
8 9 0 1 2 3 4 5 6 7 
9 0 1 2 3 4 5 6 7 8 

@@@ search0.exe @@@
v3 not contained in v1
Found v3 in v2 at offset: 3
@@@ search1.exe @@@
v1: 0 1 2 3 4 5 6 7 8 9 
v2: 50 51 52 
v2 not contained in v1
v1: 0 1 2 3 4 5 6 7 8 9 
v2: 4 5 6 
Found v2 in v1 at offset: 4
@@@ search2.exe @@@
grades: A B C D F 
letters:Q E D 
letters not found in grades
grades: A B C D F 
letters:B C D 
letters found in grades at offset: 1
@@@ set1.exe @@@
count (42) = 0
count (42) = 1
count (42) = 1
1 elements erased
@@@ set2.exe @@@
Inserted new element 42
Existing element = 42
@@@ setdiff0.exe @@@
18 0 0 0 
10 17 23 0 
@@@ setdiff1.exe @@@
v1: 0 1 2 3 4 5 6 7 8 9 
v2: 7 8 9 10 11 12 13 14 15 16 
0 1 2 3 4 5 6 
@@@ setdiff2.exe @@@
word1: A B C D E F G H I J K L M N O 
word2: L M N O P Q R S T U V W X Y Z 
A B C D E F G H I J K 
@@@ setintr0.exe @@@
13 23 0 0 
@@@ setintr1.exe @@@
v1: 0 1 2 3 4 5 6 7 8 9 
v2: 7 8 9 10 11 12 13 14 15 16 
7 8 9 
@@@ setintr2.exe @@@
word1: A B C D E F G H I J K L M N O 
word2: L M N O P Q R S T U V W X Y Z 
L M N O 
@@@ setsymd0.exe @@@
10 17 18 0 
@@@ setsymd1.exe @@@
v1: 0 1 2 3 4 5 6 7 8 9 
v2: 7 8 9 10 11 12 13 14 15 16 
0 1 2 3 4 5 6 10 11 12 13 14 15 16 
@@@ setsymd2.exe @@@
word1: A B C D E F G H I J K L M N O 
word2: L M N O P Q R S T U V W X Y Z 
A B C D E F G H I J K P Q R S T U V W X Y Z 
@@@ setunon0.exe @@@
10 13 17 18 23 0 0 
@@@ setunon1.exe @@@
v1: 0 1 2 3 4 5 6 7 8 9 
v2: 7 8 9 10 11 12 13 14 15 16 
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
@@@ setunon2.exe @@@
word1: A B C D E F G H I J K L M N O 
word2: L M N O P Q R S T U V W X Y Z 
A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 
@@@ sort1.exe @@@
-10 1 11 19 42 50 
@@@ sort2.exe @@@
before: 1 50 -10 11 42 19 
after: 50 42 19 11 1 -10 
@@@ stack1.exe @@@
69
101
42
@@@ stack2.exe @@@
69
101
42
@@@ stblptn0.exe @@@
5 6 -2 10 11 20 
@@@ stblptn1.exe @@@
18 18 13 15 11 7 10 19 12 6 
7 10 6 18 18 13 15 11 19 12 
@@@ stblsrt1.exe @@@
-10 1 11 19 42 50 
@@@ stblsrt2.exe @@@
aa bb cc dd ll qq 
@@@ swap1.exe @@@
a = 42 b = 19
a = 19 b = 42
@@@ swprnge1.exe @@@
World Hello
Hello World
@@@ tech01.exe @@@
tech01.cpp
@@@ times.exe @@@
total = 70
@@@ trnsfrm1.exe @@@
5 1 0 -1 -6 -11 
@@@ trnsfrm2.exe @@@
Hello World!
@@@ ucompos1.exe @@@
1
2
4
@@@ ucompos2.exe @@@
1
2
4
@@@ unegate1.exe @@@
2
@@@ unegate2.exe @@@
2
@@@ uniqcpy1.exe @@@
0 1 2 3 4 0 0 0 
@@@ uniqcpy2.exe @@@
QQWWEERTTYY
QQWWEERTTYY
QWERTY
@@@ unique1.exe @@@
0 1 2 3 4 2 3 4 
@@@ unique2.exe @@@
QQWWEERTTYY
QWERTYRTTYY
@@@ uprbnd1.exe @@@
0 0 0 0 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 
3 can be inserted at index: 16
@@@ uprbnd2.exe @@@
d can be inserted at index: 4
@@@ vec1.exe @@@
empty = 1
size = 0
max_size = 32767
size = 1
v1[0] = 42
@@@ vec2.exe @@@
v1 = 32.1 40.5 
v2 = 3.56 
v1 = 3.56 
v2 = 32.1 40.5 
v2 = 3.56 
@@@ vec3.exe @@@
v1 = hi
v2 = ho
(v1 == v2) = 0
(v1 < v2) = 1
@@@ vec4.exe @@@
front = 1
back = 16, size = 4
back = 25, size = 5
back = 16, size = 4
@@@ vec5.exe @@@
v[0] = 1
v[1] = 4
v[2] = 9
v[3] = 16
@@@ vec6.exe @@@
v[0] = 1
v[1] = 4
v[2] = 9
v[3] = 16
v[4] = 25
v[5] = 36

v[0] = 4
v[1] = 9
v[2] = 16
v[3] = 25
v[4] = 36

v[0] = 4
v[1] = 9
v[2] = 16
v[3] = 25

v[0] = 4
v[1] = 25

@@@ vec7.exe @@@
v[0] = 0
v[1] = 1
v[2] = 4
v[3] = 25
v[4] = 36

v[0] = 0
v[1] = 1
v[2] = 4
v[3] = 9
v[4] = 16
v[5] = 25
v[6] = 36

@@@ vec8.exe @@@
capacity = 0
capacity = 2048
capacity = 5000
