#include <stddef.h>
/* file created by DISBUILD.C */

const unsigned char X86MaxInsName = 11;


const unsigned char DisStringTable[] = {
/*0000*/ 128,136,139,'p','r','e','f','e','t',130,'c','h','n','t','a',138,
/*0010*/ 'p','r','e','f','e','t','c','h','t','0',138,'p','r','e','f','e',
/*0020*/ 't','c','h','t','1',138,'p','r','e','f','e','t','c','h','t','2',
/*0030*/ 138,'m','a','s','k',131,132,134,'m','o','v','d','q','u',138,'p',
/*0040*/ 'u','n','p','c','k','h','q','d','q',138,'p','u','n','p','c','k',
/*0050*/ 'l','q','d','q',131,135,137,'c','m','p',132,'x','c','h','g','8',
/*0060*/ 130,'b',137,'p','r','e','f','e','t','c','h','w',137,'c','v','t',
/*0070*/ 't','p','s','2','p','i',137,'p','u','n','p','c','k','h','b','w',
/*0080*/ 137,'p','u','n','p','c','k','h','d','q',137,'p','u','n','p','c',
/*0090*/ 'k','h','w','d',137,'p','u','n','p','c','k','l','b','w',137,'p',
/*00a0*/ 'u','n','p','c','k','l','d','q',137,'p','u','n','p','c','k','l',
/*00b0*/ 'w','d',137,'c','v','t','t','p','d','2','d','q',137,'c','v','t',
/*00c0*/ 't','p','d','2','p','i',137,'c','v','t','t','s','d','2',130,'s',
/*00d0*/ 'i',137,'c','v','t','t','p','s','2','d','q',137,'c','v','t','t',
/*00e0*/ 130,'s','s','2','s','i',136,'s','y','s',133,'e','n','t','e','r',
/*00f0*/ 135,136,'f','c','m','o','v','n','b','e',135,136,'f','n',130,'s',
/*0100*/ 't','e','n','v','w',136,'f','n','s','t','e','n','v','d',133,136,
/*0110*/ 'p','f','r','c','p','i','t','1',136,'p','f','r','c','p','i','t',
/*0120*/ '2',136,'p','f','r','s','q','i','t','1',136,'c','v','t','d','q',
/*0130*/ '2','p','s',136,'c','v','t','p','i','2','p','s',136,'c','v','t',
/*0140*/ 'p','s','2','p','d',136,'c','v','t','p','s','2','p','i',136,'m',
/*0150*/ 'a','s','k',132,'m','o','v','q',136,'m','o','v','m','s','k','p',
/*0160*/ 130,'s',136,'p','a','c','k','s','s','d','w',136,'p','a','c','k',
/*0170*/ 's','s','w','b',136,'p','a','c','k','u','s','w','b',136,'p','m',
/*0180*/ 'o','v','m','s','k','b',136,'u','n','p','c','k','h','p','s',136,
/*0190*/ 'u','n','p','c','k','l','p','s',131,136,'a','d',130,'d',131,133,
/*01a0*/ 's','u','b','p','d',136,'c','v','t','p','d','2','p','i',136,'c',
/*01b0*/ 'v','t','p','d','2','p','s',136,'c','v','t','p','i','2','p','d',
/*01c0*/ 136,'c','v','t','p','s','2','d','q',136,'m','o','v','m','s','k',
/*01d0*/ 'p','d',136,'u','n','p','c','k','h','p','d',136,'u','n','p','c',
/*01e0*/ 'k','l','p','d',136,'a','d','d',133,'s','u','b','p','s',136,'c',
/*01f0*/ 'v','t','p','d','2','d','q',136,'c','v','t','s','d','2','s','i',
/*0200*/ 136,'c','v','t','s','d','2','s','s',136,'c','v','t','s','i','2',
/*0210*/ 's','d',136,'c','v','t','d','q','2','p','d',136,'c','v','t','s',
/*0220*/ 'i','2','s','s',136,'c','v','t','s','s','2','s','d',136,'c','v',
/*0230*/ 't','s','s','2','s','i',132,136,'m','o','v','s','h','d','u','p',
/*0240*/ 136,'m','o','v','s','l','d','u','p',132,134,135,'l','o','o','p',
/*0250*/ 'n','z','w',135,'l','o','o','p','n','z','d',135,'s','y','s','e',
/*0260*/ 'x','i','t',135,'f',131,'d','e',130,'c','s','t','p',135,'f',130,
/*0270*/ 131,'i','n','c','s','t','p',131,134,135,'f','l','d','e','n','v',
/*0280*/ 'w',135,'f','l','d','e','n','v','d',135,'f','r','n',130,'d',131,
/*0290*/ 'i','n','t',134,135,'f','r','s','t',130,'o','r','w',135,'f','r',
/*02a0*/ 's','t','o','r','d',134,135,'f','n','s','a','v','e','w',135,'f',
/*02b0*/ 'n','s','a','v','e','d',135,'f',134,'c','m','o','v','n','e',134,
/*02c0*/ 135,'f',133,134,'c','m','o','v','b','e',135,'f','c','m','o','v',
/*02d0*/ 'n','u',130,132,135,'f','s','i','n','c','o','s',131,134,135,'f',
/*02e0*/ 's','t','e','n','v','w',135,'f','s','t','e','n','v','d',133,134,
/*02f0*/ 135,'f','u','c','o','m','p','p',135,'f','x','r','s','t','o','r',
/*0300*/ 135,'f','x','t','r','a','c','t',133,135,'f','y','l','2','x','p',
/*0310*/ '1',134,135,'f','u','c','o','m','i','p',135,'p','a','v','g','u',
/*0320*/ 's','b',135,'p','f','c','m','p','e','q',135,'p','f','c','m','p',
/*0330*/ 'g','e',135,'p','f','c','m','p','g','t',135,'p','f','p','n','a',
/*0340*/ 'c','c',135,'p','f','r','s','q','r','t',135,'p',131,'m','u','l',
/*0350*/ 'h','r','w',130,135,'c','l','f','l','u',131,132,'s','h',135,'l',
/*0360*/ 'd','m','x','c','s','r',135,'m','o','n','i','t','o','r',135,'m',
/*0370*/ 'o','v','l','h','p','s',135,'m','o','v','h','l','p','s',135,'m',
/*0380*/ 'o','v','n','t','p','s',135,'p','a','d','d','u','s','b',135,'p',
/*0390*/ 'a','d','d','u','s','w',135,'p','c','m','p','e','q','b',135,'p',
/*03a0*/ 'c','m','p','e','q','d',135,'p','c','m','p','e','q','w',135,'p',
/*03b0*/ 'c','m','p','g','t','b',135,'p','c','m','p','g','t','d',135,'p',
/*03c0*/ 'c','m','p','g','t','w',135,'p','m','a','d','d','w','d',135,'p',
/*03d0*/ 'm','u','l','h','u','w',135,'p','m','u','l','u','d','q',135,'p',
/*03e0*/ 's','u','b','u','s','b',135,'p','s','u','b','u','s','w',135,'r',
/*03f0*/ 134,'s','q','r','t','p','s',135,'s','t','m','x','c','s','r',135,
/*0400*/ 'u',134,'c','o','m','i','s','s',135,'m','o','v','n','t','d','q',
/*0410*/ 135,'m','o','v','n','t','p','d',135,'u',134,'c','o','m','i','s',
/*0420*/ 'd',135,'m','o','v','d','d','u','p',135,'m','o','v','d','q','2',
/*0430*/ 'q',135,'p','s','h','u','f','l','w',135,'m','o','v','q','2','d',
/*0440*/ 'q',135,'p','s','h','u','f','h','w',135,'r',134,'s','q','r','t',
/*0450*/ 's','s',134,'c','m','o','v','n','o',133,134,'c','m','o','v','a',
/*0460*/ 'e',134,'c','m','o','v','n','s',133,134,'c','m','o','v','p','o',
/*0470*/ 133,134,'c','m','o','v','g','e',133,134,'c','m','o','v','l','e',
/*0480*/ 134,'i','n','v','l','p','g',133,134,'l','o','o','p','z','w',134,
/*0490*/ 'l','o','o','p','z','d',132,133,134,'p','u','s','h','a','d',133,
/*04a0*/ 134,'p','u','s','h','f','d',134,'w','b',132,'i','n','v','d',134,
/*04b0*/ 'f','n','c','l','e','x',133,134,'f','i','c','o','m','p',132,133,
/*04c0*/ 134,'f','c','o','m','p','p',133,134,'f',132,'i',131,'d','i','v',
/*04d0*/ 'r',132,133,134,'f','d','i','v','r','p',134,'f','n','d','i','s',
/*04e0*/ 'i',134,'f','n','i','n','i','t',134,'f',132,'s','e','t','p','m',
/*04f0*/ 132,134,'f','i','s','t','t','p',133,134,'f','i','s','u','b','r',
/*0500*/ 132,133,134,'f','s','u','b','r','p',134,'f','l',130,'d','l','2',
/*0510*/ 't',134,'f','l','d','l','2','e',134,'f','l','d','l','g','2',134,
/*0520*/ 'f','l','d','l','n','2',134,'f','p','a','t','a','n',133,134,'f',
/*0530*/ 'p','r','e','m','1',133,134,'f','s','a','v','e','w',134,'f','s',
/*0540*/ 'a','v','e','d',134,'f',133,'c','m','o','v','e',134,'f','c','m',
/*0550*/ 'o','v','u',134,'f','s','c',130,'a','l','e',134,'f','n',131,'s',
/*0560*/ 't','c','w',134,'f','n','s','t','s','w',134,'f','x','s','a','v',
/*0570*/ 'e',133,134,'f','c','o','m','i','p',134,'p','f','n','a','c','c',
/*0580*/ 133,134,'p','f','s','u','b','r',134,'p','s','w','a','p','d',131,
/*0590*/ 134,'a','n','d','n','p','s',134,'l','f','e','n','c','e',134,'m',
/*05a0*/ 'f','e','n','c','e',134,'m','o','v','a','p','s',134,'m','o','v',
/*05b0*/ 'h','p','s',134,'m','o','v','l','p','s',134,'m','o','v','n','t',
/*05c0*/ 'i',134,'m','o','v','n','t','q',134,'m','o','v','u','p','s',134,
/*05d0*/ 'p','a','d','d','s','b',134,'p','a','d','d','s','w',134,'p','e',
/*05e0*/ 'x','t','r','w',134,'p',131,'i','n','s','r','w',134,'p','m',130,
/*05f0*/ 'a','x','s','w',134,'p','m','a','x','u','b',134,'p','m','i','n',
/*0600*/ 's','w',134,'p','m','i','n','u','b',134,'p','m','u','l','h','w',
/*0610*/ 134,'p','m','u','l','l','w',134,'p','s','a','d','b','w',134,'p',
/*0620*/ 's','h','u','f','w',134,'p','s','u','b','s','b',134,'p','s','u',
/*0630*/ 'b','s','w',134,'s','f','e','n','c',130,'e',134,'s','h','u','f',
/*0640*/ 'p','s',134,'a','n','d','n','p',130,'d',134,'h',133,'a','d','d',
/*0650*/ 'p','d',134,'h','s','u','b','p','d',134,'m','o','v','a','p','d',
/*0660*/ 134,'m','o','v','d','q','a',134,'m','o','v','h','p','d',134,'m',
/*0670*/ 'o','v','l','p','d',134,'m','o','v','u','p','d',134,'p','s','h',
/*0680*/ 'u','f','d',133,134,'p','s','l','l','d','q',133,134,'p','s','r',
/*0690*/ 'l','d','q',134,'s','h','u','f','p','d',134,'s','q','r','t','p',
/*06a0*/ 'd',134,'h',133,'a','d','d','p','s',134,'h','s','u','b','p','s',
/*06b0*/ 134,'s','q','r','t','s','d',131,133,'r','e','p','n','e',133,'f',
/*06c0*/ 'w','a','i','t',133,'b','o','u','n','d',133,'b','s','w','a','p',
/*06d0*/ 133,'c','m','o','v','o',133,'c','m','o','v','s',133,'c','p','u',
/*06e0*/ 'i','d',132,133,'i',131,'r','e','t','d',130,133,'j',131,'e',130,
/*06f0*/ 'c','x','z',131,133,'l','e','a','v','e',133,'l','o','o','p','w',
/*0700*/ 133,'l','o','o','p','d',133,'m','o','v','s','x',133,'m','o','v',
/*0710*/ 'z','x',133,'p','u','s','h','w',133,'p','u','s','h','d',131,132,
/*0720*/ 133,'p','o','p','a','d',132,133,'p','o','p','f','d',133,'r','d',
/*0730*/ 'm','s','r',133,'r','d','p','m','c',133,'r','d','t','s','c',133,
/*0740*/ 's','e','t','n','o',132,133,'s','e','t','a','e',133,'s','e','t',
/*0750*/ 'n','e',132,133,'s','e','t','b','e',133,'s','e','t','n','s',133,
/*0760*/ 's','e','t','p','o',132,133,'s','e','t','g','e',132,133,'s','e',
/*0770*/ 't','l','e',133,'w','r','m','s','r',133,'f','2','x','m','1',133,
/*0780*/ 'f','i','a','d','d',132,133,'f','a','d','d','p',133,'f','b','s',
/*0790*/ 't','p',133,'f','c','l','e','x',133,'f','d','i','v','p',133,'f',
/*07a0*/ 'd','i','s','i',133,'f','n','e','n','i',133,'f','f','r','e','e',
/*07b0*/ 133,'f','i','n','i','t',133,'f',132,'i','m','u','l',132,133,'f',
/*07c0*/ 'm','u','l','p',133,'f','i','s','t','p',133,'f','s','u','b','p',
/*07d0*/ 133,'f','l','d','c','w',133,'f','l','d','p','i',133,'f','p','t',
/*07e0*/ 'a','n',133,'f','s','q','r','t',133,'f','s','t','c','w',133,'f',
/*07f0*/ 's','t','s','w',133,'f',132,'e','m','m','s',133,'3','d','n','o',
/*0800*/ 'w',133,'p','f','2','i','d',133,'p','f','2','i','w',133,'p','f',
/*0810*/ 'a','c','c',133,'p','f','a','d','d',133,'p','f','m','a','x',133,
/*0820*/ 'p','f','m','i','n',133,'p','f','m','u','l',133,'p','i','2','f',
/*0830*/ 'd',133,'p','i','2','f','w',133,'a','n','d','p','s',133,'c','m',
/*0840*/ 'p','p','s',133,'d','i','v','p','s',133,'m','a','x','p','s',133,
/*0850*/ 'm','i','n','p','s',133,'m','u','l','p','s',133,'m','w','a','i',
/*0860*/ 't',133,'p','a','d','d','b',133,'p','a','d','d','d',133,'p','a',
/*0870*/ 'd','d','q',133,'p','a','d','d','w',132,133,'p','a','n','d','n',
/*0880*/ 133,'p','a','v','g','b',133,'p','a','v','g','w',133,'p','s','l',
/*0890*/ 'l','q',133,'p','s','l','l','w',133,'p','s','r','a','d',133,'p',
/*08a0*/ 's','r','a','w',133,'p','s','r','l','q',133,'p','s','r','l','w',
/*08b0*/ 133,'p','s','u','b','b',133,'p','s','u','b','d',133,'p','s','u',
/*08c0*/ 'b','q',133,'p','s','u','b','w',133,'r','c','p','p','s',131,133,
/*08d0*/ 'x',132,'o','r','p','s',133,'a','n','d','p','d',133,'c','m','p',
/*08e0*/ 'p','d',133,'d','i','v','p','d',133,'m','a','x','p','d',133,'m',
/*08f0*/ 'i','n','p','d',133,'m','u','l','p',130,'d',133,'x',132,'o','r',
/*0900*/ 'p','d',133,'a','d','d','s','d',132,133,'c','m','p','s','d',133,
/*0910*/ 'd','i','v','s','d',133,'l','d','d','q','u',133,'m','a','x','s',
/*0920*/ 'd',133,'m','i','n','s','d',133,'m','o','v','s','d',133,'m','u',
/*0930*/ 'l','s','d',133,'s','u','b','s','d',133,'a','d','d','s','s',133,
/*0940*/ 'c','m','p','s','s',133,'d','i','v','s','s',133,'m','a','x','s',
/*0950*/ 's',133,'m','i','n','s','s',133,'m','o','v','s','s',133,'m','u',
/*0960*/ 131,'l','s','s',133,'p','a','u','s','e',133,'r','c','p','s','s',
/*0970*/ 133,'s','u','b','s','s',133,'s','t','(','1',')',133,'s','t','(',
/*0980*/ '2',')',133,'s','t','(','3',')',133,'s','t','(','4',')',133,'s',
/*0990*/ 't','(','5',')',133,'s','t','(','6',')',133,'s','t','(','7',')',
/*09a0*/ 133,'d',132,'w','o','r','d',133,'q','w','o','r','d',133,'t',132,
/*09b0*/ 'b','y','t','e',133,'f','w','o','r','d',132,'?','?','?','?',132,
/*09c0*/ 'o','p','n','d',132,'a','d','d','r',132,'r','e','p','e',132,'l',
/*09d0*/ 'o','c','k',132,'a','r','p','l',132,'c','a','l','l',132,'c','l',
/*09e0*/ 't','s',131,132,'c','w','d','e',132,'i','n','t','o',132,'j','c',
/*09f0*/ 'x','z',132,'l',130,'a','h','f',132,'l','g','d','t',132,'l','i',
/*0a00*/ 'd','t',132,'l','l','d','t',132,'l','m','s','w',132,'l','o','d',
/*0a10*/ 's',131,132,'o','u','t','s',132,'r','e','t','f',132,'s','a','h',
/*0a20*/ 'f',132,'s','c','a','s',132,'s','e','t','o',132,'s','e','t','e',
/*0a30*/ 132,'s','e','t','s',132,'s','g','d','t',132,'s','i','d','t',132,
/*0a40*/ 's','l','d','t',131,132,'s','h','r','d',132,'s','m','s','w',132,
/*0a50*/ 's','t','o','s',132,'t','e','s','t',132,'v','e','r','r',132,'v',
/*0a60*/ 'e','r','w',132,'x','a','d','d',132,'x','l','a','t',132,'f','a',
/*0a70*/ 131,'b','s',132,'f',130,'b','l','d',132,'f','c','h','s',132,'f',
/*0a80*/ 'c','o','s',132,'f','e','n','i',132,'f','i','l','d',132,'f','s',
/*0a90*/ 't','p',132,'f','l','d','1',132,'f','l','d','z',132,'f',131,'n',
/*0aa0*/ 'o','p',132,'f','t','s','t',132,'f','x','a','m',132,'f','x','c',
/*0ab0*/ 'h',132,'p','x','o','r',132,'x',131,'m','m','0',132,'x',131,'m',
/*0ac0*/ 'm','1',132,'x',131,'m','m','2',132,'x',131,'m','m','3',132,'x',
/*0ad0*/ 131,'m','m','4',132,'x',131,'m','m','5',132,'x',131,'m','m','6',
/*0ae0*/ 132,'x',131,'m','m','7',131,'a','a','a',131,'a','a',131,'d',131,
/*0af0*/ 'a','a','m',131,'a','a','s',131,'a','d','c',131,'b','s','r',130,
/*0b00*/ 131,'b','t','c',131,'b','t','r',131,'b','t','s',131,'c','b','w',
/*0b10*/ 131,'c','d','q',131,'c','l','c',131,'c','l','d',131,'c','l','i',
/*0b20*/ 131,'c','m','c',131,'d','a','s',131,'h','l','t',131,'j','n','o',
/*0b30*/ 130,131,'j','a','e',131,'j','n','e',130,131,'j','b','e',131,'j',
/*0b40*/ 'n','s',130,131,'j','p','o',130,131,'j','g','e',130,131,'j','l',
/*0b50*/ 'e',131,'j','m','p',131,'l','a','r',131,'l','d','s',131,'l','e',
/*0b60*/ 's',131,'l','f','s',131,'l',130,'g','s',131,'l','t','r',131,'l',
/*0b70*/ 's','l',131,'n','e','g',131,'n','o','t',131,'r','c','l',131,'r',
/*0b80*/ 'c','r',131,'r','o','r',131,'r','o','l',131,'r','s','m',131,'s',
/*0b90*/ 'b','b',131,'s','a','r',131,'s','t','d',131,'s','t','i',131,'s',
/*0ba0*/ 't','r',131,'u','d','1',131,'u','d','2',131,'p','o','r',131,'e',
/*0bb0*/ 'a','x',131,'e','d','x',131,'e',130,'b','x',131,'e','s','p',131,
/*0bc0*/ 'e','b','p',131,'e','s','i',131,'e','d','i',131,'c','r','0',131,
/*0bd0*/ 'c','r','2',131,'c','r','3',131,'c','r','4',131,'d','r','0',131,
/*0be0*/ 'd','r','1',131,'d','r','2',131,'d','r','3',131,'d','r','6',131,
/*0bf0*/ 'd','r','7',131,'t','r','3',131,'t','r','4',131,'t','r','5',131,
/*0c00*/ 't','r','6',131,'t','r','7',130,'j','o',130,'j','s',130,'b','h',
};

extern dis_handler_return X86PrefixOpnd( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixAddr( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixRepe( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixRepne( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixCS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixSS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixDS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixES( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixFS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixGS( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixLock( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86PrefixFwait( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_bound( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Reg_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Rel_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Abs_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MovCC_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Reg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmImm_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86AccAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Reg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Imm_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Rel_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Abs_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86JmpCC_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmReg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MemAbsAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86CRegReg_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86DRegReg_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SRegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86TRegReg_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24C( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24C( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86AccAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Reg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Reg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SReg_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Imm_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Imm_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Imm_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86SetCC( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Shift_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86String_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_test( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_test( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86Reg_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ImmAcc_8( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRMImm_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType2( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeCond( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeEnv( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType1( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FTypeFSTSWAX( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3B( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType4( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3C( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3C( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3C( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86FType3C( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86_3DNow( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_16( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixed_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM32_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM32_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRM32_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86NoOp_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86ModRM_24( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixed_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixedImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64Imm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86MMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32Imm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86RegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM64( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMMixed( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32_Rev( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRMImm( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );
extern dis_handler_return X86XMMRegModRM32( dis_handle *, void *, dis_dec_ins * );

const dis_ins_descript DisInstructionTable[] = {
    { 0x09ba, 0x00000001, 0x00000000, NULL },

    /* Machine:X86 */

    /* Table_1 */

    { 0x09bf, 0x00000066, 0x000000ff, X86PrefixOpnd }, /* opnd_pr */
    { 0x09c4, 0x00000067, 0x000000ff, X86PrefixAddr }, /* addr_pr */
    { 0x09c9, 0x000000f3, 0x000000ff, X86PrefixRepe }, /* repe_pr */
    { 0x06b7, 0x00000000, 0x00000000, NULL }, /* rep_pr */
    { 0x06b8, 0x000000f2, 0x000000ff, X86PrefixRepne }, /* repne_pr */
    { 0x0268, 0x0000002e, 0x000000ff, X86PrefixCS }, /* cs_pr */
    { 0x00e0, 0x00000036, 0x000000ff, X86PrefixSS }, /* ss_pr */
    { 0x019c, 0x0000003e, 0x000000ff, X86PrefixDS }, /* ds_pr */
    { 0x0639, 0x00000026, 0x000000ff, X86PrefixES }, /* es_pr */
    { 0x02d2, 0x00000064, 0x000000ff, X86PrefixFS }, /* fs_pr */
    { 0x0b67, 0x00000065, 0x000000ff, X86PrefixGS }, /* gs_pr */
    { 0x09ce, 0x000000f0, 0x000000ff, X86PrefixLock }, /* lock_pr */
    { 0x06be, 0x0000009b, 0x000000ff, X86PrefixFwait }, /* fwait */
    { 0x0ae6, 0x00000037, 0x000000ff, X86NoOp_8 }, /* aaa */
    { 0x0aea, 0x00000ad5, 0x0000ffff, X86NoOp_16 }, /* aad */
    { 0x0aef, 0x00000ad4, 0x0000ffff, X86NoOp_16 }, /* aam */
    { 0x0af3, 0x0000003f, 0x000000ff, X86NoOp_8 }, /* aas */
    { 0x0af7, 0x00000010, 0x000000fc, X86RegModRM_16 }, /* adc */
    { 0x0af7, 0x00000014, 0x000000fe, X86ImmAcc_8 }, /* adc2 */
    { 0x0af7, 0x00001080, 0x000038fc, X86ModRMImm_16 }, /* adc3 */
    { 0x0198, 0x00000000, 0x000000fc, X86RegModRM_16 }, /* add */
    { 0x0198, 0x00000004, 0x000000fe, X86ImmAcc_8 }, /* add2 */
    { 0x0198, 0x00000080, 0x000038fc, X86ModRMImm_16 }, /* add3 */
    { 0x058f, 0x00000020, 0x000000fc, X86RegModRM_16 }, /* and */
    { 0x058f, 0x00000024, 0x000000fe, X86ImmAcc_8 }, /* and2 */
    { 0x058f, 0x00002080, 0x000038fc, X86ModRMImm_16 }, /* and3 */
    { 0x09d3, 0x00000063, 0x000000ff, X86RegModRM_16B }, /* arpl */
    { 0x06c4, 0x00000062, 0x000000ff, X86RegModRM_bound }, /* bound */
    { 0x0a70, 0x0000bc0f, 0x0000ffff, X86RegModRM_24B }, /* bsf */
    { 0x0afb, 0x0000bd0f, 0x0000ffff, X86RegModRM_24B }, /* bsr */
    { 0x06ca, 0x0000c80f, 0x0000f8ff, X86Reg_16 }, /* bswap */
    { 0x0aff, 0x0000a30f, 0x0000ffff, X86RegModRM_24B }, /* bt */
    { 0x0aff, 0x0020ba0f, 0x0038ffff, X86ModRMImm_24 }, /* bt2 */
    { 0x0b00, 0x0000bb0f, 0x0000ffff, X86RegModRM_24B }, /* btc */
    { 0x0b00, 0x0038ba0f, 0x0038ffff, X86ModRMImm_24 }, /* btc2 */
    { 0x0b04, 0x0000b30f, 0x0000ffff, X86RegModRM_24B }, /* btr */
    { 0x0b04, 0x0030ba0f, 0x0038ffff, X86ModRMImm_24 }, /* btr2 */
    { 0x0b08, 0x0000ab0f, 0x0000ffff, X86RegModRM_24B }, /* bts */
    { 0x0b08, 0x0028ba0f, 0x0038ffff, X86ModRMImm_24 }, /* bts2 */
    { 0x09d8, 0x000000e8, 0x000000ff, X86Rel_8 }, /* call */
    { 0x09d8, 0x000010ff, 0x000038ff, X86ModRM_16 }, /* call2 */
    { 0x09d8, 0x0000009a, 0x000000ff, X86Abs_8 }, /* call3 */
    { 0x09d8, 0x000018ff, 0x000038ff, X86ModRM_16 }, /* call4 */
    { 0x0b0c, 0x00000098, 0x000000ff, X86NoOp_8 }, /* cbw */
    { 0x0b10, 0x00000000, 0x00000000, NULL }, /* cdq */
    { 0x0b14, 0x000000f8, 0x000000ff, X86NoOp_8 }, /* clc */
    { 0x0b18, 0x000000fc, 0x000000ff, X86NoOp_8 }, /* cld */
    { 0x0b1c, 0x000000fa, 0x000000ff, X86NoOp_8 }, /* cli */
    { 0x09dd, 0x0000060f, 0x0000ffff, X86NoOp_16 }, /* clts */
    { 0x0b20, 0x000000f5, 0x000000ff, X86NoOp_8 }, /* cmc */
    { 0x0054, 0x00000038, 0x000000fc, X86RegModRM_16 }, /* cmp */
    { 0x0054, 0x0000003c, 0x000000fe, X86ImmAcc_8 }, /* cmp2 */
    { 0x0054, 0x00003880, 0x000038fc, X86ModRMImm_16 }, /* cmp3 */
    { 0x0908, 0x000000a6, 0x000000fe, X86String_8 }, /* cmps */
    { 0x0055, 0x0000b00f, 0x0000feff, X86RegModRM_24 }, /* cmpxchg */
    { 0x0056, 0x0008c70f, 0x0038ffff, X86ModRM_24 }, /* cmpxchg8b */
    { 0x06d0, 0x0000400f, 0x0000ffff, X86MovCC_24 }, /* cmovo */
    { 0x0452, 0x0000410f, 0x0000ffff, X86MovCC_24 }, /* cmovno */
    { 0x02c2, 0x0000420f, 0x0000ffff, X86MovCC_24 }, /* cmovb */
    { 0x045a, 0x0000430f, 0x0000ffff, X86MovCC_24 }, /* cmovae */
    { 0x0546, 0x0000440f, 0x0000ffff, X86MovCC_24 }, /* cmove */
    { 0x02b8, 0x0000450f, 0x0000ffff, X86MovCC_24 }, /* cmovne */
    { 0x02c3, 0x0000460f, 0x0000ffff, X86MovCC_24 }, /* cmovbe */
    { 0x0459, 0x0000470f, 0x0000ffff, X86MovCC_24 }, /* cmova */
    { 0x06d6, 0x0000480f, 0x0000ffff, X86MovCC_24 }, /* cmovs */
    { 0x0461, 0x0000490f, 0x0000ffff, X86MovCC_24 }, /* cmovns */
    { 0x0468, 0x00004a0f, 0x0000ffff, X86MovCC_24 }, /* cmovp */
    { 0x0469, 0x00004b0f, 0x0000ffff, X86MovCC_24 }, /* cmovpo */
    { 0x0478, 0x00004c0f, 0x0000ffff, X86MovCC_24 }, /* cmovl */
    { 0x0471, 0x00004d0f, 0x0000ffff, X86MovCC_24 }, /* cmovge */
    { 0x0479, 0x00004e0f, 0x0000ffff, X86MovCC_24 }, /* cmovle */
    { 0x0470, 0x00004f0f, 0x0000ffff, X86MovCC_24 }, /* cmovg */
    { 0x06dc, 0x0000a20f, 0x0000ffff, X86NoOp_16 }, /* cpuid */
    { 0x09e2, 0x00000099, 0x000000ff, X86NoOp_8 }, /* cwd */
    { 0x09e3, 0x00000000, 0x00000000, NULL }, /* cwde */
    { 0x0aed, 0x00000027, 0x000000ff, X86NoOp_8 }, /* daa */
    { 0x0b24, 0x0000002f, 0x000000ff, X86NoOp_8 }, /* das */
    { 0x0265, 0x000008fe, 0x000038fe, X86ModRM_16 }, /* dec */
    { 0x0265, 0x00000048, 0x000000f8, X86Reg_8 }, /* dec2 */
    { 0x04cc, 0x000030f6, 0x000038fe, X86ModRM_16 }, /* div */
    { 0x00ea, 0x000000c8, 0x000000ff, X86ImmImm_8 }, /* enter */
    { 0x0b28, 0x000000f4, 0x000000ff, X86NoOp_8 }, /* halt */
    { 0x04ca, 0x000038f6, 0x000038fe, X86ModRM_16 }, /* idiv */
    { 0x07b8, 0x000028f6, 0x000038fe, X86ModRM_16 }, /* imul */
    { 0x07b8, 0x0000af0f, 0x0000ffff, X86RegModRM_24B }, /* imul2 */
    { 0x07b8, 0x00000069, 0x000000fd, X86RegModRM_16B }, /* imul3 */
    { 0x026f, 0x000000e4, 0x000000fe, X86ImmAcc_8 }, /* in */
    { 0x026f, 0x000000ec, 0x000000fe, X86AccAcc_8 }, /* in2 */
    { 0x0270, 0x000000fe, 0x000038fe, X86ModRM_16 }, /* inc */
    { 0x0270, 0x00000040, 0x000000f8, X86Reg_8 }, /* inc2 */
    { 0x05e6, 0x0000006c, 0x000000fe, X86String_8 }, /* ins */
    { 0x028f, 0x000000cc, 0x000000fe, X86Imm_8 }, /* int */
    { 0x09e8, 0x000000ce, 0x000000ff, X86NoOp_8 }, /* into */
    { 0x04aa, 0x0000080f, 0x0000ffff, X86NoOp_16 }, /* invd */
    { 0x0480, 0x0038010f, 0x0038ffff, X86ModRM_24 }, /* invlpg */
    { 0x06e2, 0x000000cf, 0x000000ff, X86NoOp_8 }, /* iret */
    { 0x06e3, 0x00000000, 0x00000000, NULL }, /* iretd */
    { 0x0c07, 0x00000070, 0x000000ff, X86JmpCC_8 }, /* jo */
    { 0x0b2c, 0x00000071, 0x000000ff, X86JmpCC_8 }, /* jno */
    { 0x0b39, 0x00000072, 0x000000ff, X86JmpCC_8 }, /* jb */
    { 0x0b31, 0x00000073, 0x000000ff, X86JmpCC_8 }, /* jae */
    { 0x06ea, 0x00000074, 0x000000ff, X86JmpCC_8 }, /* je */
    { 0x0b35, 0x00000075, 0x000000ff, X86JmpCC_8 }, /* jne */
    { 0x0b3a, 0x00000076, 0x000000ff, X86JmpCC_8 }, /* jbe */
    { 0x0b30, 0x00000077, 0x000000ff, X86JmpCC_8 }, /* ja */
    { 0x0c0a, 0x00000078, 0x000000ff, X86JmpCC_8 }, /* js */
    { 0x0b3e, 0x00000079, 0x000000ff, X86JmpCC_8 }, /* jns */
    { 0x0b42, 0x0000007a, 0x000000ff, X86JmpCC_8 }, /* jp */
    { 0x0b43, 0x0000007b, 0x000000ff, X86JmpCC_8 }, /* jpo */
    { 0x0b4c, 0x0000007c, 0x000000ff, X86JmpCC_8 }, /* jl */
    { 0x0b48, 0x0000007d, 0x000000ff, X86JmpCC_8 }, /* jge */
    { 0x0b4d, 0x0000007e, 0x000000ff, X86JmpCC_8 }, /* jle */
    { 0x0b47, 0x0000007f, 0x000000ff, X86JmpCC_8 }, /* jg */
    { 0x0c07, 0x0000800f, 0x0000ffff, X86JmpCC_16 }, /* jo2 */
    { 0x0b2c, 0x0000810f, 0x0000ffff, X86JmpCC_16 }, /* jno2 */
    { 0x0b39, 0x0000820f, 0x0000ffff, X86JmpCC_16 }, /* jb2 */
    { 0x0b31, 0x0000830f, 0x0000ffff, X86JmpCC_16 }, /* jae2 */
    { 0x06ea, 0x0000840f, 0x0000ffff, X86JmpCC_16 }, /* je2 */
    { 0x0b35, 0x0000850f, 0x0000ffff, X86JmpCC_16 }, /* jne2 */
    { 0x0b3a, 0x0000860f, 0x0000ffff, X86JmpCC_16 }, /* jbe2 */
    { 0x0b30, 0x0000870f, 0x0000ffff, X86JmpCC_16 }, /* ja2 */
    { 0x0c0a, 0x0000880f, 0x0000ffff, X86JmpCC_16 }, /* js2 */
    { 0x0b3e, 0x0000890f, 0x0000ffff, X86JmpCC_16 }, /* jns2 */
    { 0x0b42, 0x00008a0f, 0x0000ffff, X86JmpCC_16 }, /* jp2 */
    { 0x0b43, 0x00008b0f, 0x0000ffff, X86JmpCC_16 }, /* jpo2 */
    { 0x0b4c, 0x00008c0f, 0x0000ffff, X86JmpCC_16 }, /* jl2 */
    { 0x0b48, 0x00008d0f, 0x0000ffff, X86JmpCC_16 }, /* jge2 */
    { 0x0b4d, 0x00008e0f, 0x0000ffff, X86JmpCC_16 }, /* jle2 */
    { 0x0b47, 0x00008f0f, 0x0000ffff, X86JmpCC_16 }, /* jg2 */
    { 0x09ed, 0x000000e3, 0x000000ff, X86JmpCC_8 }, /* jcxz */
    { 0x06eb, 0x00000000, 0x00000000, NULL }, /* jecxz */
    { 0x0b51, 0x000000eb, 0x000000ff, X86JmpCC_8 }, /* jmp */
    { 0x0b51, 0x000000e9, 0x000000ff, X86Rel_8 }, /* jmp1 */
    { 0x0b51, 0x000020ff, 0x000038ff, X86ModRM_16 }, /* jmp2 */
    { 0x0b51, 0x000000ea, 0x000000ff, X86Abs_8 }, /* jmp3 */
    { 0x0b51, 0x000028ff, 0x000038ff, X86ModRM_16 }, /* jmp4 */
    { 0x09f2, 0x0000009f, 0x000000ff, X86NoOp_8 }, /* lahf */
    { 0x0b55, 0x0000020f, 0x0000ffff, X86RegModRM_24B }, /* lar */
    { 0x0b59, 0x000000c5, 0x000000ff, X86RegModRM_16B }, /* lds */
    { 0x0b5d, 0x000000c4, 0x000000ff, X86RegModRM_16B }, /* les */
    { 0x0b61, 0x0000b40f, 0x0000ffff, X86RegModRM_24B }, /* lfs */
    { 0x0b65, 0x0000b50f, 0x0000ffff, X86RegModRM_24B }, /* lgs */
    { 0x0960, 0x0000b20f, 0x0000ffff, X86RegModRM_24B }, /* lss */
    { 0x06f3, 0x0000008d, 0x000000ff, X86RegModRM_16B }, /* lea */
    { 0x06f4, 0x000000c9, 0x000000ff, X86NoOp_8 }, /* leave */
    { 0x09f8, 0x0010010f, 0x0038ffff, X86ModRM_24 }, /* lgdt */
    { 0x09fd, 0x0018010f, 0x0038ffff, X86ModRM_24 }, /* lidt */
    { 0x0a02, 0x0010000f, 0x0038ffff, X86ModRM_24 }, /* lldt */
    { 0x0a07, 0x0030010f, 0x0038ffff, X86ModRM_24 }, /* lmsw */
    { 0x0a0c, 0x000000ac, 0x000000fe, X86String_8 }, /* lods */
    { 0x0249, 0x000000e2, 0x000000ff, X86JmpCC_8 }, /* loop */
    { 0x06fa, 0x00000000, 0x00000000, NULL }, /* loopw */
    { 0x0700, 0x00000000, 0x00000000, NULL }, /* loopd */
    { 0x0487, 0x000000e1, 0x000000ff, X86JmpCC_8 }, /* loopz */
    { 0x0488, 0x00000000, 0x00000000, NULL }, /* loopzw */
    { 0x048f, 0x00000000, 0x00000000, NULL }, /* loopzd */
    { 0x024a, 0x000000e0, 0x000000ff, X86JmpCC_8 }, /* loopnz */
    { 0x024b, 0x00000000, 0x00000000, NULL }, /* loopnzw */
    { 0x0253, 0x00000000, 0x00000000, NULL }, /* loopnzd */
    { 0x0b6a, 0x0018000f, 0x0038ffff, X86ModRM_24 }, /* ltr */
    { 0x0b6e, 0x0000030f, 0x0000ffff, X86RegModRM_24B }, /* lsl */
    { 0x0035, 0x00000088, 0x000000fc, X86RegModRM_16 }, /* mov */
    { 0x0035, 0x000000c6, 0x000038fe, X86ModRMImm_16 }, /* mov2 */
    { 0x0035, 0x000000b0, 0x000000f0, X86ImmReg_8 }, /* mov3 */
    { 0x0035, 0x000000a0, 0x000000fc, X86MemAbsAcc_8 }, /* mov4 */
    { 0x0035, 0x0000200f, 0x0000fdff, X86CRegReg_24 }, /* mov5 */
    { 0x0035, 0x0000210f, 0x0000fdff, X86DRegReg_24 }, /* mov6 */
    { 0x0035, 0x0000008c, 0x000000fd, X86SRegModRM_16 }, /* mov7 */
    { 0x0035, 0x0000240f, 0x0000fdff, X86TRegReg_24 }, /* mov8 */
    { 0x0236, 0x000000a4, 0x000000fe, X86String_8 }, /* movs */
    { 0x0706, 0x0000be0f, 0x0000feff, X86RegModRM_24C }, /* movsx */
    { 0x070c, 0x0000b60f, 0x0000feff, X86RegModRM_24C }, /* movzx */
    { 0x034c, 0x000020f6, 0x000038fe, X86ModRM_16 }, /* mul */
    { 0x0b72, 0x000018f6, 0x000038fe, X86ModRM_16 }, /* neg */
    { 0x0b76, 0x000010f6, 0x000038fe, X86ModRM_16 }, /* not */
    { 0x0299, 0x00000008, 0x000000fc, X86RegModRM_16 }, /* or */
    { 0x0299, 0x0000000c, 0x000000fe, X86ImmAcc_8 }, /* or2 */
    { 0x0299, 0x00000880, 0x000038fc, X86ModRMImm_16 }, /* or3 */
    { 0x0a11, 0x000000e6, 0x000000fe, X86ImmAcc_8 }, /* out */
    { 0x0a11, 0x000000ee, 0x000000fe, X86AccAcc_8 }, /* out2 */
    { 0x0a12, 0x0000006e, 0x000000fe, X86String_8 }, /* outs */
    { 0x071e, 0x0000008f, 0x000038ff, X86ModRM_16 }, /* pop */
    { 0x071e, 0x00000058, 0x000000f8, X86Reg_8 }, /* pop2 */
    { 0x071e, 0x00000007, 0x000000ff, X86SReg_8 }, /* pop3d */
    { 0x071e, 0x00000017, 0x000000ff, X86SReg_8 }, /* pop3e */
    { 0x071e, 0x0000001f, 0x000000ff, X86SReg_8 }, /* pop3s */
    { 0x071e, 0x0000a10f, 0x0000ffff, X86SReg_16 }, /* pop4f */
    { 0x071e, 0x0000a90f, 0x0000ffff, X86SReg_16 }, /* pop4g */
    { 0x0496, 0x000030ff, 0x000038ff, X86ModRM_16 }, /* push */
    { 0x0712, 0x00000000, 0x00000000, NULL }, /* pushw */
    { 0x0718, 0x00000000, 0x00000000, NULL }, /* pushd */
    { 0x0496, 0x00000050, 0x000000f8, X86Reg_8 }, /* push2 */
    { 0x0496, 0x00000006, 0x000000e7, X86SReg_8 }, /* push3 */
    { 0x0496, 0x0000a00f, 0x0000ffff, X86SReg_16 }, /* push4f */
    { 0x0496, 0x0000a80f, 0x0000ffff, X86SReg_16 }, /* push4g */
    { 0x0496, 0x00000068, 0x000000fd, X86Imm_8 }, /* push5 */
    { 0x071f, 0x00000061, 0x000000ff, X86NoOp_8 }, /* popa */
    { 0x0720, 0x00000000, 0x00000000, NULL }, /* popad */
    { 0x0726, 0x0000009d, 0x000000ff, X86NoOp_8 }, /* popf */
    { 0x0727, 0x00000000, 0x00000000, NULL }, /* popfd */
    { 0x0497, 0x00000060, 0x000000ff, X86NoOp_8 }, /* pusha */
    { 0x0498, 0x00000000, 0x00000000, NULL }, /* pushad */
    { 0x049f, 0x0000009c, 0x000000ff, X86NoOp_8 }, /* pushf */
    { 0x04a0, 0x00000000, 0x00000000, NULL }, /* pushfd */
    { 0x0b7a, 0x000010d0, 0x000038fc, X86Shift_16 }, /* rcl */
    { 0x0b7a, 0x000010c0, 0x000038fe, X86ModRMImm_16 }, /* rcl2 */
    { 0x0b7e, 0x000018d0, 0x000038fc, X86Shift_16 }, /* rcr */
    { 0x0b7e, 0x000018c0, 0x000038fe, X86ModRMImm_16 }, /* rcr2 */
    { 0x072d, 0x0000320f, 0x0000ffff, X86NoOp_16 }, /* rdmsr */
    { 0x0733, 0x0000330f, 0x0000ffff, X86NoOp_16 }, /* rdpmc */
    { 0x0739, 0x0000310f, 0x0000ffff, X86NoOp_16 }, /* rdtsc */
    { 0x06e5, 0x000000c3, 0x000000ff, X86NoOp_8 }, /* ret */
    { 0x06e5, 0x000000c2, 0x000000ff, X86Imm_8 }, /* ret2 */
    { 0x0a17, 0x000000cb, 0x000000ff, X86NoOp_8 }, /* retf */
    { 0x0a17, 0x000000ca, 0x000000ff, X86Imm_8 }, /* retf2 */
    { 0x0b82, 0x000008d0, 0x000038fc, X86Shift_16 }, /* ror */
    { 0x0b82, 0x000008c0, 0x000038fe, X86ModRMImm_16 }, /* ror2 */
    { 0x0b86, 0x000000d0, 0x000038fc, X86Shift_16 }, /* rol */
    { 0x0b86, 0x000000c0, 0x000038fe, X86ModRMImm_16 }, /* rol2 */
    { 0x0b8a, 0x0000aa0f, 0x0000ffff, X86NoOp_16 }, /* rsm */
    { 0x0a1c, 0x0000009e, 0x000000ff, X86NoOp_8 }, /* sahf */
    { 0x0b8e, 0x00000018, 0x000000fc, X86RegModRM_16 }, /* sbb */
    { 0x0b8e, 0x0000001c, 0x000000fe, X86ImmAcc_8 }, /* sbb2 */
    { 0x0b8e, 0x00001880, 0x000038fc, X86ModRMImm_16 }, /* sbb3 */
    { 0x0a21, 0x000000ae, 0x000000fe, X86String_8 }, /* scas */
    { 0x0a26, 0x0000900f, 0x0038ffff, X86SetCC }, /* seto */
    { 0x073f, 0x0000910f, 0x0038ffff, X86SetCC }, /* setno */
    { 0x0752, 0x0000920f, 0x0038ffff, X86SetCC }, /* setb */
    { 0x0746, 0x0000930f, 0x0038ffff, X86SetCC }, /* setae */
    { 0x0a2b, 0x0000940f, 0x0038ffff, X86SetCC }, /* sete */
    { 0x074c, 0x0000950f, 0x0038ffff, X86SetCC }, /* setne */
    { 0x0753, 0x0000960f, 0x0038ffff, X86SetCC }, /* setbe */
    { 0x0745, 0x0000970f, 0x0038ffff, X86SetCC }, /* seta */
    { 0x0a30, 0x0000980f, 0x0038ffff, X86SetCC }, /* sets */
    { 0x0759, 0x0000990f, 0x0038ffff, X86SetCC }, /* setns */
    { 0x04ea, 0x00009a0f, 0x0038ffff, X86SetCC }, /* setp */
    { 0x075f, 0x00009b0f, 0x0038ffff, X86SetCC }, /* setpo */
    { 0x076c, 0x00009c0f, 0x0038ffff, X86SetCC }, /* setl */
    { 0x0766, 0x00009d0f, 0x0038ffff, X86SetCC }, /* setge */
    { 0x076d, 0x00009e0f, 0x0038ffff, X86SetCC }, /* setle */
    { 0x0765, 0x00009f0f, 0x0038ffff, X86SetCC }, /* setg */
    { 0x035a, 0x000020d0, 0x000038fc, X86Shift_16 }, /* shl */
    { 0x035a, 0x000020c0, 0x000038fe, X86ModRMImm_16 }, /* shl2 */
    { 0x0a44, 0x000028d0, 0x000038fc, X86Shift_16 }, /* shr */
    { 0x0a44, 0x000028c0, 0x000038fe, X86ModRMImm_16 }, /* shr2 */
    { 0x0b92, 0x000038d0, 0x000038fc, X86Shift_16 }, /* sar */
    { 0x0b92, 0x000038c0, 0x000038fe, X86ModRMImm_16 }, /* sar2 */
    { 0x0a35, 0x0000010f, 0x0038ffff, X86ModRM_24 }, /* sgdt */
    { 0x0a3a, 0x0008010f, 0x00f8ffff, X86ModRM_24 }, /* sidt00 */
    { 0x0a3a, 0x0048010f, 0x00f8ffff, X86ModRM_24 }, /* sidt01 */
    { 0x0a3a, 0x0088010f, 0x00f8ffff, X86ModRM_24 }, /* sidt10 */
    { 0x0a3f, 0x0000000f, 0x0038ffff, X86ModRM_24 }, /* sldt */
    { 0x035b, 0x0000a50f, 0x0000ffff, X86RegModRM_24B }, /* shld */
    { 0x035b, 0x0000a40f, 0x0000ffff, X86RegModRM_24B }, /* shld2 */
    { 0x0a45, 0x0000ad0f, 0x0000ffff, X86RegModRM_24B }, /* shrd */
    { 0x0a45, 0x0000ac0f, 0x0000ffff, X86RegModRM_24B }, /* shrd2 */
    { 0x0a4a, 0x0020010f, 0x0038ffff, X86ModRM_24 }, /* smsw */
    { 0x055e, 0x000000f9, 0x000000ff, X86NoOp_8 }, /* stc */
    { 0x0b96, 0x000000fd, 0x000000ff, X86NoOp_8 }, /* std */
    { 0x0b9a, 0x000000fb, 0x000000ff, X86NoOp_8 }, /* sti */
    { 0x0a4f, 0x000000aa, 0x000000fe, X86String_8 }, /* stos */
    { 0x0b9e, 0x0008000f, 0x0038ffff, X86ModRM_24 }, /* str */
    { 0x019e, 0x00000028, 0x000000fc, X86RegModRM_16 }, /* sub */
    { 0x019e, 0x0000002c, 0x000000fe, X86ImmAcc_8 }, /* sub2 */
    { 0x019e, 0x00002880, 0x000038fc, X86ModRMImm_16 }, /* sub3 */
    { 0x00e6, 0x0000340f, 0x0000ffff, X86NoOp_16 }, /* sysenter */
    { 0x025b, 0x0000350f, 0x0000ffff, X86NoOp_16 }, /* sysexit */
    { 0x0a54, 0x00000084, 0x000000fe, X86RegModRM_test }, /* test */
    { 0x0a54, 0x000000a8, 0x000000fe, X86ImmAcc_8 }, /* test2 */
    { 0x0a54, 0x000000f6, 0x000038fe, X86ModRMImm_16 }, /* test3 */
    { 0x0ba2, 0x0000b90f, 0x0000ffff, X86NoOp_16 }, /* ud1 */
    { 0x0ba6, 0x00000b0f, 0x0000ffff, X86NoOp_16 }, /* ud2 */
    { 0x0a59, 0x0020000f, 0x0038ffff, X86ModRM_24 }, /* verr */
    { 0x0a5e, 0x0028000f, 0x0038ffff, X86ModRM_24 }, /* verw */
    { 0x04a7, 0x0000090f, 0x0000ffff, X86NoOp_16 }, /* wbinvd */
    { 0x0773, 0x0000300f, 0x0000ffff, X86NoOp_16 }, /* wrmsr */
    { 0x0a63, 0x0000c00f, 0x0000feff, X86RegModRM_24 }, /* xadd */
    { 0x005a, 0x00000086, 0x000000fe, X86RegModRM_test }, /* xchg */
    { 0x005a, 0x00000090, 0x000000f8, X86Reg_8 }, /* xchg2 */
    { 0x0a68, 0x000000d7, 0x000000ff, X86NoOp_8 }, /* xlat */
    { 0x08ce, 0x00000030, 0x000000fc, X86RegModRM_16 }, /* xor */
    { 0x08ce, 0x00000034, 0x000000fe, X86ImmAcc_8 }, /* xor2 */
    { 0x08ce, 0x00003080, 0x000038fc, X86ModRMImm_16 }, /* xor3 */
    { 0x0a9e, 0x00000090, 0x00000000, NULL }, /* nop */
    { 0x0779, 0x0000f0d9, 0x0000ffff, X86FType4 }, /* f2xm1 */
    { 0x0a6d, 0x0000e1d9, 0x0000ffff, X86FType4 }, /* fabs */
    { 0x0785, 0x000000d8, 0x0000f8fb, X86FType2 }, /* fadd00 */
    { 0x0785, 0x000040d8, 0x0000f8fb, X86FType2 }, /* fadd01 */
    { 0x0785, 0x000080d8, 0x0000f8fb, X86FType2 }, /* fadd10 */
    { 0x0785, 0x0000c0d8, 0x0000f8fb, X86FType3 }, /* fadd11 */
    { 0x077f, 0x000000da, 0x0000f8fb, X86FType2 }, /* fiadd00 */
    { 0x077f, 0x000040da, 0x0000f8fb, X86FType2 }, /* fiadd01 */
    { 0x077f, 0x000080da, 0x0000f8fb, X86FType2 }, /* fiadd10 */
    { 0x0786, 0x0000c0de, 0x0000f8ff, X86FType3 }, /* faddp */
    { 0x0a73, 0x000020df, 0x0000f8ff, X86FType1 }, /* fbld00 */
    { 0x0a73, 0x000060df, 0x0000f8ff, X86FType1 }, /* fbld01 */
    { 0x0a73, 0x0000a0df, 0x0000f8ff, X86FType1 }, /* fbld10 */
    { 0x078c, 0x000030df, 0x0000f8ff, X86FType1 }, /* fbstp00 */
    { 0x078c, 0x000070df, 0x0000f8ff, X86FType1 }, /* fbstp01 */
    { 0x078c, 0x0000b0df, 0x0000f8ff, X86FType1 }, /* fbstp10 */
    { 0x0a79, 0x0000e0d9, 0x0000ffff, X86FType4 }, /* fchs */
    { 0x04af, 0x0000e2db, 0x0000ffff, X86FType4 }, /* fnclex */
    { 0x0792, 0x00000000, 0x00000000, NULL }, /* fclex */
    { 0x04be, 0x000010d8, 0x0000f8fb, X86FType2 }, /* fcom00 */
    { 0x04be, 0x000050d8, 0x0000f8fb, X86FType2 }, /* fcom01 */
    { 0x04be, 0x000090d8, 0x0000f8fb, X86FType2 }, /* fcom10 */
    { 0x04be, 0x0000d0d8, 0x0000f8ff, X86FType3B }, /* fcom11 */
    { 0x04bf, 0x000018d8, 0x0000f8fb, X86FType2 }, /* fcomp00 */
    { 0x04bf, 0x000058d8, 0x0000f8fb, X86FType2 }, /* fcomp01 */
    { 0x04bf, 0x000098d8, 0x0000f8fb, X86FType2 }, /* fcomp10 */
    { 0x04bf, 0x0000d8d8, 0x0000f8ff, X86FType3B }, /* fcomp11 */
    { 0x04b6, 0x000010da, 0x0000f8fb, X86FType2 }, /* ficom00 */
    { 0x04b6, 0x000050da, 0x0000f8fb, X86FType2 }, /* ficom01 */
    { 0x04b6, 0x000090da, 0x0000f8fb, X86FType2 }, /* ficom10 */
    { 0x04b7, 0x000018da, 0x0000f8fb, X86FType2 }, /* ficomp00 */
    { 0x04b7, 0x000058da, 0x0000f8fb, X86FType2 }, /* ficomp01 */
    { 0x04b7, 0x000098da, 0x0000f8fb, X86FType2 }, /* ficomp10 */
    { 0x04c0, 0x0000d9de, 0x0000ffff, X86FType4 }, /* fcompp */
    { 0x0a7e, 0x0000ffd9, 0x0000ffff, X86FType4 }, /* fcos */
    { 0x0263, 0x0000f6d9, 0x0000ffff, X86FType4 }, /* fdecstp */
    { 0x04d1, 0x000030d8, 0x0000f8fb, X86FType2 }, /* fdiv00 */
    { 0x04d1, 0x000070d8, 0x0000f8fb, X86FType2 }, /* fdiv01 */
    { 0x04d1, 0x0000b0d8, 0x0000f8fb, X86FType2 }, /* fdiv10 */
    { 0x04d1, 0x0000f0d8, 0x0000f8fb, X86FType3 }, /* fdiv11 */
    { 0x04c7, 0x000030da, 0x0000f8fb, X86FType2 }, /* fidiv00 */
    { 0x04c7, 0x000070da, 0x0000f8fb, X86FType2 }, /* fidiv01 */
    { 0x04c7, 0x0000b0da, 0x0000f8fb, X86FType2 }, /* fidiv10 */
    { 0x0798, 0x0000f8de, 0x0000f8ff, X86FType3 }, /* fdivp */
    { 0x04d2, 0x000038d8, 0x0000f8fb, X86FType2 }, /* fdivr00 */
    { 0x04d2, 0x000078d8, 0x0000f8fb, X86FType2 }, /* fdivr01 */
    { 0x04d2, 0x0000b8d8, 0x0000f8fb, X86FType2 }, /* fdivr10 */
    { 0x04d2, 0x0000f8d8, 0x0000f8fb, X86FType3 }, /* fdivr11 */
    { 0x04c8, 0x000038da, 0x0000f8fb, X86FType2 }, /* fidivr00 */
    { 0x04c8, 0x000078da, 0x0000f8fb, X86FType2 }, /* fidivr01 */
    { 0x04c8, 0x0000b8da, 0x0000f8fb, X86FType2 }, /* fidivr10 */
    { 0x04d3, 0x0000f0de, 0x0000f8ff, X86FType3 }, /* fdivrp */
    { 0x04da, 0x0000e1db, 0x0000ffff, X86FType4 }, /* fndisi */
    { 0x079e, 0x00000000, 0x00000000, NULL }, /* fdisi */
    { 0x07a4, 0x0000e0db, 0x0000ffff, X86FType4 }, /* fneni */
    { 0x0a83, 0x00000000, 0x00000000, NULL }, /* feni */
    { 0x07aa, 0x0000c0dd, 0x0000f8ff, X86FType3B }, /* ffree */
    { 0x0277, 0x000000d9, 0x0000f8fb, X86FType2 }, /* fld00 */
    { 0x0277, 0x000040d9, 0x0000f8fb, X86FType2 }, /* fld01 */
    { 0x0277, 0x000080d9, 0x0000f8fb, X86FType2 }, /* fld10 */
    { 0x0277, 0x0000c0d9, 0x0000f8ff, X86FType3B }, /* fld11 */
    { 0x0277, 0x000028db, 0x0000f8ff, X86FType1 }, /* fld8000 */
    { 0x0277, 0x000068db, 0x0000f8ff, X86FType1 }, /* fld8001 */
    { 0x0277, 0x0000a8db, 0x0000f8ff, X86FType1 }, /* fld8010 */
    { 0x0a88, 0x000000db, 0x0000f8fb, X86FType2 }, /* fild00 */
    { 0x0a88, 0x000040db, 0x0000f8fb, X86FType2 }, /* fild01 */
    { 0x0a88, 0x000080db, 0x0000f8fb, X86FType2 }, /* fild10 */
    { 0x0a88, 0x000028df, 0x0000f8ff, X86FType1 }, /* fild6400 */
    { 0x0a88, 0x000068df, 0x0000f8ff, X86FType1 }, /* fild6401 */
    { 0x0a88, 0x0000a8df, 0x0000f8ff, X86FType1 }, /* fild6410 */
    { 0x026d, 0x0000f7d9, 0x0000ffff, X86FType4 }, /* fincstp */
    { 0x04e1, 0x0000e3db, 0x0000ffff, X86FType4 }, /* fninit */
    { 0x07b0, 0x00000000, 0x00000000, NULL }, /* finit */
    { 0x07bd, 0x000008d8, 0x0000f8fb, X86FType2 }, /* fmul00 */
    { 0x07bd, 0x000048d8, 0x0000f8fb, X86FType2 }, /* fmul01 */
    { 0x07bd, 0x000088d8, 0x0000f8fb, X86FType2 }, /* fmul10 */
    { 0x07bd, 0x0000c8d8, 0x0000f8fb, X86FType3 }, /* fmul11 */
    { 0x07b6, 0x000008da, 0x0000f8fb, X86FType2 }, /* fimul00 */
    { 0x07b6, 0x000048da, 0x0000f8fb, X86FType2 }, /* fimul01 */
    { 0x07b6, 0x000088da, 0x0000f8fb, X86FType2 }, /* fimul10 */
    { 0x07be, 0x0000c8de, 0x0000f8ff, X86FType3 }, /* fmulp */
    { 0x04e8, 0x0000e4db, 0x0000ffff, X86FType4 }, /* fsetpm */
    { 0x02dc, 0x000010d9, 0x0000f8fb, X86FType2 }, /* fst00 */
    { 0x02dc, 0x000050d9, 0x0000f8fb, X86FType2 }, /* fst01 */
    { 0x02dc, 0x000090d9, 0x0000f8fb, X86FType2 }, /* fst10 */
    { 0x02dc, 0x0000d0dd, 0x0000f8ff, X86FType3B }, /* fst11 */
    { 0x0a8d, 0x000018d9, 0x0000f8fb, X86FType2 }, /* fstp00 */
    { 0x0a8d, 0x000058d9, 0x0000f8fb, X86FType2 }, /* fstp01 */
    { 0x0a8d, 0x000098d9, 0x0000f8fb, X86FType2 }, /* fstp10 */
    { 0x0a8d, 0x0000d8dd, 0x0000f8ff, X86FType3B }, /* fstp11 */
    { 0x0a8d, 0x000038db, 0x0000f8ff, X86FType1 }, /* fstp8000 */
    { 0x0a8d, 0x000078db, 0x0000f8ff, X86FType1 }, /* fstp8001 */
    { 0x0a8d, 0x0000b8db, 0x0000f8ff, X86FType1 }, /* fstp8010 */
    { 0x04f0, 0x000010db, 0x0000f8fb, X86FType2 }, /* fist00 */
    { 0x04f0, 0x000050db, 0x0000f8fb, X86FType2 }, /* fist01 */
    { 0x04f0, 0x000090db, 0x0000f8fb, X86FType2 }, /* fist10 */
    { 0x07c4, 0x000018db, 0x0000f8fb, X86FType2 }, /* fistp00 */
    { 0x07c4, 0x000058db, 0x0000f8fb, X86FType2 }, /* fistp01 */
    { 0x07c4, 0x000098db, 0x0000f8fb, X86FType2 }, /* fistp10 */
    { 0x07c4, 0x000038df, 0x0000f8ff, X86FType1 }, /* fistp6400 */
    { 0x07c4, 0x000078df, 0x0000f8ff, X86FType1 }, /* fistp6401 */
    { 0x07c4, 0x0000b8df, 0x0000f8ff, X86FType1 }, /* fistp6410 */
    { 0x04f1, 0x000008db, 0x0000f8fb, X86FType2 }, /* fisttp00 */
    { 0x04f1, 0x000048db, 0x0000f8fb, X86FType2 }, /* fisttp01 */
    { 0x04f1, 0x000088db, 0x0000f8fb, X86FType2 }, /* fisttp10 */
    { 0x04f1, 0x000008dd, 0x0000f8ff, X86FType1 }, /* fisttp6400 */
    { 0x04f1, 0x000048dd, 0x0000f8ff, X86FType1 }, /* fisttp6401 */
    { 0x04f1, 0x000088dd, 0x0000f8ff, X86FType1 }, /* fisttp6410 */
    { 0x0500, 0x000020d8, 0x0000f8fb, X86FType2 }, /* fsub00 */
    { 0x0500, 0x000060d8, 0x0000f8fb, X86FType2 }, /* fsub01 */
    { 0x0500, 0x0000a0d8, 0x0000f8fb, X86FType2 }, /* fsub10 */
    { 0x0500, 0x0000e0d8, 0x0000f8fb, X86FType3 }, /* fsub11 */
    { 0x04f8, 0x000020da, 0x0000f8fb, X86FType2 }, /* fisub00 */
    { 0x04f8, 0x000060da, 0x0000f8fb, X86FType2 }, /* fisub01 */
    { 0x04f8, 0x0000a0da, 0x0000f8fb, X86FType2 }, /* fisub10 */
    { 0x07ca, 0x0000e8de, 0x0000f8ff, X86FType3 }, /* fsubp */
    { 0x0501, 0x000028d8, 0x0000f8fb, X86FType2 }, /* fsubr00 */
    { 0x0501, 0x000068d8, 0x0000f8fb, X86FType2 }, /* fsubr01 */
    { 0x0501, 0x0000a8d8, 0x0000f8fb, X86FType2 }, /* fsubr10 */
    { 0x0501, 0x0000e8d8, 0x0000f8fb, X86FType3 }, /* fsubr11 */
    { 0x04f9, 0x000028da, 0x0000f8fb, X86FType2 }, /* fisubr00 */
    { 0x04f9, 0x000068da, 0x0000f8fb, X86FType2 }, /* fisubr01 */
    { 0x04f9, 0x0000a8da, 0x0000f8fb, X86FType2 }, /* fisubr10 */
    { 0x0502, 0x0000e0de, 0x0000f8ff, X86FType3 }, /* fsubrp */
    { 0x0a92, 0x0000e8d9, 0x0000ffff, X86FType4 }, /* fld1 */
    { 0x07d0, 0x000028d9, 0x0000f8ff, X86FType1 }, /* fldcw00 */
    { 0x07d0, 0x000068d9, 0x0000f8ff, X86FType1 }, /* fldcw01 */
    { 0x07d0, 0x0000a8d9, 0x0000f8ff, X86FType1 }, /* fldcw10 */
    { 0x0278, 0x000020d9, 0x0000f8ff, X86FTypeEnv }, /* fldenv00 */
    { 0x0278, 0x000060d9, 0x0000f8ff, X86FTypeEnv }, /* fldenv01 */
    { 0x0278, 0x0000a0d9, 0x0000f8ff, X86FTypeEnv }, /* fldenv10 */
    { 0x0279, 0x00000000, 0x00000000, NULL }, /* fldenvw */
    { 0x0281, 0x00000000, 0x00000000, NULL }, /* fldenvd */
    { 0x0509, 0x0000e9d9, 0x0000ffff, X86FType4 }, /* fldl2t */
    { 0x0511, 0x0000ead9, 0x0000ffff, X86FType4 }, /* fldl2e */
    { 0x07d6, 0x0000ebd9, 0x0000ffff, X86FType4 }, /* fldpi */
    { 0x0518, 0x0000ecd9, 0x0000ffff, X86FType4 }, /* fldlg2 */
    { 0x051f, 0x0000edd9, 0x0000ffff, X86FType4 }, /* fldln2 */
    { 0x0a97, 0x0000eed9, 0x0000ffff, X86FType4 }, /* fldz */
    { 0x0a9c, 0x0000d0d9, 0x0000ffff, X86FType4 }, /* fnop */
    { 0x07dc, 0x0000f2d9, 0x0000ffff, X86FType4 }, /* fptan */
    { 0x0526, 0x0000f3d9, 0x0000ffff, X86FType4 }, /* fpatan */
    { 0x052e, 0x0000f5d9, 0x0000ffff, X86FType4 }, /* fprem1 */
    { 0x052d, 0x0000f8d9, 0x0000ffff, X86FType4 }, /* fprem */
    { 0x0289, 0x0000fcd9, 0x0000ffff, X86FType4 }, /* frndint */
    { 0x0293, 0x000020dd, 0x0000f8ff, X86FTypeEnv }, /* frstor00 */
    { 0x0293, 0x000060dd, 0x0000f8ff, X86FTypeEnv }, /* frstor01 */
    { 0x0293, 0x0000a0dd, 0x0000f8ff, X86FTypeEnv }, /* frstor10 */
    { 0x0294, 0x00000000, 0x00000000, NULL }, /* frstorw */
    { 0x029d, 0x00000000, 0x00000000, NULL }, /* frstord */
    { 0x02a5, 0x000030dd, 0x0000f8ff, X86FTypeEnv }, /* fnsave00 */
    { 0x02a5, 0x000070dd, 0x0000f8ff, X86FTypeEnv }, /* fnsave01 */
    { 0x02a5, 0x0000b0dd, 0x0000f8ff, X86FTypeEnv }, /* fnsave10 */
    { 0x02a6, 0x00000000, 0x00000000, NULL }, /* fnsavew */
    { 0x02ae, 0x00000000, 0x00000000, NULL }, /* fnsaved */
    { 0x0535, 0x00000000, 0x00000000, NULL }, /* fsave */
    { 0x0536, 0x00000000, 0x00000000, NULL }, /* fsavew */
    { 0x053d, 0x00000000, 0x00000000, NULL }, /* fsaved */
    { 0x02bf, 0x0000c0da, 0x0000f8ff, X86FTypeCond }, /* fcmovb */
    { 0x00f0, 0x0000c0db, 0x0000f8ff, X86FTypeCond }, /* fcmovnb */
    { 0x0544, 0x0000c8da, 0x0000f8ff, X86FTypeCond }, /* fcmove */
    { 0x02b6, 0x0000c8db, 0x0000f8ff, X86FTypeCond }, /* fcmovne */
    { 0x02c0, 0x0000d0da, 0x0000f8ff, X86FTypeCond }, /* fcmovbe */
    { 0x00f1, 0x0000d0db, 0x0000f8ff, X86FTypeCond }, /* fcmovnbe */
    { 0x054c, 0x0000d8da, 0x0000f8ff, X86FTypeCond }, /* fcmovu */
    { 0x02ca, 0x0000d8db, 0x0000f8ff, X86FTypeCond }, /* fcmovnu */
    { 0x07e2, 0x0000fad9, 0x0000ffff, X86FType4 }, /* fsqrt */
    { 0x02d4, 0x0000fbd9, 0x0000ffff, X86FType4 }, /* fsincos */
    { 0x0553, 0x0000fdd9, 0x0000ffff, X86FType4 }, /* fscale */
    { 0x02d3, 0x0000fed9, 0x0000ffff, X86FType4 }, /* fsin */
    { 0x055b, 0x000038d9, 0x0000f8ff, X86FType1 }, /* fnstcw00 */
    { 0x055b, 0x000078d9, 0x0000f8ff, X86FType1 }, /* fnstcw01 */
    { 0x055b, 0x0000b8d9, 0x0000f8ff, X86FType1 }, /* fnstcw10 */
    { 0x07e8, 0x00000000, 0x00000000, NULL }, /* fstcw */
    { 0x00fa, 0x000030d9, 0x0000f8ff, X86FTypeEnv }, /* fnstenv00 */
    { 0x00fa, 0x000070d9, 0x0000f8ff, X86FTypeEnv }, /* fnstenv01 */
    { 0x00fa, 0x0000b0d9, 0x0000f8ff, X86FTypeEnv }, /* fnstenv10 */
    { 0x00fb, 0x00000000, 0x00000000, NULL }, /* fnstenvw */
    { 0x0105, 0x00000000, 0x00000000, NULL }, /* fnstenvd */
    { 0x02dd, 0x00000000, 0x00000000, NULL }, /* fstenv */
    { 0x02de, 0x00000000, 0x00000000, NULL }, /* fstenvw */
    { 0x02e6, 0x00000000, 0x00000000, NULL }, /* fstenvd */
    { 0x0563, 0x000038dd, 0x0000f8ff, X86FType1 }, /* fnstsw00 */
    { 0x0563, 0x000078dd, 0x0000f8ff, X86FType1 }, /* fnstsw01 */
    { 0x0563, 0x0000b8dd, 0x0000f8ff, X86FType1 }, /* fnstsw10 */
    { 0x07ee, 0x00000000, 0x00000000, NULL }, /* fstsw */
    { 0x0563, 0x0000e0df, 0x0000ffff, X86FTypeFSTSWAX }, /* fnstsw2 */
    { 0x07ee, 0x00000000, 0x00000000, NULL }, /* fstsw2 */
    { 0x0aa2, 0x0000e4d9, 0x0000ffff, X86FType4 }, /* ftst */
    { 0x02ee, 0x0000e0dd, 0x0000f8ff, X86FType3B }, /* fucom */
    { 0x02ef, 0x0000e8dd, 0x0000f8ff, X86FType3B }, /* fucomp */
    { 0x02f0, 0x0000e9da, 0x0000ffff, X86FType4 }, /* fucompp */
    { 0x0aa7, 0x0000e5d9, 0x0000ffff, X86FType4 }, /* fxam */
    { 0x0aac, 0x0000c8d9, 0x0000f8ff, X86FType3B }, /* fxch */
    { 0x02f8, 0x0008ae0f, 0x00f8ffff, X86ModRM_24 }, /* fxrstor00 */
    { 0x02f8, 0x0048ae0f, 0x00f8ffff, X86ModRM_24 }, /* fxrstor01 */
    { 0x02f8, 0x0088ae0f, 0x00f8ffff, X86ModRM_24 }, /* fxrstor10 */
    { 0x056a, 0x0000ae0f, 0x00f8ffff, X86ModRM_24 }, /* fxsave00 */
    { 0x056a, 0x0040ae0f, 0x00f8ffff, X86ModRM_24 }, /* fxsave01 */
    { 0x056a, 0x0080ae0f, 0x00f8ffff, X86ModRM_24 }, /* fxsave10 */
    { 0x0300, 0x0000f4d9, 0x0000ffff, X86FType4 }, /* fxtract */
    { 0x0308, 0x0000f1d9, 0x0000ffff, X86FType4 }, /* fyl2x */
    { 0x0309, 0x0000f9d9, 0x0000ffff, X86FType4 }, /* fyl2xp1 */
    { 0x0571, 0x0000f0db, 0x0000f8ff, X86FType3C }, /* fcomi */
    { 0x0572, 0x0000f0df, 0x0000f8ff, X86FType3C }, /* fcomip */
    { 0x0311, 0x0000e8db, 0x0000f8ff, X86FType3C }, /* fucomi */
    { 0x0312, 0x0000e8df, 0x0000f8ff, X86FType3C }, /* fucomip */
    { 0x07f4, 0x00000e0f, 0x0000ffff, X86NoOp_16 }, /* femms */
    { 0x0001, 0x00000d0f, 0x0018ffff, X86ModRM_24 }, /* prefetch */
    { 0x0062, 0x00080d0f, 0x0018ffff, X86ModRM_24 }, /* prefetchw */
    { 0x07fb, 0x00000f0f, 0x0000ffff, X86_3DNow }, /* prefix3dnow */
    { 0x031a, 0x000000bf, 0x00000000, NULL }, /* pavgusb */
    { 0x0801, 0x0000001d, 0x00000000, NULL }, /* pf2id */
    { 0x0807, 0x0000001c, 0x00000000, NULL }, /* pf2iw */
    { 0x080d, 0x000000ae, 0x00000000, NULL }, /* pfacc */
    { 0x0813, 0x0000009e, 0x00000000, NULL }, /* pfadd */
    { 0x0322, 0x000000b0, 0x00000000, NULL }, /* pfcmpeq */
    { 0x032a, 0x00000090, 0x00000000, NULL }, /* pfcmpge */
    { 0x0332, 0x000000a0, 0x00000000, NULL }, /* pfcmpgt */
    { 0x0819, 0x000000a4, 0x00000000, NULL }, /* pfmax */
    { 0x081f, 0x00000094, 0x00000000, NULL }, /* pfmin */
    { 0x0825, 0x000000b4, 0x00000000, NULL }, /* pfmul */
    { 0x0579, 0x0000008a, 0x00000000, NULL }, /* pfnacc */
    { 0x033a, 0x0000008e, 0x00000000, NULL }, /* pfpnacc */
    { 0x010e, 0x00000096, 0x00000000, NULL }, /* pfrcp */
    { 0x010f, 0x000000a6, 0x00000000, NULL }, /* pfrcpit1 */
    { 0x0118, 0x000000b6, 0x00000000, NULL }, /* pfrcpit2 */
    { 0x0121, 0x000000a7, 0x00000000, NULL }, /* pfrsqit1 */
    { 0x0342, 0x00000097, 0x00000000, NULL }, /* pfrsqrt */
    { 0x0580, 0x0000009a, 0x00000000, NULL }, /* pfsub */
    { 0x0581, 0x000000aa, 0x00000000, NULL }, /* pfsubr */
    { 0x082b, 0x0000000d, 0x00000000, NULL }, /* pi2fd */
    { 0x0831, 0x0000000c, 0x00000000, NULL }, /* pi2fw */
    { 0x034a, 0x000000b7, 0x00000000, NULL }, /* pmulhrw */
    { 0x0588, 0x000000bb, 0x00000000, NULL }, /* pswapd */

    /* Table_2 */

    { 0x06a3, 0x0000580f, 0x0000ffff, X86XMMRegModRM }, /* addps */
    { 0x0590, 0x0000550f, 0x0000ffff, X86XMMRegModRM }, /* andnps */
    { 0x0837, 0x0000540f, 0x0000ffff, X86XMMRegModRM }, /* andps */
    { 0x0354, 0x0038ae0f, 0x00f8ffff, X86ModRM_24 }, /* clflush00 */
    { 0x0354, 0x0078ae0f, 0x00f8ffff, X86ModRM_24 }, /* clflush01 */
    { 0x0354, 0x00b8ae0f, 0x00f8ffff, X86ModRM_24 }, /* clflush10 */
    { 0x083d, 0x0000c20f, 0x0000ffff, X86XMMRegModRMImm }, /* cmpps */
    { 0x0401, 0x00002f0f, 0x0000ffff, X86XMMRegModRM32 }, /* comiss */
    { 0x012a, 0x00005b0f, 0x0000ffff, X86XMMRegModRM }, /* cvtdq2ps */
    { 0x0133, 0x00002a0f, 0x0000ffff, X86XMMRegModRMMixed }, /* cvtpi2ps */
    { 0x013c, 0x00005a0f, 0x0000ffff, X86XMMRegModRM64 }, /* cvtps2pd */
    { 0x0145, 0x00002d0f, 0x0000ffff, X86MMRegModRMMixed }, /* cvtps2pi */
    { 0x006c, 0x00002c0f, 0x0000ffff, X86MMRegModRMMixed }, /* cvttps2pi */
    { 0x0843, 0x00005e0f, 0x0000ffff, X86XMMRegModRM }, /* divps */
    { 0x07f6, 0x0000770f, 0x0000ffff, X86NoOp_16 }, /* emms */
    { 0x035e, 0x0010ae0f, 0x00f8ffff, X86ModRM_24 }, /* ldmxcsr00 */
    { 0x035e, 0x0050ae0f, 0x00f8ffff, X86ModRM_24 }, /* ldmxcsr01 */
    { 0x035e, 0x0090ae0f, 0x00f8ffff, X86ModRM_24 }, /* ldmxcsr10 */
    { 0x0597, 0x00e8ae0f, 0x00ffffff, X86NoOp_24 }, /* lfence */
    { 0x014e, 0x00c0f70f, 0x00c0ffff, X86MMRegModRM }, /* maskmovq */
    { 0x0849, 0x00005f0f, 0x0000ffff, X86XMMRegModRM }, /* maxps */
    { 0x059e, 0x00f0ae0f, 0x00ffffff, X86NoOp_24 }, /* mfence */
    { 0x084f, 0x00005d0f, 0x0000ffff, X86XMMRegModRM }, /* minps */
    { 0x0366, 0x00c8010f, 0x00ffffff, X86NoOp_24 }, /* monitor */
    { 0x05a5, 0x0000280f, 0x0000ffff, X86XMMRegModRM }, /* movaps_1 */
    { 0x05a5, 0x0000290f, 0x0000ffff, X86XMMRegModRM_Rev }, /* movaps_2 */
    { 0x0036, 0x00006e0f, 0x0000ffff, X86MMRegModRMMixed }, /* movd_1 */
    { 0x0036, 0x00007e0f, 0x0000ffff, X86MMRegModRMMixed_Rev }, /* movd_3 */
    { 0x05ac, 0x0000160f, 0x00c0ffff, X86XMMRegModRM64 }, /* movhps00_1 */
    { 0x05ac, 0x0040160f, 0x00c0ffff, X86XMMRegModRM64 }, /* movhps01_1 */
    { 0x05ac, 0x0080160f, 0x00c0ffff, X86XMMRegModRM64 }, /* movhps10_1 */
    { 0x036e, 0x00c0160f, 0x00c0ffff, X86XMMRegModRM64 }, /* movlhps */
    { 0x05ac, 0x0000170f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movhps00_2 */
    { 0x05ac, 0x0040170f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movhps01_2 */
    { 0x05ac, 0x0080170f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movhps10_2 */
    { 0x05b3, 0x0000120f, 0x00c0ffff, X86XMMRegModRM64 }, /* movlps00_1 */
    { 0x05b3, 0x0040120f, 0x00c0ffff, X86XMMRegModRM64 }, /* movlps01_1 */
    { 0x05b3, 0x0080120f, 0x00c0ffff, X86XMMRegModRM64 }, /* movlps10_1 */
    { 0x0376, 0x00c0120f, 0x00c0ffff, X86XMMRegModRM64 }, /* movhlps */
    { 0x05b3, 0x0000130f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movlps00_2 */
    { 0x05b3, 0x0040130f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movlps01_2 */
    { 0x05b3, 0x0080130f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movlps10_2 */
    { 0x0158, 0x00c0500f, 0x00c0ffff, X86RegModRMMixed }, /* movmskps */
    { 0x05ba, 0x0000c30f, 0x00c0ffff, X86RegModRM32_Rev }, /* movnti00 */
    { 0x05ba, 0x0040c30f, 0x00c0ffff, X86RegModRM32_Rev }, /* movnti01 */
    { 0x05ba, 0x0080c30f, 0x00c0ffff, X86RegModRM32_Rev }, /* movnti10 */
    { 0x037e, 0x00002b0f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntps00 */
    { 0x037e, 0x00402b0f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntps01 */
    { 0x037e, 0x00802b0f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntps10 */
    { 0x05c1, 0x0000e70f, 0x00c0ffff, X86MMRegModRM_Rev }, /* movntq00 */
    { 0x05c1, 0x0040e70f, 0x00c0ffff, X86MMRegModRM_Rev }, /* movntq01 */
    { 0x05c1, 0x0080e70f, 0x00c0ffff, X86MMRegModRM_Rev }, /* movntq10 */
    { 0x0153, 0x00006f0f, 0x0000ffff, X86MMRegModRM }, /* movq_1 */
    { 0x0153, 0x00007f0f, 0x0000ffff, X86MMRegModRM_Rev }, /* movq_3 */
    { 0x05c8, 0x0000100f, 0x0000ffff, X86XMMRegModRM }, /* movups_1 */
    { 0x05c8, 0x0000110f, 0x0000ffff, X86XMMRegModRM_Rev }, /* movups_2 */
    { 0x0855, 0x0000590f, 0x0000ffff, X86XMMRegModRM }, /* mulps */
    { 0x085b, 0x00c9010f, 0x00ffffff, X86NoOp_24 }, /* mwait */
    { 0x08d1, 0x0000560f, 0x0000ffff, X86XMMRegModRM }, /* orps */
    { 0x0162, 0x00006b0f, 0x0000ffff, X86MMRegModRM }, /* packssdw_1 */
    { 0x016b, 0x0000630f, 0x0000ffff, X86MMRegModRM }, /* packsswb_1 */
    { 0x0174, 0x0000670f, 0x0000ffff, X86MMRegModRM }, /* packuswb_1 */
    { 0x0861, 0x0000fc0f, 0x0000ffff, X86MMRegModRM }, /* paddb_1 */
    { 0x0867, 0x0000fe0f, 0x0000ffff, X86MMRegModRM }, /* paddd_1 */
    { 0x086d, 0x0000d40f, 0x0000ffff, X86MMRegModRM }, /* paddq_1 */
    { 0x05cf, 0x0000ec0f, 0x0000ffff, X86MMRegModRM }, /* paddsb_1 */
    { 0x05d6, 0x0000ed0f, 0x0000ffff, X86MMRegModRM }, /* paddsw_1 */
    { 0x0386, 0x0000dc0f, 0x0000ffff, X86MMRegModRM }, /* paddusb_1 */
    { 0x038e, 0x0000dd0f, 0x0000ffff, X86MMRegModRM }, /* paddusw_1 */
    { 0x0873, 0x0000fd0f, 0x0000ffff, X86MMRegModRM }, /* paddw_1 */
    { 0x0879, 0x0000db0f, 0x0000ffff, X86MMRegModRM }, /* pand_1 */
    { 0x087a, 0x0000df0f, 0x0000ffff, X86MMRegModRM }, /* pandn_1 */
    { 0x0880, 0x0000e00f, 0x0000ffff, X86MMRegModRM }, /* pavgb_1 */
    { 0x0886, 0x0000e30f, 0x0000ffff, X86MMRegModRM }, /* pavgw_1 */
    { 0x0396, 0x0000740f, 0x0000ffff, X86MMRegModRM }, /* pcmpeqb_1 */
    { 0x039e, 0x0000760f, 0x0000ffff, X86MMRegModRM }, /* pcmpeqd_1 */
    { 0x03a6, 0x0000750f, 0x0000ffff, X86MMRegModRM }, /* pcmpeqw_1 */
    { 0x03ae, 0x0000640f, 0x0000ffff, X86MMRegModRM }, /* pcmpgtb_1 */
    { 0x03b6, 0x0000660f, 0x0000ffff, X86MMRegModRM }, /* pcmpgtd_1 */
    { 0x03be, 0x0000650f, 0x0000ffff, X86MMRegModRM }, /* pcmpgtw_1 */
    { 0x05dd, 0x00c0c50f, 0x00c0ffff, X86RegModRMMixedImm }, /* pextrw_1 */
    { 0x05e4, 0x0000c40f, 0x00c0ffff, X86MMRegModRMMixedImm }, /* pinsrw00_1 */
    { 0x05e4, 0x0040c40f, 0x00c0ffff, X86MMRegModRMMixedImm }, /* pinsrw01_1 */
    { 0x05e4, 0x0080c40f, 0x00c0ffff, X86MMRegModRMMixedImm }, /* pinsrw10_1 */
    { 0x05e4, 0x00c0c40f, 0x00c0ffff, X86MMRegModRMMixedImm }, /* pinsrw11_1 */
    { 0x03c6, 0x0000f50f, 0x0000ffff, X86MMRegModRM }, /* pmaddwd_1 */
    { 0x05ec, 0x0000ee0f, 0x0000ffff, X86MMRegModRM }, /* pmaxsw_1 */
    { 0x05f4, 0x0000de0f, 0x0000ffff, X86MMRegModRM }, /* pmaxub_1 */
    { 0x05fb, 0x0000ea0f, 0x0000ffff, X86MMRegModRM }, /* pminsw_1 */
    { 0x0602, 0x0000da0f, 0x0000ffff, X86MMRegModRM }, /* pminub_1 */
    { 0x017d, 0x00c0d70f, 0x00c0ffff, X86RegModRMMixed }, /* pmovmskb_1 */
    { 0x03ce, 0x0000e40f, 0x0000ffff, X86MMRegModRM }, /* pmulhuw_1 */
    { 0x0609, 0x0000e50f, 0x0000ffff, X86MMRegModRM }, /* pmulhw_1 */
    { 0x0610, 0x0000d50f, 0x0000ffff, X86MMRegModRM }, /* pmullw_1 */
    { 0x03d6, 0x0000f40f, 0x0000ffff, X86MMRegModRM }, /* pmuludq_1 */
    { 0x0baa, 0x0000eb0f, 0x0000ffff, X86MMRegModRM }, /* por_1 */
    { 0x0002, 0x0000180f, 0x00f8ffff, X86ModRM_24 }, /* prefetchnta00 */
    { 0x0002, 0x0040180f, 0x00f8ffff, X86ModRM_24 }, /* prefetchnta01 */
    { 0x0002, 0x0080180f, 0x00f8ffff, X86ModRM_24 }, /* prefetchnta10 */
    { 0x000f, 0x0008180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht000 */
    { 0x000f, 0x0048180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht001 */
    { 0x000f, 0x0088180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht010 */
    { 0x001a, 0x0010180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht100 */
    { 0x001a, 0x0050180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht101 */
    { 0x001a, 0x0090180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht110 */
    { 0x0025, 0x0018180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht200 */
    { 0x0025, 0x0058180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht201 */
    { 0x0025, 0x0098180f, 0x00f8ffff, X86ModRM_24 }, /* prefetcht210 */
    { 0x0617, 0x0000f60f, 0x0000ffff, X86MMRegModRM }, /* psadbw_1 */
    { 0x061e, 0x0000700f, 0x0000ffff, X86MMRegModRMImm }, /* pshufw */
    { 0x0683, 0x00f0720f, 0x00f8ffff, X86MMRegImm }, /* pslld_1 */
    { 0x0683, 0x0000f20f, 0x0000ffff, X86MMRegModRM }, /* pslld_3 */
    { 0x088c, 0x00f0730f, 0x00f8ffff, X86MMRegImm }, /* psllq_1 */
    { 0x088c, 0x0000f30f, 0x0000ffff, X86MMRegModRM }, /* psllq_3 */
    { 0x0892, 0x00f0710f, 0x00f8ffff, X86MMRegImm }, /* psllw_1 */
    { 0x0892, 0x0000f10f, 0x0000ffff, X86MMRegModRM }, /* psllw_3 */
    { 0x0898, 0x00e0720f, 0x00f8ffff, X86MMRegImm }, /* psrad_1 */
    { 0x0898, 0x0000e20f, 0x0000ffff, X86MMRegModRM }, /* psrad_3 */
    { 0x089e, 0x00e0710f, 0x00f8ffff, X86MMRegImm }, /* psraw_1 */
    { 0x089e, 0x0000e10f, 0x0000ffff, X86MMRegModRM }, /* psraw_3 */
    { 0x068b, 0x00d0720f, 0x00f8ffff, X86MMRegImm }, /* psrld_1 */
    { 0x068b, 0x0000d20f, 0x0000ffff, X86MMRegModRM }, /* psrld_3 */
    { 0x08a4, 0x00d0730f, 0x00f8ffff, X86MMRegImm }, /* psrlq_1 */
    { 0x08a4, 0x0000d30f, 0x0000ffff, X86MMRegModRM }, /* psrlq_3 */
    { 0x08aa, 0x00d0710f, 0x00f8ffff, X86MMRegImm }, /* psrlw_1 */
    { 0x08aa, 0x0000d10f, 0x0000ffff, X86MMRegModRM }, /* psrlw_3 */
    { 0x08b0, 0x0000f80f, 0x0000ffff, X86MMRegModRM }, /* psubb_1 */
    { 0x08b6, 0x0000fa0f, 0x0000ffff, X86MMRegModRM }, /* psubd_1 */
    { 0x08bc, 0x0000fb0f, 0x0000ffff, X86MMRegModRM }, /* psubq_1 */
    { 0x0625, 0x0000e80f, 0x0000ffff, X86MMRegModRM }, /* psubsb_1 */
    { 0x062c, 0x0000e90f, 0x0000ffff, X86MMRegModRM }, /* psubsw_1 */
    { 0x03de, 0x0000d80f, 0x0000ffff, X86MMRegModRM }, /* psubusb_1 */
    { 0x03e6, 0x0000d90f, 0x0000ffff, X86MMRegModRM }, /* psubusw_1 */
    { 0x08c2, 0x0000f90f, 0x0000ffff, X86MMRegModRM }, /* psubw_1 */
    { 0x0076, 0x0000680f, 0x0000ffff, X86MMRegModRM }, /* punpckhbw_1 */
    { 0x0080, 0x00006a0f, 0x0000ffff, X86MMRegModRM }, /* punpckhdq_1 */
    { 0x008a, 0x0000690f, 0x0000ffff, X86MMRegModRM }, /* punpckhwd_1 */
    { 0x0094, 0x0000600f, 0x0000ffff, X86MMRegModRM }, /* punpcklbw_1 */
    { 0x009e, 0x0000620f, 0x0000ffff, X86MMRegModRM }, /* punpckldq_1 */
    { 0x00a8, 0x0000610f, 0x0000ffff, X86MMRegModRM }, /* punpcklwd_1 */
    { 0x0ab1, 0x0000ef0f, 0x0000ffff, X86MMRegModRM }, /* pxor_1 */
    { 0x08c8, 0x0000530f, 0x0000ffff, X86XMMRegModRM }, /* rcpps */
    { 0x03ee, 0x0000520f, 0x0000ffff, X86XMMRegModRM }, /* rsqrtps */
    { 0x0633, 0x00f8ae0f, 0x00ffffff, X86NoOp_24 }, /* sfence */
    { 0x063b, 0x0000c60f, 0x0000ffff, X86XMMRegModRMImm }, /* shufps */
    { 0x03f0, 0x0000510f, 0x0000ffff, X86XMMRegModRM }, /* sqrtps */
    { 0x03f7, 0x0018ae0f, 0x00f8ffff, X86ModRM_24 }, /* stmxcsr00 */
    { 0x03f7, 0x0058ae0f, 0x00f8ffff, X86ModRM_24 }, /* stmxcsr01 */
    { 0x03f7, 0x0098ae0f, 0x00f8ffff, X86ModRM_24 }, /* stmxcsr10 */
    { 0x01e8, 0x00005c0f, 0x0000ffff, X86XMMRegModRM }, /* subps */
    { 0x03ff, 0x00002e0f, 0x0000ffff, X86XMMRegModRM32 }, /* ucomiss */
    { 0x0186, 0x0000150f, 0x0000ffff, X86XMMRegModRM }, /* unpckhps */
    { 0x018f, 0x0000140f, 0x0000ffff, X86XMMRegModRM }, /* unpcklps */
    { 0x08cf, 0x0000570f, 0x0000ffff, X86XMMRegModRM }, /* xorps */

    /* Table_3 */

    { 0x064c, 0x0000580f, 0x0000ffff, X86XMMRegModRM }, /* addpd */
    { 0x0199, 0x0000d00f, 0x0000ffff, X86XMMRegModRM }, /* addsubpd */
    { 0x0642, 0x0000550f, 0x0000ffff, X86XMMRegModRM }, /* andnpd */
    { 0x08d6, 0x0000540f, 0x0000ffff, X86XMMRegModRM }, /* andpd */
    { 0x08dc, 0x0000c20f, 0x0000ffff, X86XMMRegModRMImm }, /* cmppd */
    { 0x041a, 0x00002f0f, 0x0000ffff, X86XMMRegModRM64 }, /* comisd */
    { 0x01a5, 0x00002d0f, 0x0000ffff, X86MMRegModRMMixed }, /* cvtpd2pi */
    { 0x01ae, 0x00005a0f, 0x0000ffff, X86XMMRegModRM }, /* cvtpd2ps */
    { 0x01b7, 0x00002a0f, 0x0000ffff, X86XMMRegModRMMixed }, /* cvtpi2pd */
    { 0x01c0, 0x00005b0f, 0x0000ffff, X86XMMRegModRM }, /* cvtps2dq */
    { 0x00b2, 0x0000e60f, 0x0000ffff, X86XMMRegModRM }, /* cvttpd2dq */
    { 0x00bc, 0x00002c0f, 0x0000ffff, X86MMRegModRMMixed }, /* cvttpd2pi */
    { 0x08e2, 0x00005e0f, 0x0000ffff, X86XMMRegModRM }, /* divpd */
    { 0x064a, 0x00007c0f, 0x0000ffff, X86XMMRegModRM }, /* haddpd */
    { 0x0652, 0x00007d0f, 0x0000ffff, X86XMMRegModRM }, /* hsubpd */
    { 0x0030, 0x00c0f70f, 0x00c0ffff, X86XMMRegModRM }, /* maskmovdqu */
    { 0x08e8, 0x00005f0f, 0x0000ffff, X86XMMRegModRM }, /* maxpd */
    { 0x08ee, 0x00005d0f, 0x0000ffff, X86XMMRegModRM }, /* minpd */
    { 0x0659, 0x0000280f, 0x0000ffff, X86XMMRegModRM }, /* movapd_1 */
    { 0x0659, 0x0000290f, 0x0000ffff, X86XMMRegModRM_Rev }, /* movapd_2 */
    { 0x0036, 0x00006e0f, 0x0000ffff, X86XMMRegModRMMixed }, /* movd_2 */
    { 0x0036, 0x00007e0f, 0x0000ffff, X86XMMRegModRMMixed_Rev }, /* movd_4 */
    { 0x0660, 0x00006f0f, 0x0000ffff, X86XMMRegModRM }, /* movdqa_1 */
    { 0x0660, 0x00007f0f, 0x0000ffff, X86XMMRegModRM_Rev }, /* movdqa_2 */
    { 0x0667, 0x0000160f, 0x00c0ffff, X86XMMRegModRM64 }, /* movhpd00_1 */
    { 0x0667, 0x0040160f, 0x00c0ffff, X86XMMRegModRM64 }, /* movhpd01_1 */
    { 0x0667, 0x0080160f, 0x00c0ffff, X86XMMRegModRM64 }, /* movhpd10_1 */
    { 0x0667, 0x0000170f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movhpd00_2 */
    { 0x0667, 0x0040170f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movhpd01_2 */
    { 0x0667, 0x0080170f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movhpd10_2 */
    { 0x066e, 0x0000120f, 0x00c0ffff, X86XMMRegModRM64 }, /* movlpd00_1 */
    { 0x066e, 0x0040120f, 0x00c0ffff, X86XMMRegModRM64 }, /* movlpd01_1 */
    { 0x066e, 0x0080120f, 0x00c0ffff, X86XMMRegModRM64 }, /* movlpd10_1 */
    { 0x066e, 0x0000130f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movlpd00_2 */
    { 0x066e, 0x0040130f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movlpd01_2 */
    { 0x066e, 0x0080130f, 0x00c0ffff, X86XMMRegModRM64_Rev }, /* movlpd10_2 */
    { 0x01c9, 0x00c0500f, 0x00c0ffff, X86RegModRMMixed }, /* movmskpd */
    { 0x0408, 0x0000e70f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntdq00 */
    { 0x0408, 0x0040e70f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntdq01 */
    { 0x0408, 0x0080e70f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntdq10 */
    { 0x0410, 0x00002b0f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntpd00 */
    { 0x0410, 0x00402b0f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntpd01 */
    { 0x0410, 0x00802b0f, 0x00c0ffff, X86XMMRegModRM_Rev }, /* movntpd10 */
    { 0x0153, 0x0000d60f, 0x0000ffff, X86XMMRegModRM64_Rev }, /* movq_4 */
    { 0x0675, 0x0000100f, 0x0000ffff, X86XMMRegModRM }, /* movupd_1 */
    { 0x0675, 0x0000110f, 0x0000ffff, X86XMMRegModRM_Rev }, /* movupd_2 */
    { 0x08f4, 0x0000590f, 0x0000ffff, X86XMMRegModRM }, /* mulpd */
    { 0x08fd, 0x0000560f, 0x0000ffff, X86XMMRegModRM }, /* orpd */
    { 0x0162, 0x00006b0f, 0x0000ffff, X86XMMRegModRM }, /* packssdw_2 */
    { 0x016b, 0x0000630f, 0x0000ffff, X86XMMRegModRM }, /* packsswb_2 */
    { 0x0174, 0x0000670f, 0x0000ffff, X86XMMRegModRM }, /* packuswb_2 */
    { 0x0861, 0x0000fc0f, 0x0000ffff, X86XMMRegModRM }, /* paddb_2 */
    { 0x0867, 0x0000fe0f, 0x0000ffff, X86XMMRegModRM }, /* paddd_2 */
    { 0x086d, 0x0000d40f, 0x0000ffff, X86XMMRegModRM }, /* paddq_2 */
    { 0x05cf, 0x0000ec0f, 0x0000ffff, X86XMMRegModRM }, /* paddsb_2 */
    { 0x05d6, 0x0000ed0f, 0x0000ffff, X86XMMRegModRM }, /* paddsw_2 */
    { 0x0386, 0x0000dc0f, 0x0000ffff, X86XMMRegModRM }, /* paddusb_2 */
    { 0x038e, 0x0000dd0f, 0x0000ffff, X86XMMRegModRM }, /* paddusw_2 */
    { 0x0873, 0x0000fd0f, 0x0000ffff, X86XMMRegModRM }, /* paddw_2 */
    { 0x0879, 0x0000db0f, 0x0000ffff, X86XMMRegModRM }, /* pand_2 */
    { 0x087a, 0x0000df0f, 0x0000ffff, X86XMMRegModRM }, /* pandn_2 */
    { 0x0880, 0x0000e00f, 0x0000ffff, X86XMMRegModRM }, /* pavgb_2 */
    { 0x0886, 0x0000e30f, 0x0000ffff, X86XMMRegModRM }, /* pavgw_2 */
    { 0x0396, 0x0000740f, 0x0000ffff, X86XMMRegModRM }, /* pcmpeqb_2 */
    { 0x039e, 0x0000760f, 0x0000ffff, X86XMMRegModRM }, /* pcmpeqd_2 */
    { 0x03a6, 0x0000750f, 0x0000ffff, X86XMMRegModRM }, /* pcmpeqw_2 */
    { 0x03ae, 0x0000640f, 0x0000ffff, X86XMMRegModRM }, /* pcmpgtb_2 */
    { 0x03b6, 0x0000660f, 0x0000ffff, X86XMMRegModRM }, /* pcmpgtd_2 */
    { 0x03be, 0x0000650f, 0x0000ffff, X86XMMRegModRM }, /* pcmpgtw_2 */
    { 0x05dd, 0x00c0c50f, 0x00c0ffff, X86RegModRMMixedImm }, /* pextrw_2 */
    { 0x05e4, 0x0000c40f, 0x00c0ffff, X86XMMRegModRMMixedImm }, /* pinsrw00_2 */
    { 0x05e4, 0x0040c40f, 0x00c0ffff, X86XMMRegModRMMixedImm }, /* pinsrw01_2 */
    { 0x05e4, 0x0080c40f, 0x00c0ffff, X86XMMRegModRMMixedImm }, /* pinsrw10_2 */
    { 0x05e4, 0x00c0c40f, 0x00c0ffff, X86XMMRegModRMMixedImm }, /* pinsrw11_2 */
    { 0x03c6, 0x0000f50f, 0x0000ffff, X86XMMRegModRM }, /* pmaddwd_2 */
    { 0x05ec, 0x0000ee0f, 0x0000ffff, X86XMMRegModRM }, /* pmaxsw_2 */
    { 0x05f4, 0x0000de0f, 0x0000ffff, X86XMMRegModRM }, /* pmaxub_2 */
    { 0x05fb, 0x0000ea0f, 0x0000ffff, X86XMMRegModRM }, /* pminsw_2 */
    { 0x0602, 0x0000da0f, 0x0000ffff, X86XMMRegModRM }, /* pminub_2 */
    { 0x017d, 0x00c0d70f, 0x00c0ffff, X86RegModRMMixed }, /* pmovmskb_2 */
    { 0x03ce, 0x0000e40f, 0x0000ffff, X86XMMRegModRM }, /* pmulhuw_2 */
    { 0x0609, 0x0000e50f, 0x0000ffff, X86XMMRegModRM }, /* pmulhw_2 */
    { 0x0610, 0x0000d50f, 0x0000ffff, X86XMMRegModRM }, /* pmullw_2 */
    { 0x03d6, 0x0000f40f, 0x0000ffff, X86XMMRegModRM }, /* pmuludq_2 */
    { 0x0baa, 0x0000eb0f, 0x0000ffff, X86XMMRegModRM }, /* por_2 */
    { 0x0617, 0x0000f60f, 0x0000ffff, X86XMMRegModRM }, /* psadbw_2 */
    { 0x067c, 0x0000700f, 0x0000ffff, X86XMMRegModRMImm }, /* pshufd */
    { 0x0684, 0x00f8730f, 0x00f8ffff, X86XMMRegImm }, /* pslldq */
    { 0x0683, 0x00f0720f, 0x00f8ffff, X86XMMRegImm }, /* pslld_2 */
    { 0x0683, 0x0000f20f, 0x0000ffff, X86XMMRegModRM }, /* pslld_4 */
    { 0x088c, 0x00f0730f, 0x00f8ffff, X86XMMRegImm }, /* psllq_2 */
    { 0x088c, 0x0000f30f, 0x0000ffff, X86XMMRegModRM }, /* psllq_4 */
    { 0x0892, 0x00f0710f, 0x00f8ffff, X86XMMRegImm }, /* psllw_2 */
    { 0x0892, 0x0000f10f, 0x0000ffff, X86XMMRegModRM }, /* psllw_4 */
    { 0x0898, 0x00e0720f, 0x00f8ffff, X86XMMRegImm }, /* psrad_2 */
    { 0x0898, 0x0000e20f, 0x0000ffff, X86XMMRegModRM }, /* psrad_4 */
    { 0x089e, 0x00e0710f, 0x00f8ffff, X86XMMRegImm }, /* psraw_2 */
    { 0x089e, 0x0000e10f, 0x0000ffff, X86XMMRegModRM }, /* psraw_4 */
    { 0x068c, 0x00d8730f, 0x00f8ffff, X86XMMRegImm }, /* psrldq */
    { 0x068b, 0x00d0720f, 0x00f8ffff, X86XMMRegImm }, /* psrld_2 */
    { 0x068b, 0x0000d20f, 0x0000ffff, X86XMMRegModRM }, /* psrld_4 */
    { 0x08a4, 0x00d0730f, 0x00f8ffff, X86XMMRegImm }, /* psrlq_2 */
    { 0x08a4, 0x0000d30f, 0x0000ffff, X86XMMRegModRM }, /* psrlq_4 */
    { 0x08aa, 0x00d0710f, 0x00f8ffff, X86XMMRegImm }, /* psrlw_2 */
    { 0x08aa, 0x0000d10f, 0x0000ffff, X86XMMRegModRM }, /* psrlw_4 */
    { 0x08b0, 0x0000f80f, 0x0000ffff, X86XMMRegModRM }, /* psubb_2 */
    { 0x08b6, 0x0000fa0f, 0x0000ffff, X86XMMRegModRM }, /* psubd_2 */
    { 0x08bc, 0x0000fb0f, 0x0000ffff, X86XMMRegModRM }, /* psubq_2 */
    { 0x0625, 0x0000e80f, 0x0000ffff, X86XMMRegModRM }, /* psubsb_2 */
    { 0x062c, 0x0000e90f, 0x0000ffff, X86XMMRegModRM }, /* psubsw_2 */
    { 0x03de, 0x0000d80f, 0x0000ffff, X86XMMRegModRM }, /* psubusb_2 */
    { 0x03e6, 0x0000d90f, 0x0000ffff, X86XMMRegModRM }, /* psubusw_2 */
    { 0x08c2, 0x0000f90f, 0x0000ffff, X86XMMRegModRM }, /* psubw_2 */
    { 0x003e, 0x00006d0f, 0x0000ffff, X86XMMRegModRM }, /* punpckhqdq */
    { 0x0076, 0x0000680f, 0x0000ffff, X86XMMRegModRM }, /* punpckhbw_2 */
    { 0x0080, 0x00006a0f, 0x0000ffff, X86XMMRegModRM }, /* punpckhdq_2 */
    { 0x008a, 0x0000690f, 0x0000ffff, X86XMMRegModRM }, /* punpckhwd_2 */
    { 0x0049, 0x00006c0f, 0x0000ffff, X86XMMRegModRM }, /* punpcklqdq */
    { 0x0094, 0x0000600f, 0x0000ffff, X86XMMRegModRM }, /* punpcklbw_2 */
    { 0x009e, 0x0000620f, 0x0000ffff, X86XMMRegModRM }, /* punpckldq_2 */
    { 0x00a8, 0x0000610f, 0x0000ffff, X86XMMRegModRM }, /* punpcklwd_2 */
    { 0x0ab1, 0x0000ef0f, 0x0000ffff, X86XMMRegModRM }, /* pxor_2 */
    { 0x0693, 0x0000c60f, 0x0000ffff, X86XMMRegModRMImm }, /* shufpd */
    { 0x069a, 0x0000510f, 0x0000ffff, X86XMMRegModRM }, /* sqrtpd */
    { 0x019f, 0x00005c0f, 0x0000ffff, X86XMMRegModRM }, /* subpd */
    { 0x0418, 0x00002e0f, 0x0000ffff, X86XMMRegModRM64 }, /* ucomisd */
    { 0x01d2, 0x0000150f, 0x0000ffff, X86XMMRegModRM }, /* unpckhpd */
    { 0x01db, 0x0000140f, 0x0000ffff, X86XMMRegModRM }, /* unpcklpd */
    { 0x08fb, 0x0000570f, 0x0000ffff, X86XMMRegModRM }, /* xorpd */

    /* Table_4 */

    { 0x0902, 0x0000580f, 0x0000ffff, X86XMMRegModRM64 }, /* addsd */
    { 0x01e4, 0x0000d00f, 0x0000ffff, X86XMMRegModRM }, /* addsubps */
    { 0x0909, 0x0000c20f, 0x0000ffff, X86XMMRegModRM64Imm }, /* cmpsd */
    { 0x01ee, 0x0000e60f, 0x0000ffff, X86XMMRegModRM }, /* cvtpd2dq */
    { 0x01f7, 0x00002d0f, 0x0000ffff, X86RegModRMMixed }, /* cvtsd2si */
    { 0x0200, 0x00005a0f, 0x0000ffff, X86XMMRegModRM64 }, /* cvtsd2ss */
    { 0x0209, 0x00002a0f, 0x0000ffff, X86XMMRegModRMMixed }, /* cvtsi2sd */
    { 0x00c6, 0x00002c0f, 0x0000ffff, X86RegModRMMixed }, /* cvttsd2si */
    { 0x090f, 0x00005e0f, 0x0000ffff, X86XMMRegModRM64 }, /* divsd */
    { 0x06a1, 0x00007c0f, 0x0000ffff, X86XMMRegModRM }, /* haddps */
    { 0x06a9, 0x00007d0f, 0x0000ffff, X86XMMRegModRM }, /* hsubps */
    { 0x0915, 0x0000f00f, 0x00c0ffff, X86XMMRegModRM }, /* lddqu00 */
    { 0x0915, 0x0040f00f, 0x00c0ffff, X86XMMRegModRM }, /* lddqu01 */
    { 0x0915, 0x0080f00f, 0x00c0ffff, X86XMMRegModRM }, /* lddqu10 */
    { 0x091b, 0x00005f0f, 0x0000ffff, X86XMMRegModRM64 }, /* maxsd */
    { 0x0921, 0x00005d0f, 0x0000ffff, X86XMMRegModRM64 }, /* minsd */
    { 0x0421, 0x0000120f, 0x0000ffff, X86XMMRegModRM64 }, /* movddup */
    { 0x0429, 0x00c0d60f, 0x00c0ffff, X86MMRegModRMMixed }, /* movdq2q */
    { 0x0927, 0x0000100f, 0x0000ffff, X86XMMRegModRM64 }, /* movsd_1 */
    { 0x0927, 0x0000110f, 0x0000ffff, X86XMMRegModRM64_Rev }, /* movsd_2 */
    { 0x092d, 0x0000590f, 0x0000ffff, X86XMMRegModRM64 }, /* mulsd */
    { 0x0431, 0x0000700f, 0x0000ffff, X86XMMRegModRMImm }, /* pshuflw */
    { 0x06b0, 0x0000510f, 0x0000ffff, X86XMMRegModRM64 }, /* sqrtsd */
    { 0x0933, 0x00005c0f, 0x0000ffff, X86XMMRegModRM64 }, /* subsd */

    /* Table_5 */

    { 0x0939, 0x0000580f, 0x0000ffff, X86XMMRegModRM32 }, /* addss */
    { 0x093f, 0x0000c20f, 0x0000ffff, X86XMMRegModRM32Imm }, /* cmpss */
    { 0x0212, 0x0000e60f, 0x0000ffff, X86XMMRegModRM64 }, /* cvtdq2pd */
    { 0x021b, 0x00002a0f, 0x0000ffff, X86XMMRegModRMMixed }, /* cvtsi2ss */
    { 0x0224, 0x00005a0f, 0x0000ffff, X86XMMRegModRM32 }, /* cvtss2sd */
    { 0x022d, 0x00002d0f, 0x0000ffff, X86RegModRMMixed }, /* cvtss2si */
    { 0x00d1, 0x00005b0f, 0x0000ffff, X86XMMRegModRM }, /* cvttps2dq */
    { 0x00db, 0x00002c0f, 0x0000ffff, X86RegModRMMixed }, /* cvttss2si */
    { 0x0945, 0x00005e0f, 0x0000ffff, X86XMMRegModRM32 }, /* divss */
    { 0x094b, 0x00005f0f, 0x0000ffff, X86XMMRegModRM32 }, /* maxss */
    { 0x0951, 0x00005d0f, 0x0000ffff, X86XMMRegModRM32 }, /* minss */
    { 0x0037, 0x00006f0f, 0x0000ffff, X86XMMRegModRM }, /* movdqu_1 */
    { 0x0037, 0x00007f0f, 0x0000ffff, X86XMMRegModRM_Rev }, /* movdqu_2 */
    { 0x0153, 0x00007e0f, 0x0000ffff, X86XMMRegModRM64 }, /* movq_2 */
    { 0x0439, 0x00c0d60f, 0x00c0ffff, X86XMMRegModRMMixed }, /* movq2dq */
    { 0x0237, 0x0000160f, 0x0000ffff, X86XMMRegModRM }, /* movshdup */
    { 0x0240, 0x0000120f, 0x0000ffff, X86XMMRegModRM }, /* movsldup */
    { 0x0957, 0x0000100f, 0x0000ffff, X86XMMRegModRM32 }, /* movss_1 */
    { 0x0957, 0x0000110f, 0x0000ffff, X86XMMRegModRM32_Rev }, /* movss_2 */
    { 0x095d, 0x0000590f, 0x0000ffff, X86XMMRegModRM32 }, /* mulss */
    { 0x0964, 0x00000090, 0x00000000, NULL }, /* pause */
    { 0x0441, 0x0000700f, 0x0000ffff, X86XMMRegModRMImm }, /* pshufhw */
    { 0x096a, 0x0000530f, 0x0000ffff, X86XMMRegModRM32 }, /* rcpss */
    { 0x0449, 0x0000520f, 0x0000ffff, X86XMMRegModRM32 }, /* rsqrtss */
    { 0x044b, 0x0000510f, 0x0000ffff, X86XMMRegModRM32 }, /* sqrtss */
    { 0x0970, 0x00005c0f, 0x0000ffff, X86XMMRegModRM32 }, /* subss */

};

const unsigned short DisRegisterTable[] = {
    0x0000,
    0x09f4,
    0x0557,
    0x0009,
    0x0353,
    0x0648,
    0x050c,
    0x0c0d,
    0x0a75,
    0x05ef,
    0x06ef,
    0x08f9,
    0x0bb8,
    0x0160,
    0x0060,
    0x00ce,
    0x028d,
    0x0bae,
    0x06ed,
    0x0bb2,
    0x0bb6,
    0x0bbb,
    0x0bbf,
    0x0bc3,
    0x0bc7,
    0x00fe,
    0x0976,
    0x097c,
    0x0982,
    0x0988,
    0x098e,
    0x0994,
    0x099a,
    0x0ab8,
    0x0abe,
    0x0ac4,
    0x0aca,
    0x0ad0,
    0x0ad6,
    0x0adc,
    0x0ae2,
    0x0ab6,
    0x0abc,
    0x0ac2,
    0x0ac8,
    0x0ace,
    0x0ad4,
    0x0ada,
    0x0ae0,
    0x0bcb,
    0x0bcf,
    0x0bd3,
    0x0bd7,
    0x0bdb,
    0x0bdf,
    0x0be3,
    0x0be7,
    0x0beb,
    0x0bef,
    0x0bf3,
    0x0bf7,
    0x0bfb,
    0x0bff,
    0x0c03,
    0x0639,
    0x0268,
    0x00e0,
    0x019c,
    0x02d2,
    0x0b67,
};

const unsigned short DisRefTypeTable[] = {
    0x0000,
    0x09af,
    0x09a2,
    0x09a0,
    0x09a7,
    0x09ad,
    0x09ad,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x09a0,
    0x09a7,
    0x09b4,
    0x09a0,
    0x09b4,
    0x09b4,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
    0x0000,
};

const dis_range X86RangeTable[] = {

    /* Table_1 */

    { 0x7f, 0x01, 0x0000 },
    { 0xff, 0x00, 0x0080 },
    { 0xff, 0x00, 0x0180 },
    { 0xff, 0x00, 0x0280 },
    { 0xff, 0x00, 0x0380 },
    { 0xff, 0x00, 0x0480 },
    { 0xff, 0x00, 0x0580 },
    { 0xff, 0x00, 0x0680 },
    { 0xff, 0x00, 0x0780 },
    { 0xff, 0x00, 0x0880 },
    { 0xff, 0x00, 0x0980 },
    { 0xff, 0x00, 0x0a80 },
    { 0xff, 0x00, 0x0b80 },
    { 0xff, 0x00, 0x0c80 },
    { 0xff, 0x00, 0x0d80 },
    { 0xff, 0x00, 0x0e80 },
    { 0xff, 0x00, 0x0f80 },
    { 0xff, 0x00, 0x1080 },
    { 0xff, 0x00, 0x1180 },
    { 0xff, 0x00, 0x1280 },
    { 0xff, 0x00, 0x1380 },
    { 0xff, 0x00, 0x1480 },
    { 0xff, 0x00, 0x1580 },
    { 0x07, 0x0b, 0x1680 },
    { 0x07, 0x0b, 0x1688 },
    { 0xff, 0x00, 0x1690 },
    { 0xff, 0x00, 0x1790 },
    { 0xff, 0x00, 0x1890 },
    { 0xff, 0x00, 0x1990 },
    { 0xff, 0x00, 0x1a90 },
    { 0xff, 0x00, 0x1b90 },
    { 0x07, 0x0b, 0x1c90 },
    { 0xff, 0x00, 0x1c98 },
    { 0xff, 0x00, 0x1d98 },
    { 0xff, 0x00, 0x1e98 },
    { 0xff, 0x00, 0x1f98 },
    { 0xff, 0x00, 0x2098 },
    { 0x07, 0x0b, 0x2198 },
    { 0x07, 0x0b, 0x21a0 },
    { 0xff, 0x00, 0x21a8 },
    { 0xff, 0x00, 0x22a8 },
    { 0xff, 0x00, 0x23a8 },
    { 0xff, 0x00, 0x24a8 },
    { 0xff, 0x00, 0x25a8 },
    { 0xff, 0x00, 0x26a8 },
    { 0xff, 0x00, 0x27a8 },
    { 0xff, 0x00, 0x28a8 },
    { 0xff, 0x00, 0x29a8 },
    { 0xff, 0x00, 0x2aa8 },
    { 0xff, 0x00, 0x2ba8 },
    { 0x07, 0x0b, 0x2ca8 },
    { 0xff, 0x00, 0x2cb0 },
    { 0xff, 0x00, 0x2db0 },
    { 0xff, 0x00, 0x2eb0 },
    { 0x07, 0x0b, 0x2fb0 },
    { 0xff, 0x08, 0x2fb8 },
    { 0x1f, 0x0b, 0x30b8 },
    { 0x1f, 0x0b, 0x30d8 },
    { 0x1f, 0x0b, 0x30f8 },
    { 0x03, 0x0b, 0x3118 },
    { 0x1f, 0x0b, 0x311c },
    { 0x1f, 0x0b, 0x313c },
    { 0x1f, 0x0b, 0x315c },
    { 0x03, 0x0b, 0x317c },
    { 0x1f, 0x0b, 0x3180 },
    { 0x03, 0x0b, 0x31a0 },
    { 0x1f, 0x0b, 0x31a4 },
    { 0x1f, 0x0b, 0x31c4 },
    { 0x1f, 0x0b, 0x31e4 },
    { 0x03, 0x0b, 0x3204 },
    { 0x1f, 0x0b, 0x3208 },
    { 0x1f, 0x0b, 0x3228 },
    { 0x07, 0x13, 0x3248 },
    { 0x07, 0x13, 0x3250 },
    { 0x01, 0x13, 0x3258 },
    { 0x01, 0x13, 0x325a },
    { 0x07, 0x13, 0x325c },
    { 0xff, 0x01, 0x3264 },
    { 0xff, 0x08, 0x3364 },
    { 0xff, 0x08, 0x3464 },
    { 0xff, 0x08, 0x3564 },
    { 0x03, 0x0e, 0x3664 },
    { 0x03, 0x0e, 0x3668 },
    { 0x03, 0x0e, 0x366c },
    { 0xff, 0x08, 0x3670 },
    { 0x03, 0x0e, 0x3770 },
    { 0x03, 0x0e, 0x3774 },
    { 0x03, 0x0e, 0x3778 },
    { 0x03, 0x0e, 0x377c },
    { 0x03, 0x0e, 0x3780 },
    { 0x03, 0x0e, 0x3784 },
    { 0x03, 0x0e, 0x3788 },
    { 0x03, 0x0e, 0x378c },
    { 0x03, 0x0e, 0x3790 },
    { 0x03, 0x0e, 0x3794 },
    { 0x03, 0x0e, 0x3798 },
    { 0x1f, 0x13, 0x379c },
    { 0x03, 0x16, 0x37bc },
    { 0x03, 0x16, 0x37c0 },
    { 0x3f, 0x0a, 0x37c4 },
    { 0x3f, 0x0a, 0x3804 },

    /* Table_2 */

    { 0x0f, 0x00, 0x3844 },
    { 0xff, 0x08, 0x3854 },
    { 0xff, 0x09, 0x3954 },
    { 0x03, 0x16, 0x3a54 },
    { 0x03, 0x16, 0x3a58 },
    { 0x03, 0x16, 0x3a5c },
    { 0x03, 0x16, 0x3a60 },
    { 0x03, 0x13, 0x3a64 },
    { 0x03, 0x16, 0x3a68 },
    { 0x0f, 0x14, 0x3a6c },
    { 0x0f, 0x14, 0x3a7c },
    { 0x0f, 0x14, 0x3a8c },
    { 0x1f, 0x13, 0x3a9c },
    { 0x03, 0x16, 0x3abc },
    { 0x03, 0x16, 0x3ac0 },
    { 0x03, 0x16, 0x3ac4 },
    { 0x03, 0x16, 0x3ac8 },
    { 0x03, 0x16, 0x3acc },
    { 0x03, 0x16, 0x3ad0 },
    { 0x03, 0x16, 0x3ad4 },

    /* Table_3 */

    { 0x0f, 0x00, 0x3ad8 },
    { 0xff, 0x08, 0x3ae8 },
    { 0x03, 0x16, 0x3be8 },
    { 0x03, 0x16, 0x3bec },
    { 0x03, 0x16, 0x3bf0 },
    { 0x03, 0x16, 0x3bf4 },
    { 0x03, 0x16, 0x3bf8 },
    { 0x0f, 0x14, 0x3bfc },
    { 0x0f, 0x14, 0x3c0c },
    { 0x1f, 0x13, 0x3c1c },
    { 0x03, 0x16, 0x3c3c },
    { 0x03, 0x16, 0x3c40 },

    /* Table_4 */

    { 0x0f, 0x00, 0x3c44 },
    { 0xff, 0x08, 0x3c54 },
    { 0x03, 0x16, 0x3d54 },

    /* Table_5 */

    { 0x0f, 0x00, 0x3d58 },
    { 0xff, 0x08, 0x3d68 },
};

const int X86RangeTablePos[] = {
    0,
    101,
    121,
    133,
    136,
    -1
};

const dis_selector DisSelectorTable[] = {
/*0000*/  21,  21,  22,  -1, 176, 176, 177,  -2,  18,  18,  19,  -3, 222, 222, 223,  -4,
/*0010*/  24,  24,  25,  -5, 263, 263, 264,  -6, 281, 281, 282,  -7,  51,  51,  52,  -8,
/*0020*/  90,  90,  90,  90,  79,  79,  79,  79, 192, 192, 192, 192, 183, 183, 183, 183,
/*0030*/  -9, -10, -11, -12, -13, -14,  91, 181, -15, -16, -17, -18, -19, -20, -21, -22,
/*0040*/ -23, -24, 268, 278, 162, 162, -25, -26, 279, 279, 279, 279, -27, -28, -29, -30,
/*0050*/ 165, 165, 170,  54, 269, 261, 150, 225, 164, 164, 164, 164, 164, 164, 164, 164,
/*0060*/ -31, -32, -33, 163, -34, -35,  92, -36, -37, -38, -39, 280, -40, -41, -42, -43,
/*0070*/ -44, -45,  87, 179, -46, -47,  88, 180,  12, -48, -49, -50, -51, -52, -53, -54,
/*0080*/   0,   0,   0,   0,   0,   0, 193, 184,   0,   0,   0,   0,   0,   0, 193,   0,
/*0090*/   0,   0,   0,   0,   0,   0, 193,   0,   0,   0,   0,   0,   0,   0, 193,   0,
/*00a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*00b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*00c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*00d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*00e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*00f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0100*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0110*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0120*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0130*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0140*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0150*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0160*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0170*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0180*/   0,   0,   0,   0,   0,   0, 193,   0,   0,   0,   0,   0,   0,   0, 193, -55,
/*0190*/   0,   0,   0,   0,   0,   0, 193,   0,   0,   0,   0,   0,   0,   0, 193,   0,
/*01a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*01b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*01c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*01d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*01e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*01f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0200*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0210*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0220*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0230*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0240*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0250*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0260*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0270*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0280*/   0,   0,   0,   0,   0,   0, 193,   0,   0,   0,   0,   0,   0,   0, 193,   0,
/*0290*/   0,   0,   0,   0,   0,   0, 193, 185,   0,   0,   0,   0,   0,   0, 193,   0,
/*02a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*02b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*02c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*02d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*02e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*02f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0300*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0310*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0320*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0330*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0340*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0350*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0360*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0370*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0380*/   0,   0,   0,   0,   0,   0, 193,   0,   0,   0,   0,   0,   0,   0, 193,   0,
/*0390*/   0,   0,   0,   0,   0,   0, 193,   0,   0,   0,   0,   0,   0,   0, 193, 186,
/*03a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*03b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*03c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*03d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*03e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*03f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0400*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0410*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0420*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0430*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0440*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0450*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0460*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0470*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0480*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0490*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*04a0*/   0,   0,   0,   0,   0,   0,   9,  76,   0,   0,   0,   0,   0,   0,   0,   0,
/*04b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*04c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*04d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*04e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*04f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0500*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0510*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0520*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0530*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0540*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0550*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0560*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0570*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0580*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0590*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*05a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   6,  77,
/*05b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*05c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*05d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*05e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*05f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0600*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0610*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0620*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0630*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0640*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0650*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0660*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0670*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0680*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0690*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*06a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*06b0*/   0,   0,   0,   0,   0,   0,   7,  14,   0,   0,   0,   0,   0,   0,   0,   0,
/*06c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*06d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*06e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*06f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0700*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0710*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0720*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0730*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0740*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0750*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0760*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0770*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0780*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0790*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*07a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*07b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   8,  17,
/*07c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*07d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*07e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*07f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0800*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0810*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0820*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0830*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0840*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0850*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0860*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0870*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0880*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0890*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*08a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*08b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*08c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*08d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*08e0*/ 201, 197,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*08f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0900*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0910*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0920*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0930*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0940*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0950*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0960*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0970*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0980*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0990*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*09a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*09b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*09c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*09d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*09e0*/   0,   0,  28,  27,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*09f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0a90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0aa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ab0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ac0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ad0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ae0*/   0,   0,   0,   0,  10,  11,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0af0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0b90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ba0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0bb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0bc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0bd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0be0*/   0,   0,   0,   0,   0,   0,   1,   2,   0,   0,   0,   0,   0,   0,   0,   0,
/*0bf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0c90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ca0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0cb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0cc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0cd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ce0*/   0,   0,   0,   0,   0,   0,   0,   0, 196,  86, 196,  86,   0,   0,   0,   0,
/*0cf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0d90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0da0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0db0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0dc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0dd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0de0*/   0,   0,   0,   0,   0,   0,   0,   0, 196,  86, 196,  86,   0,   0,   0,   0,
/*0df0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0e90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ea0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0eb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ec0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ed0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ee0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ef0*/  98,  99,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0f90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0fa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0fb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0fc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0fd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0fe0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*0ff0*/   0,   0, 100, 101,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1000*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1010*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1020*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1030*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1040*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1050*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1060*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1070*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1080*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1090*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*10a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*10b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*10c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*10d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*10e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*10f0*/   0,   0,   0,   0, 102, 103,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1100*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1110*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1120*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1130*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1140*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1150*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1160*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1170*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1180*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1190*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*11a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*11b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*11c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*11d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*11e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*11f0*/   0,   0,   0,   0,   0,   0, 104, 105,   0,   0,   0,   0,   0,   0,   0,   0,
/*1200*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1210*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1220*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1230*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1240*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1250*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1260*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1270*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1280*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1290*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*12a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*12b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*12c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*12d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*12e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*12f0*/   0,   0,   0,   0,   0,   0,   0,   0, 106, 107,   0,   0,   0,   0,   0,   0,
/*1300*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1310*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1320*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1330*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1340*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1350*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1360*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1370*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1380*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1390*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*13a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*13b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*13c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*13d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*13e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*13f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 108, 109,   0,   0,   0,   0,
/*1400*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1410*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1420*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1430*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1440*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1450*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1460*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1470*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1480*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1490*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*14a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*14b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*14c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*14d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*14e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*14f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 110, 111,   0,   0,
/*1500*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1510*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1520*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1530*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1540*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1550*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1560*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1570*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1580*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1590*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*15a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*15b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*15c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*15d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*15e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*15f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 112, 113,
/*1600*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1610*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1620*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1630*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1640*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1650*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1660*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1670*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1680*/  23, 178,  20, 224,  26, 265, 283,  53,  23, 178,  20, 224,  26, 265, 283,  53,
/*1690*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*16a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*16b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*16c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*16d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*16e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*16f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1700*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1710*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 168, 144, 168,   0,
/*1720*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1730*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1740*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1750*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1760*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1770*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1780*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1790*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*17a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*17b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*17c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*17d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*17e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*17f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1800*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1810*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 168,   0, 168, 182,
/*1820*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1830*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1840*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1850*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1860*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1870*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1880*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1890*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*18a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*18b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*18c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*18d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*18e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*18f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1900*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1910*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1920*/   0,   0,   0,   0,   0,   0,   0,   0,  44,  74,   0,   0,   0,   0,   0,   0,
/*1930*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1940*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1950*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1960*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1970*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1980*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1990*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*19a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*19b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*19c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*19d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*19e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*19f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  42,  13,   0,   0,   0,   0,
/*1a30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1a90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1aa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ab0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ac0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ad0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ae0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1af0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 203, 199,   0,   0,
/*1b30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1b90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ba0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1bb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1bc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1bd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1be0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1bf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 221, 137,
/*1c30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1c90*/ 219, 217, 206, 208, 243, 245,   0, 247,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ca0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1cb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1cc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1cd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ce0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1cf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 213, 212,   0,   0,   0,   0,
/*1d60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1d90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1da0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1db0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1dc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1dd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1de0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1df0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 140, 139,   0,   0,
/*1e60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1e90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ea0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1eb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ec0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ed0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ee0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ef0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f60*/  81, 145,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1f90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1fa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1fb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1fc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1fd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1fe0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*1ff0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2000*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2010*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2020*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2030*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2040*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2050*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2060*/   0,   0, 215, 214,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2070*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2080*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2090*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*20a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*20b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*20c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*20d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*20e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*20f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2100*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2110*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2120*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2130*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2140*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2150*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2160*/   0,   0,   0,   0,   0,   0,  93,  96,   0,   0,   0,   0,   0,   0,   0,   0,
/*2170*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2180*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2190*/   0,   0,   0,   0,   0,   0,   0,   0, 218, 216, 205, 207, 242, 244,   0, 246,
/*21a0*/ 218, 216, 205, 207, 242, 244,   0, 246,   0,   0,   0,   0,   0,   0,   0,   0,
/*21b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*21c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*21d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*21e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*21f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2200*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2210*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2220*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2230*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2240*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2250*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2260*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2270*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  16,  15,   0,   0,
/*2280*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2290*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*22a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*22b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*22c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*22d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*22e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*22f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2300*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2310*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2320*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2330*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2340*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2350*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2360*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2370*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2380*/ -56, -57,   0,   0, -58, -59,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2390*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*23a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*23b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*23c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*23d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*23e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*23f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2400*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2410*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2420*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2430*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2440*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2450*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2460*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2470*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2480*/   0,   0, -60, -61,   0,   0, -62, -63,   0,   0,   0,   0,   0,   0,   0,   0,
/*2490*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*24a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*24b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*24c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*24d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*24e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*24f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2500*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2510*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2520*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2530*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2540*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2550*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2560*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2570*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2580*/ -64, -65,   0,   0, -66, -67,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2590*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*25a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*25b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*25c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*25d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*25e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*25f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2600*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2610*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2620*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2630*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2640*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2650*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2660*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2670*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2680*/   0,   0, -68, -69,   0,   0, -70, -71,   0,   0,   0,   0,   0,   0,   0,   0,
/*2690*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*26a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*26b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*26c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*26d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*26e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*26f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2700*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2710*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2720*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2730*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2740*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2750*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2760*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2770*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2780*/   0,   0,   0,   0,   0,   0,   0,   0, 157, 154,   0,   0,   0,   0,   0,   0,
/*2790*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*27a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*27b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*27c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*27d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*27e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*27f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2800*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2810*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2820*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2830*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2840*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2850*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2860*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2870*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2880*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 130,   0,   0,   0,   0,
/*2890*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*28a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*28b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*28c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*28d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*28e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*28f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2900*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2910*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2920*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2930*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2940*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2950*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2960*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2970*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2980*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2990*/  40, 133,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*29a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*29b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*29c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*29d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*29e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*29f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2a90*/   0,   0, 135, 132,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2aa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ab0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ac0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ad0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ae0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2af0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2b90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   5,   3,   0,   0,   0,   0,
/*2ba0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2bb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2bc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2bd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2be0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2bf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2c90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  82,  50,   0,   0,
/*2ca0*/   0,   0,   0,   0,   0,   0,   0,   0, 270,   0, 175, 174, 173,  84,  80,  83,
/*2cb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2cc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2cd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ce0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2cf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2d90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2da0*/   0,   0,   0,   0,   0,   0,   0,   0,  46, 258,   0,   0,   0,   0,   0,   0,
/*2db0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2dc0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2dd0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2de0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2df0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2e90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ea0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  48, 260,   0,   0,   0,   0,
/*2eb0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ec0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ed0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ee0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2ef0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f60*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2f90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*2fa0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  47, 259,   0,   0,
/*2fb0*/  89,  78,  41,  43, 134, 136, 189,   0, -72, -73, 138, 161,   0,   0,  49,   0,
/*2fc0*/  94, 275,   0, 272,   0, -74, 492, 495,   0,   0,   0,   0,   0,   0,   0,   0,
/*2fd0*/   0,   0,   0,   0,   0,   0,   0,   0, 166, 167, 166, 167, 169,   0, 169,   0,
/*2fe0*/   0,   0,   0,   0,   0,   0,   0,   0, 276, 211, 209, 210, 266, 267,   0,   0,
/*2ff0*/   0,   0,   0,   0,   0,   0,   0,   0,  57,  58,  59,  60,  61,  62,  63,  64,
/*3000*/  65,  66,  67,  68,  69,  70,  71,  72,   0,   0,   0,   0,   0,   0,   0,   0,
/*3010*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3020*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3030*/   0,   0,   0,   0,   0,   0,   0,   0, 114, 115, 116, 117, 118, 119, 120, 121,
/*3040*/ 122, 123, 124, 125, 126, 127, 128, 129, 226, 227, 228, 229, 230, 231, 232, 233,
/*3050*/ 234, 235, 236, 237, 238, 239, 240, 241, 194, 187,  73,  32, 254, 253,   0,   0,
/*3060*/ 195, 188, 220,  38, 256, 255, -75,  85,  55,  55, 143,  36, 141, 142, 172, 172,
/*3070*/   0, 271, -76,  34,  29,  30, 171, 171, 277, 277,   0,   0,   0,   0,   0,  56,
/*3080*/  31,  31,  31,  31,  31,  31,  31,  31,   0,   0,   0,   0,   0,   0,   0,   0,
/*3090*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*30a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*30b0*/   0,   0,   0,   0,   0,   0,   0,   0, 287, 358, 304, 308, 393, 401, 321, 329,
/*30c0*/ 288, 359, 305, 309, 394, 402, 322, 330, 289, 360, 306, 310, 395, 403, 323, 331,
/*30d0*/ 290, 361, 307, 311, 396, 404, 324, 332, 342,   0, 367, 371, 413, 410, 459, 455,
/*30e0*/ 343,   0, 368, 372, 414, 411, 460, 456, 344,   0, 369, 373, 415, 412, 461, 457,
/*30f0*/ 345, 478, 424,   0, -77, -78, -79, -80, 287, 358, 304, 308, 393, 401, 321, 329,
/*3100*/ 288, 359, 305, 309, 394, 402, 322, 330, 289, 360, 306, 310, 395, 403, 323, 331,
/*3110*/ 290, 361,   0,   0, 396, 404, 324, 332, -81,   0, -82, -83, 291, 362, 312, 315,
/*3120*/ 397, 405, 325, 333, 292, 363, 313, 316, 398, 406, 326, 334, 293, 364, 314, 317,
/*3130*/ 399, 407, 327, 335, 443, 445, 447, 449,   0, 476,   0,   0, 349, 387, 378, 381,
/*3140*/   0, 346,   0, 375, 350, 388, 379, 382,   0, 347,   0, 376, 351, 389, 380, 383,
/*3150*/   0, 348,   0, 377, 444, 446, 448, 450, -84, 490, 488,   0, 291, 362, 312, 315,
/*3160*/ 397, 405, 325, 333, 292, 363, 313, 316, 398, 406, 326, 334, 293, 364, 314, 317,
/*3170*/ 399, 407, 327, 335,   0,   0,   0,   0,   0,   0,   0,   0, -85, -86, -87, -88,
/*3180*/ 287, 358, 304, 308, 393, 401, 321, 329, 288, 359, 305, 309, 394, 402, 322, 330,
/*3190*/ 289, 360, 306, 310, 395, 403, 323, 331, 290, 361,   0,   0, 396, 404, 324, 332,
/*31a0*/ -89,   0, -90, -91, 287, 358, 304, 308, 393, 401, 321, 329, 288, 359, 305, 309,
/*31b0*/ 394, 402, 322, 330, 289, 360, 306, 310, 395, 403, 323, 331, 290, 361,   0,   0,
/*31c0*/ 396, 404, 324, 332, 342, 390, 367, 371, 430,   0, 435, 467, 343, 391, 368, 372,
/*31d0*/ 431,   0, 436, 468, 344, 392, 369, 373, 432,   0, 437, 469, 341,   0, 370, 374,
/*31e0*/ 474, 475,   0,   0, 291, 362, 312, 315, 397, 405, 325, 333, 292, 363, 313, 316,
/*31f0*/ 398, 406, 326, 334, 293, 364, 314, 317, 399, 407, 327, 335,   0,   0,   0,   0,
/*3200*/   0,   0,   0,   0, -92, -93, -94, -95, 291, 362, 312, 315, 397, 405, 325, 333,
/*3210*/ 292, 363, 313, 316, 398, 406, 326, 334, 293, 364, 314, 317, 399, 407, 327, 335,
/*3220*/ 294, 365,   0, 318, 408, 400, 336, 328, 349, 387, 378, 381, 295, 352, 298, 384,
/*3230*/ 350, 388, 379, 382, 296, 353, 299, 385, 351, 389, 380, 383, 297, 354, 300, 386,
/*3240*/   0,   0,   0,   0, 471, 491, 489,   0, 252, 262, 148, 160, 273, 274,   0,   0,
/*3250*/ 248, -96, 146, 147, 257,   0, 149,  95, 493, 494, -97, -98,   0,   0,   0,   0,
/*3260*/  33,  39,  37,  35,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3270*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3280*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3290*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*32a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*32b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*32c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*32d0*/ -99,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*32e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*32f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3300*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3310*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3320*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3330*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3340*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3350*/-100,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3360*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3370*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3380*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3390*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*33a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*33b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*33c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*33d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*33e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*33f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3400*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3410*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3420*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3430*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3440*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 409, 418, 419, 420,
/*3450*/ 421, 422, 423,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3460*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3470*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3480*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3490*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*34a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*34b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*34c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*34d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*34e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*34f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3500*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3510*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3520*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3530*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3540*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3550*/   0,   0,   0,   0, 285, 486, 425, 426, 485, 427, 320, 355,   0,   0,   0,   0,
/*3560*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3570*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3580*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3590*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*35a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*35b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*35c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*35d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*35e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*35f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3600*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3610*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3620*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3630*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3640*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3650*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 428, 487, 451, 452,
/*3660*/ 429, 453, 454, 319, 342, 343, 344,   0, 367, 368, 369,   0, 371, 372, 373,   0,
/*3670*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3680*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3690*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*36a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*36b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*36c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*36d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*36e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*36f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3700*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3710*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3720*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3730*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3740*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3750*/ 339, 337, 302, 356, 366,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3760*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3770*/ 349, 350, 351,   0, 387, 388, 389,   0, 378, 379, 380,   0, 381, 382, 383,   0,
/*3780*/ 342, 343, 344,   0, 367, 368, 369,   0, 371, 372, 373,   0, 349, 350, 351,   0,
/*3790*/ 387, 388, 389,   0, 378, 379, 380,   0, 381, 382, 383,   0,   0, 249,   0,   0,
/*37a0*/   0,   0,   0,   0,   0, 250,   0,   0,   0,   0,   0,   0,   0, 251,   0,   0,
/*37b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 482, 483, 484,   0,
/*37c0*/ 479, 480, 481,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*37d0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*37e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*37f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 301, 473,   0,   0,
/*3800*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3810*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3820*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3830*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 286, 477,   0,   0,
/*3840*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3850*/   0,   0,   0,  -1,   0,  -2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3860*/   0,   0,   0,   0, 574, 575,  -3,  -4, 672, 671,  -5,  -6,  -7,   0,   0,   0,
/*3870*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 544, 545, 529,  -8,
/*3880*/ 532, 531, 670, 527,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3890*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*38a0*/   0,   0,   0,   0, 562, 665, 662, 661, 522, 521, 578, 673, 520, 576, 530, 528,
/*38b0*/ 669, 542, 533, 540, 657, 659, 658, 580, 597, 599, 598, 581, 654, 656, 655, 579,
/*38c0*/   0,   0, 546, 572, 629,  -9, -10, -11, 594, 596, 595, 534,   0,   0,   0,   0,
/*38d0*/   0,   0, 547, 573,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*38e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*38f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3900*/   0,   0, -12,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3910*/   0,   0,   0,   0,   0,   0, 526, -13, -14, 600, 664,   0,   0,   0,   0,   0,
/*3920*/   0,   0,   0,   0,   0, 645, 641, 643, 584, 613,   0, 610, 651, 652, 609, 590,
/*3930*/ 587, 588, 607, 591, 592, 639, 637, 593, 611, 612,   0, -15, 649, 650, 608, 615,
/*3940*/ 585, 586, 606, 660,   0, 635, 631, 633, 614, 605, 628, 539, 646, 653, 647, 648,
/*3950*/ 582, 589, 583,   0, 543,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3960*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3970*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3980*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3990*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*39a0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*39b0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*39c0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*39d0*/   0,   0,   0,   0, 577,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*39e0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*39f0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3a50*/   0,   0,   0,   0, 555, 556, 557, 558, 559, 560, 561,   0, 548, 549, 550, 551,
/*3a60*/ 552, 553, 554,   0, -16, -17, -18, -19, 566, 567, 568,   0,   0,   0,   0,   0,
/*3a70*/   0,   0,   0,   0,   0,   0,   0,   0,   0, 644, 638, 634,   0,   0,   0,   0,
/*3a80*/   0,   0,   0,   0,   0,   0,   0,   0,   0, 640, 636, 630,   0,   0,   0,   0,
/*3a90*/   0,   0,   0,   0,   0,   0,   0,   0,   0, 642,   0, 632,   0,   0, 535, 666,
/*3aa0*/   0,   0,   0, 523,   0,   0, 536, 667,   0,   0,   0, 524,   0,   0, 537, 668,
/*3ab0*/   0,   0,   0, 525,   0,   0,   0,   0,   0, 538, 541, 663, 563, 564, 565,   0,
/*3ac0*/ 601, 602, 603, 604, 569, 570, 571,   0, 616, 617, 618,   0, 619, 620, 621,   0,
/*3ad0*/ 622, 623, 624,   0, 625, 626, 627,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ae0*/   0,   0,   0,   0,   0,   0,   0,  -1,   0,   0,   0,   0,   0,   0,   0,   0,
/*3af0*/   0,   0,   0,   0,   0,   0,   0,   0, 718, 719,  -2,  -3, 801, 800,  -4,  -5,
/*3b00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b10*/ 692, 693, 682,  -6, 685, 680, 799, 679,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b30*/   0,   0,   0,   0,   0,   0,   0,   0, 710, 797,   0,   0, 677, 676, 721, 802,
/*3b40*/ 674, 720, 681, 683, 798, 691, 686, 690, 792, 794, 793, 723, 740, 742, 741, 724,
/*3b50*/ 788, 790, 789, 722, 791, 787, 694, 696, 760,  -7,  -8,  -9, 737, 739, 738,   0,
/*3b60*/   0,   0,   0,   0, 687, 688, 695, 697,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3b90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ba0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 678,   0, -10, 743, 796,   0,
/*3bb0*/   0,   0,   0,   0,   0,   0,   0,   0, 675, 778, 774, 776, 727, 756, 717, 753,
/*3bc0*/ 784, 785, 752, 733, 730, 731, 750, 734, 735, 771, 769, 736, 754, 755, 684, -11,
/*3bd0*/ 782, 783, 751, 758, 728, 729, 749, 795,   0, 767, 763, 765, 757, 748, 759, 689,
/*3be0*/ 779, 786, 780, 781, 725, 732, 726,   0, 704, 705, 706,   0, 707, 708, 709,   0,
/*3bf0*/ 698, 699, 700,   0, 701, 702, 703,   0, 714, 715, 716,   0,   0,   0,   0,   0,
/*3c00*/   0,   0,   0,   0,   0,   0,   0,   0,   0, 777, 770, 766,   0,   0,   0,   0,
/*3c10*/   0,   0,   0,   0,   0,   0,   0,   0,   0, 773, 768, 762,   0,   0,   0,   0,
/*3c20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3c30*/   0,   0,   0,   0,   0,   0, 775, 772,   0,   0, 764, 761, 744, 745, 746, 747,
/*3c40*/ 711, 712, 713,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3c50*/   0,   0,   0,  -1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3c60*/   0,   0,   0,   0, 821, 822, 819,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3c70*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 809,   0,
/*3c80*/ 810, 807,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3c90*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ca0*/   0,   0,   0,   0,   0, 825,   0,   0,   0,   0,   0,   0, 803, 823, 808,   0,
/*3cb0*/ 826, 818, 811, 817,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3cc0*/   0,   0,   0,   0, 824,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3cd0*/ 812, 813,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3ce0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3cf0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d10*/   0,   0,   0,   0,   0,   0, 805,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d20*/   0,   0,   0,   0, 804,   0,   0,   0,   0,   0, 820,   0,   0,   0,   0,   0,
/*3d30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 806,   0,   0,   0,   0,   0,
/*3d40*/   0,   0,   0,   0,  -2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d50*/   0,   0,   0,   0, 814, 815, 816,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d60*/   0,   0,   0,   0,   0,   0,   0,  -1,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d70*/   0,   0,   0,   0,   0,   0,   0,   0, 844, 845, 843,   0,   0,   0, 842,   0,
/*3d80*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3d90*/   0,   0, 830,   0, 834, 832,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3da0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3db0*/   0,   0,   0,   0,   0,   0,   0,   0,   0, 851, 850, 849,   0,   0,   0,   0,
/*3dc0*/ 827, 846, 831, 833, 852, 837, 835, 836,   0,   0,   0,   0,   0,   0,   0,   0,
/*3dd0*/   0,   0,   0,   0,   0,   0,   0, 838, 848,   0,   0,   0,   0,   0,   0,   0,
/*3de0*/   0,   0,   0,   0,   0,   0, 840, 839,   0,   0,   0,   0,   0,   0,   0,   0,
/*3df0*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3e00*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3e10*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3e20*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 828,   0,   0,   0,   0,   0,
/*3e30*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 841,   0,
/*3e40*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 829,   0,
/*3e50*/   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*3e60*/   0,   0,   0,   0,   0,   0,   0,   0,};
