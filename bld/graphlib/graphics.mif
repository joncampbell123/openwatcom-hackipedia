proj_name = graph

graph_autodepends = .AUTODEPEND

graph_distrib_lib = 1

suppress_zc = 1

memory_model_i86 = s
!ifeq host_os dos
memory_model_386 = s
!else ifeq host_os qnx
memory_model_386 = s
!endif

suffix_register = r
suffix_stack = s

fpu_flags_dos_i86 = -fpc
fpu_flags_dos_386 = -fpc
fpu_flags_qnx_i86 = -fpc
fpu_flags_qnx_386 = -fpc
fpu_flags_os2_i86 = -fpc
fpu_flags_os2_386 = -fpc
fpu_flags_win_i86 = -fpc

objs = &
        sqrtf.obj &
        std.obj &
        activepg.obj &
        arc.obj &
        bkcolor.obj &
        clearscr.obj &
        clip.obj &
        cliprgn.obj &
        color.obj &
        cursor.obj &
        devutils.obj &
        dispcurs.obj &
        ellipse.obj &
        fillmask.obj &
        floodfll.obj &
        fontsupp.obj &
        getconf.obj &
        getimage.obj &
        getlogc.obj &
        getphysc.obj &
        getpos.obj &
        global.obj &
        grstatus.obj &
        grtext.obj &
        gtxtext.obj &
        gtxtset.obj &
        imagesiz.obj &
        l1block.obj &
        l1clip.obj &
        l1ellips.obj &
        l1fillar.obj &
        l1getdot.obj &
        l1getpic.obj &
        l1hersh.obj &
        l1line.obj &
        l1paint.obj &
        l1putdot.obj &
        l1text.obj &
        lineto.obj &
        lnstyle.obj &
        logorg.obj &
        moveto.obj &
        outtext.obj &
        pie.obj &
        pixel.obj &
        plotactn.obj &
        polygon.obj &
        putchar.obj &
        putimage.obj &
        rectangl.obj &
        remappal.obj &
        scrollw.obj &
        setchsiz.obj &
        setchspc.obj &
        setrows.obj &
        settxpth.obj &
        settxtal.obj &
        settxtor.obj &
        setvideo.obj &
        setviewp.obj &
        setwind.obj &
        stylwrap.obj &
        textcol.obj &
        textpos.obj &
        textwind.obj &
        visualpg.obj &
        windfunc.obj &
        wrapon.obj &
        zarc.obj &
        zchsize.obj &
        zellipse.obj &
        zfloodfl.obj &
        zgetimag.obj &
        zgrtext.obj &
        zimagesi.obj &
        zlineto.obj &
        zmoveto.obj &
        zpie.obj &
        zpixel.obj &
        zpolygon.obj &
        zputimag.obj &
        zrectang.obj

eng_nonwin_objs = &
        8x8font.obj &
        bit.obj &
        gstklow.obj &
        l0drwlin.obj &
        l0ellips.obj &
        l1fill.obj &
        l1putpic.obj &
        lineutil.obj &
        seginit.obj &
        transpar.obj &
        visit.obj &

english_objs = &
        cgautils.obj &
        cnvcolor.obj &
        egautils.obj &
        fast256.obj &
        hercfont.obj &
        hgcutils.obj &
        svgautil.obj &
        vgautils.obj &
        grcga.obj &
        grega.obj &
        grhgc.obj &
        grsvga.obj &
        grvga.obj &
        selpal.obj &
        setmode.obj &
        svgainfo.obj &
        sysmtype.obj

win_objs = &
        gphmain.obj &
        winutil.obj &

special_objs = &
        fsmath.obj &
        dummy.obj

!ifeq host_os win
objs += $(win_objs)
!else
objs += $(eng_nonwin_objs)
objs += $(english_objs)
!endif

!include cproj.mif
!include defrule.mif
!include deftarg.mif

inc_dirs = -I"$(dev_dir)/graphlib/h" -I"$(mathlib_dir)/h"
!ifeq host_os qnx
inc_dirs += -I"$(hdr_dir)/qnx"
!else ifeq host_os win
inc_dirs += -I"$(hdr_dir)/dos" -I"$(clib_dir)/h" -I"$(clib_dir)/defwin/h" -I"$(lib_misc_dir)/h" -I"$(wpi_dir)/h"
!else
inc_dirs += -I"$(hdr_dir)/dos"
!endif

!ifeq host_cpu 386
.asm: $(dev_dir)/graphlib/386asm #;$(dev_dir)/graphlib/asm
!else
!endif
.asm: $(dev_dir)/graphlib/asm

.c: ../c

extra_c_flags = -os -s -zl -D_ENABLE_AUTODEPEND -nm=$[&$(suffix_$(convention)) -D_SUPERVGA -D_FARD= $(extra_c_flags_$(machine)) -fo=$@

extra_c_flags_i86 = -nt=GRAPH_TEXT -D_CGRAPH=_loadds
extra_c_flags_386_ms_dos = -r
extra_c_flags_386_ms_qnx = -r
extra_c_flags_386_register = -3r
extra_c_flags_386_stack = -3s -d__STACK
extra_c_flags_386 = $(extra_c_flags_386_$(convention)) $(extra_c_flags_386_m$(memory_model_386)_$(host_os)) -D_CGRAPH=

extra_c_flags_qnx = -bt=dos # ?????

extra_a_flags = -ms -i"../inc" $(extra_a_flags_$(machine)) -fo=$@

extra_a_flags_i86 = -D_TEXT=GRAPH_TEXT
extra_a_flags_386_register = -3r
extra_a_flags_386_stack = -3s
extra_a_flags_386 = $(extra_a_flags_386_$(convention))

extra_a_flags_qnx = -D_QNX

$(libname).lib : $(special_objs) $(objs)
        %create $^&.lbc
        @for %i in ($(objs)) do @%append $^&.lbc +%i
        $(librarian) $(libflags) @$^&.lbc
